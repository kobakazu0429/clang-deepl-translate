// Vitest Snapshot v1

exports[`parser > snapshot 1`] = `"일 type 영 is an abstract class"`;

exports[`parser > snapshot 2`] = `"영 is a 일 member of 영"`;

exports[`parser > snapshot 3`] = `"일constructor"`;

exports[`parser > snapshot 4`] = `"calling a 일 constructor of class 영"`;

exports[`parser > snapshot 5`] = `"calling a 일 destructor of class 영"`;

exports[`parser > snapshot 6`] = `"base class 영 has 일 destructor"`;

exports[`parser > snapshot 7`] = `"exception object of type 영 has 일 destructor"`;

exports[`parser > snapshot 8`] = `"field of type 영 has 일 destructor"`;

exports[`parser > snapshot 9`] = `"instance variable of type 영 has 일 destructor"`;

exports[`parser > snapshot 10`] = `"temporary of type 영 has 일 destructor"`;

exports[`parser > snapshot 11`] = `"variable of type 영 has 일 destructor"`;

exports[`parser > snapshot 12`] = `"inherited virtual base class 영 has 일 destructor"`;

exports[`parser > snapshot 13`] = `"field of type 영 has 일constructor"`;

exports[`parser > snapshot 14`] = `"friend function 영 is a 일 member of 영"`;

exports[`parser > snapshot 15`] = `"capture of variable '영' as type 영 calls 일constructor"`;

exports[`parser > snapshot 16`] = `"address of overloaded function 영 is ambiguous"`;

exports[`parser > snapshot 17`] = `"cannot form member pointer of type 영 without '&' and class name"`;

exports[`parser > snapshot 18`] = `"address of overloaded function 영 does not match required type 영"`;

exports[`parser > snapshot 19`] = `"address of overloaded function 영 cannot be converted to type 영"`;

exports[`parser > snapshot 20`] = `"cannot take address of function 영 because parameter 영 has pass_object_size attribute"`;

exports[`parser > snapshot 21`] = `"conflicting address space qualifiers are provided between types 영 and 영"`;

exports[`parser > snapshot 22`] = `"'delete' cannot delete objects of type 영 in address space '영'"`;

exports[`parser > snapshot 23`] = `"'new' cannot allocate objects of type 영 in address space '영'"`;

exports[`parser > snapshot 24`] = `"cannot take address of function 영 because its constraints are not satisfied"`;

exports[`parser > snapshot 25`] = `"cannot take address of function 영 because it has one or more non-tautological enable_if conditions"`;

exports[`parser > snapshot 26`] = `"TLS model '영' is not yet supported on AIX"`;

exports[`parser > snapshot 27`] = `"alias definition of 영 after tentative definition"`;

exports[`parser > snapshot 28`] = `"definition 영 cannot also be an 일"`;

exports[`parser > snapshot 29`] = `"영 attribute cannot be applied to a 일"`;

exports[`parser > snapshot 30`] = `"redeclaration has different alignment requirement (영 vs 영)"`;

exports[`parser > snapshot 31`] = `"영 must be specified on definition if it is specified on any declaration"`;

exports[`parser > snapshot 32`] = `"requested alignment is less than minimum alignment of 영 for type 영"`;

exports[`parser > snapshot 33`] = `"aligned 일"`;

exports[`parser > snapshot 34`] = `"requested alignment must be 영 or smaller"`;

exports[`parser > snapshot 35`] = `"requested alignment must be 영 or greater"`;

exports[`parser > snapshot 36`] = `"allocating an object of abstract class type 영"`;

exports[`parser > snapshot 37`] = `"ambiguous cast from base 영 to derived 영:영"`;

exports[`parser > snapshot 38`] = `"ambiguous conversion of delete expression of type 영 to a pointer"`;

exports[`parser > snapshot 39`] = `"ambiguous conversion from derived class 영 to base class 영:영"`;

exports[`parser > snapshot 40`] = `"constructor of 영 inherited from multiple base class subobjects"`;

exports[`parser > snapshot 41`] = `"member 영 found in multiple base classes of different types"`;

exports[`parser > snapshot 42`] = `"non-static member 영 found in multiple base-class subobjects of type 영:영"`;

exports[`parser > snapshot 43`] = `"ambiguous conversion from pointer to member of 일 class 영:영"`;

exports[`parser > snapshot 44`] = `"reference to 영 is ambiguous"`;

exports[`parser > snapshot 45`] = `"multiple suitable 영 functions in 영"`;

exports[`parser > snapshot 46`] = `"a type named 영 is hidden by a declaration in a different namespace"`;

exports[`parser > snapshot 47`] = `"anonymous bit-field has negative width (영)"`;

exports[`parser > snapshot 48`] = `"anonymous 영 can only contain non-static data members"`;

exports[`parser > snapshot 49`] = `"member of anonymous 일 redeclares 영"`;

exports[`parser > snapshot 50`] = `"anonymous 영 data member"`;

exports[`parser > snapshot 51`] = `"functions cannot be declared in an anonymous 영"`;

exports[`parser > snapshot 52`] = `"static members cannot be declared in an anonymous 영"`;

exports[`parser > snapshot 53`] = `"types cannot be declared in an anonymous 영"`;

exports[`parser > snapshot 54`] = `"anonymous 영 members"`;

exports[`parser > snapshot 55`] = `"일"`;

exports[`parser > snapshot 56`] = `"existing instance variable 영 for property 영 with 일 attribute must be __unsafe_unretained"`;

exports[`parser > snapshot 57`] = `"cannot perform atomic operation on a pointer to type 영: type has non-trivial ownership"`;

exports[`parser > snapshot 58`] = `"cannot capture __autoreleasing variable in a 영"`;

exports[`parser > snapshot 59`] = `"영 cannot have __autoreleasing ownership"`;

exports[`parser > snapshot 60`] = `"incompatible types casting 영 to 영 with a 일 cast"`;

exports[`parser > snapshot 61`] = `"cast of 일"`;

exports[`parser > snapshot 62`] = `"일 pointer type 영 requires a bridged cast"`;

exports[`parser > snapshot 63`] = `"collection expression type 영 is a forward declaration"`;

exports[`parser > snapshot 64`] = `"일 of weak-unavailable object of type 영 to a __weak object of type 영"`;

exports[`parser > snapshot 65`] = `"ARC forbids explicit message send of 영"`;

exports[`parser > snapshot 66`] = `"ARC forbids 일 of 영"`;

exports[`parser > snapshot 67`] = `"ARC forbids use of 영 in a @selector"`;

exports[`parser > snapshot 68`] = `"일"`;

exports[`parser > snapshot 69`] = `"일 to non-const type 영 with no explicit ownership"`;

exports[`parser > snapshot 70`] = `"method was declared as 영"`;

exports[`parser > snapshot 71`] = `"no visible @interface for 영 declares the selector 영"`;

exports[`parser > snapshot 72`] = `"no known 일 method for selector 영"`;

exports[`parser > snapshot 73`] = `"일 to 영 is disallowed with ARC"`;

exports[`parser > snapshot 74`] = `"multiple methods named 영 found with mismatched result, parameter type or attributes"`;

exports[`parser > snapshot 75`] = `"'new' cannot allocate an array of 영 with no explicit ownership"`;

exports[`parser > snapshot 76`] = `"passing address of 영 object to __autoreleasing parameter for write-back"`;

exports[`parser > snapshot 77`] = `"pseudo-destructor destroys object of type 영 with inconsistently-qualified type 영"`;

exports[`parser > snapshot 78`] = `"receiver 영 for class message is a forward declaration"`;

exports[`parser > snapshot 79`] = `"receiver type 영 for instance message is a forward declaration"`;

exports[`parser > snapshot 80`] = `"existing instance variable 영 for strong property 영 may not be 일"`;

exports[`parser > snapshot 81`] = `"thread-local variable has non-trivial ownership: type is 영"`;

exports[`parser > snapshot 82`] = `"incompatible pointer types passing retainable parameter of type 영to a CF function expecting 영 type"`;

exports[`parser > snapshot 83`] = `"synthesizing __weak instance variable of type 영, which does not support weak references"`;

exports[`parser > snapshot 84`] = `"argument value 영 is outside the valid range [영, 영]"`;

exports[`parser > snapshot 85`] = `"argument 영 value should represent a contiguous bit field"`;

exports[`parser > snapshot 86`] = `"argument should be a multiple of 영"`;

exports[`parser > snapshot 87`] = `"arithmetic on pointer to interface 영, which is not a constant size for this architecture and platform"`;

exports[`parser > snapshot 88`] = `"coprocessor 영 must be configured as 일"`;

exports[`parser > snapshot 89`] = `"array designator range [영, 영] is empty"`;

exports[`parser > snapshot 90`] = `"array designator value '영' is negative"`;

exports[`parser > snapshot 91`] = `"array designator cannot initialize non-array type 영"`;

exports[`parser > snapshot 92`] = `"array designator index (영) exceeds array bounds (영)"`;

exports[`parser > snapshot 93`] = `"array has 일 element type 영"`;

exports[`parser > snapshot 94`] = `"cannot initialize array 영"`;

exports[`parser > snapshot 95`] = `"cannot initialize array 영"`;

exports[`parser > snapshot 96`] = `"array initializer must be an initializer list영"`;

exports[`parser > snapshot 97`] = `"영"`;

exports[`parser > snapshot 98`] = `"array of abstract class type 영"`;

exports[`parser > snapshot 99`] = `"ambiguous conversion of array size expression of type 영 to an integral or enumeration type"`;

exports[`parser > snapshot 100`] = `"array size expression of type 영 requires explicit conversion to type 영"`;

exports[`parser > snapshot 101`] = `"array size expression has incomplete class type 영"`;

exports[`parser > snapshot 102`] = `"size of array has non-integer type 영"`;

exports[`parser > snapshot 103`] = `"array size expression must have integral or 일enumeration type, not 영"`;

exports[`parser > snapshot 104`] = `"영 used in non-outermost array type derivation"`;

exports[`parser > snapshot 105`] = `"영 used in array declarator outside of function prototype"`;

exports[`parser > snapshot 106`] = `"array is too large (영 elements)"`;

exports[`parser > snapshot 107`] = `"automatic variable qualified with an영 address space"`;

exports[`parser > snapshot 108`] = `"asm operand has incomplete type 영"`;

exports[`parser > snapshot 109`] = `"more than one input constraint matches the same output '영'"`;

exports[`parser > snapshot 110`] = `"register '영' unsuitable for global register variables on this target"`;

exports[`parser > snapshot 111`] = `"invalid input constraint '영' in asm"`;

exports[`parser > snapshot 112`] = `"invalid input size for constraint '영'"`;

exports[`parser > snapshot 113`] = `"invalid lvalue in asm input for constraint '영'"`;

exports[`parser > snapshot 114`] = `"invalid output constraint '영' in asm"`;

exports[`parser > snapshot 115`] = `"invalid output size for constraint '영'"`;

exports[`parser > snapshot 116`] = `"reference to a 일 with a memory constraint '영'"`;

exports[`parser > snapshot 117`] = `"size of register '영' does not match variable size"`;

exports[`parser > snapshot 118`] = `"unsupported inline asm: input with type 영"`;

exports[`parser > snapshot 119`] = `"asm constraint has an unexpected number of alternatives: 영 vs 영"`;

exports[`parser > snapshot 120`] = `"unknown register name '영' in asm"`;

exports[`parser > snapshot 121`] = `"type 영 in generic association compatible with previously specified type 영"`;

exports[`parser > snapshot 122`] = `"type 영 in generic association incomplete"`;

exports[`parser > snapshot 123`] = `"type 영 in generic association not an object type"`;

exports[`parser > snapshot 124`] = `"type 영 in generic association is a variably modified type"`;

exports[`parser > snapshot 125`] = `"address argument to atomic builtin cannot be const-qualified (영 invalid)"`;

exports[`parser > snapshot 126`] = `"address argument to atomic builtin must be a pointer (영 invalid)"`;

exports[`parser > snapshot 127`] = `"address argument to atomic builtin must be a pointer to integer, floating-point or pointer (영 invalid)"`;

exports[`parser > snapshot 128`] = `"address argument to atomic builtin must be a pointer to integer or pointer (영 invalid)"`;

exports[`parser > snapshot 129`] = `"address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (영 invalid)"`;

exports[`parser > snapshot 130`] = `"address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (영 invalid)"`;

exports[`parser > snapshot 131`] = `"atomic 영 requires runtime support that is not available for this target"`;

exports[`parser > snapshot 132`] = `"address argument to atomic operation must be a pointer to _Atomic type (영 invalid)"`;

exports[`parser > snapshot 133`] = `"address argument to atomic operation must be a pointer to 일integer (영 invalid)"`;

exports[`parser > snapshot 134`] = `"address argument to atomic operation must be a pointer to 일integer or pointer (영 invalid)"`;

exports[`parser > snapshot 135`] = `"address argument to atomic operation must be a pointer to 일integer, pointer or supported floating point type (영 invalid)"`;

exports[`parser > snapshot 136`] = `"address argument to atomic operation must be a pointer to non-일 _Atomic type (영 invalid)"`;

exports[`parser > snapshot 137`] = `"address argument to atomic operation must be a pointer to non-const type (영 invalid)"`;

exports[`parser > snapshot 138`] = `"address argument to atomic operation must be a pointer to a trivially-copyable type (영 invalid)"`;

exports[`parser > snapshot 139`] = `"atomic property of reference type 영 cannot have non-trivial assignment operator"`;

exports[`parser > snapshot 140`] = `"_Atomic cannot be applied to 일"`;

exports[`parser > snapshot 141`] = `"@protocol is using a forward protocol declaration of 영"`;

exports[`parser > snapshot 142`] = `"영 attribute expression never produces a constant expression"`;

exports[`parser > snapshot 143`] = `"the type 영 is already explicitly ownership-qualified"`;

exports[`parser > snapshot 144`] = `"영 attribute can only be applied to a 일 with an error parameter"`;

exports[`parser > snapshot 145`] = `"영 attribute with '영' convention can only be applied to a 일"`;

exports[`parser > snapshot 146`] = `"address space is larger than the maximum supported (영)"`;

exports[`parser > snapshot 147`] = `"requested alignment must be 영 bytes or smaller"`;

exports[`parser > snapshot 148`] = `"영 attribute argument is invalid: 일"`;

exports[`parser > snapshot 149`] = `"영 attribute must be greater than 0"`;

exports[`parser > snapshot 150`] = `"영 attribute requires parameter 영 to be 일"`;

exports[`parser > snapshot 151`] = `"영 attribute parameter 영 is out of bounds"`;

exports[`parser > snapshot 152`] = `"영 attribute parameter 영 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and 영}2"`;

exports[`parser > snapshot 153`] = `"영 attribute requires integer constant between 영 and 영 inclusive"`;

exports[`parser > snapshot 154`] = `"영 attribute requires 일"`;

exports[`parser > snapshot 155`] = `"영 is only supported when '-msve-vector-bits=<bits>' is specified with a value of 128, 256, 512, 1024 or 2048."`;

exports[`parser > snapshot 156`] = `"invalid SVE vector size '영', must match value set by '-msve-vector-bits' ('영')"`;

exports[`parser > snapshot 157`] = `"영 attribute can only be applied to a ARM or RISC-V builtin"`;

exports[`parser > snapshot 158`] = `"'cleanup' argument 일function"`;

exports[`parser > snapshot 159`] = `"'cleanup' function 영 parameter has 일"`;

exports[`parser > snapshot 160`] = `"'cleanup' function 영 must take 1 parameter"`;

exports[`parser > snapshot 161`] = `"'__declspec(dllexport)' cannot be applied to more than one default constructor in 영"`;

exports[`parser > snapshot 162`] = `"attribute 영 cannot be applied to a deleted function"`;

exports[`parser > snapshot 163`] = `"lambda cannot be declared 영"`;

exports[`parser > snapshot 164`] = `"attribute 영 cannot be applied to member of 일 class"`;

exports[`parser > snapshot 165`] = `"영 must have external linkage when declared 일"`;

exports[`parser > snapshot 166`] = `"redeclaration of 영 cannot add 일 attribute"`;

exports[`parser > snapshot 167`] = `"영 cannot be thread local when declared 일"`;

exports[`parser > snapshot 168`] = `"영 attribute argument may only refer to a function parameter of integer type"`;

exports[`parser > snapshot 169`] = `"일 is an invalid argument to attribute 영"`;

exports[`parser > snapshot 170`] = `"영 attribute is invalid for the implicit this argument"`;

exports[`parser > snapshot 171`] = `"invalid matrix element type 영"`;

exports[`parser > snapshot 172`] = `"영 attribute applied to non-SVE type 영"`;

exports[`parser > snapshot 173`] = `"invalid vector element type 영"`;

exports[`parser > snapshot 174`] = `"영 attribute has no effect on defaulted or deleted functions"`;

exports[`parser > snapshot 175`] = `"영 attribute is permitted on definitions only"`;

exports[`parser > snapshot 176`] = `"empty 영 cannot be composed with named ones"`;

exports[`parser > snapshot 177`] = `"영 attribute cannot be used with pointers to members"`;

exports[`parser > snapshot 178`] = `"function type with 영 attribute must have C linkage"`;

exports[`parser > snapshot 179`] = `"영 attribute is not supported in 일"`;

exports[`parser > snapshot 180`] = `"영 attribute is not supported on '영'"`;

exports[`parser > snapshot 181`] = `"영 attribute can only be applied once per parameter"`;

exports[`parser > snapshot 182`] = `"redeclaration of 영 must 일have the 'overloadable' attribute"`;

exports[`parser > snapshot 183`] = `"'overloadable' function 영 must have a prototype"`;

exports[`parser > snapshot 184`] = `"영 attribute only applies to일 pointer arguments"`;

exports[`parser > snapshot 185`] = `"argument 영 to 'preferred_name' attribute is not a typedef for a specialization of 영"`;

exports[`parser > snapshot 186`] = `"'regparm' parameter must be between 0 and 영 inclusive"`;

exports[`parser > snapshot 187`] = `"영 attribute requires OpenCL version 영일"`;

exports[`parser > snapshot 188`] = `"영 attribute requires a 일 integral compile time constant expression"`;

exports[`parser > snapshot 189`] = `"argument to 일 attribute is not valid for this target: 영"`;

exports[`parser > snapshot 190`] = `"영 size too large"`;

exports[`parser > snapshot 191`] = `"영 attribute cannot be applied to sizeless type 영"`;

exports[`parser > snapshot 192`] = `"영 attribute takes at least 영 argument일"`;

exports[`parser > snapshot 193`] = `"영 attribute takes no more than 영 argument일"`;

exports[`parser > snapshot 194`] = `"영 attribute is not supported on targets missing 영; specify an appropriate -march= or -mcpu="`;

exports[`parser > snapshot 195`] = `"weakref declaration of 영 must be in a global context"`;

exports[`parser > snapshot 196`] = `"weakref declaration of 영 must also have an alias attribute"`;

exports[`parser > snapshot 197`] = `"영 attribute only applies to 일"`;

exports[`parser > snapshot 198`] = `"영 attribute only applies to 영"`;

exports[`parser > snapshot 199`] = `"영 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly 영 arguments}1"`;

exports[`parser > snapshot 200`] = `"zero 영 size"`;

exports[`parser > snapshot 201`] = `"영 and 영 attributes are not compatible"`;

exports[`parser > snapshot 202`] = `"일 deduced as 영 in declaration of 영 and deduced as 영 in declaration of 영"`;

exports[`parser > snapshot 203`] = `"cannot deduce return type 영 from returned value of type 영"`;

exports[`parser > snapshot 204`] = `"'일' in return type deduced as 영 here but deduced as 영 in earlier return statement"`;

exports[`parser > snapshot 205`] = `"cannot deduce return type 영 for function with no return statements"`;

exports[`parser > snapshot 206`] = `"cannot deduce return type 영 from omitted return expression"`;

exports[`parser > snapshot 207`] = `"function 영 with deduced return type cannot be used before it is defined"`;

exports[`parser > snapshot 208`] = `"deduced conflicting types 영for initializer list element type"`;

exports[`parser > snapshot 209`] = `"new expression for type 영 contains multiple constructor arguments"`;

exports[`parser > snapshot 210`] = `"new expression for type 영 has incompatible constructor argument of type 영"`;

exports[`parser > snapshot 211`] = `"new expression for type 영 requires a constructor argument"`;

exports[`parser > snapshot 212`] = `"영 must be the only declaration in its group"`;

exports[`parser > snapshot 213`] = `"일"`;

exports[`parser > snapshot 214`] = `"variable 영 with type 영 has incompatible initializer of type 영"`;

exports[`parser > snapshot 215`] = `"cannot deduce actual type for variable 영 with type 영 from initializer list"`;

exports[`parser > snapshot 216`] = `"initializer for variable 영 with type 영 contains multiple expressions"`;

exports[`parser > snapshot 217`] = `"initializer for variable 영 with type 영 is empty"`;

exports[`parser > snapshot 218`] = `"cannot deduce type for variable 영 with type 영 from 일 initializer list"`;

exports[`parser > snapshot 219`] = `"declaration of variable 영 with deduced type 영 requires an initializer"`;

exports[`parser > snapshot 220`] = `"variable 영 declared with deduced type 영 cannot appear in its own initializer"`;

exports[`parser > snapshot 221`] = `"return type of 'await_suspend' is required to be 'void' or 'bool' (have 영)"`;

exports[`parser > snapshot 222`] = `"영 is an incomplete type"`;

exports[`parser > snapshot 223`] = `"property implementation must have its declaration in the category 영"`;

exports[`parser > snapshot 224`] = `"일 to 영, which is not a reference, pointer-to-object, or pointer-to-data-member"`;

exports[`parser > snapshot 225`] = `"address of overloaded function 영 cannot be cast to type 영"`;

exports[`parser > snapshot 226`] = `"일 from 영 to 영 converts between mismatching address spaces"`;

exports[`parser > snapshot 227`] = `"일 from bit-field lvalue to reference type 영"`;

exports[`parser > snapshot 228`] = `"일 from 영 to 영 is not allowed"`;

exports[`parser > snapshot 229`] = `"cannot 일 from member pointer type 영 to member pointer type 영 of different size"`;

exports[`parser > snapshot 230`] = `"일 from 영 to 영 casts away qualifiers"`;

exports[`parser > snapshot 231`] = `"일 from rvalue to reference type 영"`;

exports[`parser > snapshot 232`] = `"일 from scalar 영 to vector 영 of different size"`;

exports[`parser > snapshot 233`] = `"일 from 영 to 영, which are not related by inheritance, is not allowed"`;

exports[`parser > snapshot 234`] = `"일 from vector 영 to scalar 영 of different size"`;

exports[`parser > snapshot 235`] = `"일 from vector 영 to vector 영 of different size"`;

exports[`parser > snapshot 236`] = `"영 is not a class type"`;

exports[`parser > snapshot 237`] = `"영 is not polymorphic"`;

exports[`parser > snapshot 238`] = `"cannot use dynamic_cast to convert from 영 to 영"`;

exports[`parser > snapshot 239`] = `"invalid target type 영 for dynamic_cast; target type must be a reference or pointer type to a defined class"`;

exports[`parser > snapshot 240`] = `"영 cannot be used as the type of a kernel parameter"`;

exports[`parser > snapshot 241`] = `"cannot cast from lvalue of type 영 to rvalue reference type 영; types are not compatible"`;

exports[`parser > snapshot 242`] = `"left hand operand to 영 must be a 일class compatible with the right hand operand, but is 영"`;

exports[`parser > snapshot 243`] = `"right hand operand to 영 has non-pointer-to-member type 영"`;

exports[`parser > snapshot 244`] = `"function multiversioning doesn't support 일 '영'"`;

exports[`parser > snapshot 245`] = `"cannot allocate 일 type 영 with new"`;

exports[`parser > snapshot 246`] = `"영 cannot be the name of a parameter"`;

exports[`parser > snapshot 247`] = `"property implementation must have its declaration in interface 영 or one of its extensions"`;

exports[`parser > snapshot 248`] = `"bad receiver type 영"`;

exports[`parser > snapshot 249`] = `"reinterpret_cast cannot resolve overloaded function 영 to type 영"`;

exports[`parser > snapshot 250`] = `"reinterpret_cast of a 영 to 영 needs its address, which is not allowed"`;

exports[`parser > snapshot 251`] = `"cast from pointer to smaller type 영 loses information"`;

exports[`parser > snapshot 252`] = `"cannot cast from rvalue of type 영 to rvalue reference type 영; types are not compatible"`;

exports[`parser > snapshot 253`] = `"cannot cast from type 영 to member pointer type 영"`;

exports[`parser > snapshot 254`] = `"address of overloaded function 영 cannot be static_cast to type 영"`;

exports[`parser > snapshot 255`] = `"cannot cast from type 영 to pointer type 영"`;

exports[`parser > snapshot 256`] = `"영 cannot be the name of a variable or data member"`;

exports[`parser > snapshot 257`] = `"base class 영 has a flexible array member"`;

exports[`parser > snapshot 258`] = `"base class initializer 영 names both a direct base class and an inherited virtual base class"`;

exports[`parser > snapshot 259`] = `"constructor initializer 영 does not name a class"`;

exports[`parser > snapshot 260`] = `"영 attribute cannot be applied to a base specifier"`;

exports[`parser > snapshot 261`] = `"binding 영 cannot appear in the initializer of its own decomposition declaration"`;

exports[`parser > snapshot 262`] = `"__builtin_bit_cast 영 type must be trivially copyable"`;

exports[`parser > snapshot 263`] = `"__builtin_bit_cast source size does not equal destination size (영 vs 영)"`;

exports[`parser > snapshot 264`] = `"bit-field 영 has negative width (영)"`;

exports[`parser > snapshot 265`] = `"named bit-field 영 has zero width"`;

exports[`parser > snapshot 266`] = `"일 is too wide (영 bits)"`;

exports[`parser > snapshot 267`] = `"width of일 of its type (영 bit%s4)"`;

exports[`parser > snapshot 268`] = `"block cannot return 일 type 영"`;

exports[`parser > snapshot 269`] = `"blocks support disabled - compile with -fblocks or 영"`;

exports[`parser > snapshot 270`] = `"reference to non-static member function must be called영"`;

exports[`parser > snapshot 271`] = `"영 literal must be prefixed by '@' in a collection"`;

exports[`parser > snapshot 272`] = `"__builtin_btf_type_id argument 영 not a constant"`;

exports[`parser > snapshot 273`] = `"definition of builtin function 영"`;

exports[`parser > snapshot 274`] = `"영 argument to '__builtin_launder' is not allowed"`;

exports[`parser > snapshot 275`] = `"영 dimension is outside the allowed range [1, 영]"`;

exports[`parser > snapshot 276`] = `"영 argument must be a pointer to a valid matrix element type"`;

exports[`parser > snapshot 277`] = `"the pointee of the 2nd argument must match the element type of the 1st argument (영 != 영)"`;

exports[`parser > snapshot 278`] = `"영 argument must be a constant unsigned integer expression"`;

exports[`parser > snapshot 279`] = `"call to '영 function"`;

exports[`parser > snapshot 280`] = `"cannot redeclare builtin function 영"`;

exports[`parser > snapshot 281`] = `"'영' is only available in 영"`;

exports[`parser > snapshot 282`] = `"영is a C99 feature, not permitted in C++"`;

exports[`parser > snapshot 283`] = `"calling 영 with incomplete return type 영"`;

exports[`parser > snapshot 284`] = `"argument type 영 is incomplete"`;

exports[`parser > snapshot 285`] = `"calling function with incomplete return type 영"`;

exports[`parser > snapshot 286`] = `"'callback' attribute argument 영 is not a known function parameter"`;

exports[`parser > snapshot 287`] = `"'callback' argument at position 영 references unavailable implicit 'this'"`;

exports[`parser > snapshot 288`] = `"cannot find suitable 일 for property 영"`;

exports[`parser > snapshot 289`] = `"cannot form a pointer-to-member to member 영 of reference type 영"`;

exports[`parser > snapshot 290`] = `"cannot pass non-trivial C object of type 영 by value to variadic 일"`;

exports[`parser > snapshot 291`] = `"cannot pass object with interface type 영 by value through variadic 일"`;

exports[`parser > snapshot 292`] = `"cannot pass object with interface type 영 by value to variadic 일; expected type from format string was 영"`;

exports[`parser > snapshot 293`] = `"cannot pass 일"`;

exports[`parser > snapshot 294`] = `"cannot pass 일; expected type from format string was 영"`;

exports[`parser > snapshot 295`] = `"capture host variable 영 by reference in device or host device lambda function"`;

exports[`parser > snapshot 296`] = `"__block variable 영 cannot be captured in a 일"`;

exports[`parser > snapshot 297`] = `"영 in capture list does not name a variable"`;

exports[`parser > snapshot 298`] = `"영 can appear only once in a capture list"`;

exports[`parser > snapshot 299`] = `"영 cannot be captured because it does not have automatic storage duration"`;

exports[`parser > snapshot 300`] = `"by-copy capture of value of abstract type 영"`;

exports[`parser > snapshot 301`] = `"by-copy capture of variable 영 with 일 type 영"`;

exports[`parser > snapshot 302`] = `"영 declared '[[carries_dependency]]' after its first declaration"`;

exports[`parser > snapshot 303`] = `"operand of type 영 cannot be cast to a pointer type"`;

exports[`parser > snapshot 304`] = `"pointer cannot be cast to type 영"`;

exports[`parser > snapshot 305`] = `"cannot catch incomplete type 영"`;

exports[`parser > snapshot 306`] = `"cannot catch pointer to incomplete type 영"`;

exports[`parser > snapshot 307`] = `"cannot catch reference to incomplete type 영"`;

exports[`parser > snapshot 308`] = `"cannot catch 일sizeless type 영"`;

exports[`parser > snapshot 309`] = `"cannot catch variably modified type 영"`;

exports[`parser > snapshot 310`] = `"cannot define 일 for undefined class 영"`;

exports[`parser > snapshot 311`] = `"property declared in category 영 cannot be implemented in class implementation"`;

exports[`parser > snapshot 312`] = `"function declared '영' here was previously declared 일"`;

exports[`parser > snapshot 313`] = `"parameter 영 must have a complete type to use function 영 with the 영 calling convention"`;

exports[`parser > snapshot 314`] = `"function with no prototype cannot use the 영 calling convention"`;

exports[`parser > snapshot 315`] = `"variadic function cannot use 영 calling convention"`;

exports[`parser > snapshot 316`] = `"circular inheritance between 영 and 영"`;

exports[`parser > snapshot 317`] = `"cannot declare class extension for 영 after class implementation"`;

exports[`parser > snapshot 318`] = `"base 영 is marked '일'"`;

exports[`parser > snapshot 319`] = `"property 영 is a class property; did you mean to access it with class '영'?"`;

exports[`parser > snapshot 320`] = `"영 redeclared with '영' access"`;

exports[`parser > snapshot 321`] = `"the type 영 is not a pointer to a fast-enumerable object"`;

exports[`parser > snapshot 322`] = `"일cannot have '영' qualifier"`;

exports[`parser > snapshot 323`] = `"operands to conditional of types영 are incompatible in ARC mode"`;

exports[`parser > snapshot 324`] = `"conditional expression is ambiguous; 영"`;

exports[`parser > snapshot 325`] = `"conditional expression is ambiguous; 영 can be converted to several common types"`;

exports[`parser > snapshot 326`] = `"vector condition type 영 and result type 영 do not have elements of the same size"`;

exports[`parser > snapshot 327`] = `"GNU vector conditional operand cannot be 영"`;

exports[`parser > snapshot 328`] = `"vector operands to the vector conditional must be the same type 영}"`;

exports[`parser > snapshot 329`] = `"enumeration type 영 is not allowed in a vector conditional"`;

exports[`parser > snapshot 330`] = `"vector condition type 영 and result type 영 do not have the same number of elements"`;

exports[`parser > snapshot 331`] = `"일 operand is of type 영"`;

exports[`parser > snapshot 332`] = `"CUDA special function '영' must have scalar return type"`;

exports[`parser > snapshot 333`] = `"conflicting types for alias 영"`;

exports[`parser > snapshot 334`] = `"instance variable 영 has conflicting bit-field width"`;

exports[`parser > snapshot 335`] = `"conflicting instance variable names: 영 vs 영"`;

exports[`parser > snapshot 336`] = `"instance variable 영 has conflicting type일"`;

exports[`parser > snapshot 337`] = `"virtual function 영 has different calling convention attributes 일"`;

exports[`parser > snapshot 338`] = `"conflicting super class name 영"`;

exports[`parser > snapshot 339`] = `"conflicting types for 영"`;

exports[`parser > snapshot 340`] = `"argument to 영 must be a constant integer"`;

exports[`parser > snapshot 341`] = `"consteval function 영 cannot override a non-consteval function"`;

exports[`parser > snapshot 342`] = `"statement not allowed in 영"`;

exports[`parser > snapshot 343`] = `"no return statement in 영 function"`;

exports[`parser > snapshot 344`] = `"destructor cannot be declared 영"`;

exports[`parser > snapshot 345`] = `"destructor cannot be declared 이 because 일 does not have a constexpr destructor"`;

exports[`parser > snapshot 346`] = `"variable of non-literal type 영 cannot be defined in a constexpr 일"`;

exports[`parser > snapshot 347`] = `"영"`;

exports[`parser > snapshot 348`] = `"'main' is not allowed to be declared 영"`;

exports[`parser > snapshot 349`] = `"일's 이 parameter type 영 is not a literal type"`;

exports[`parser > snapshot 350`] = `"일 function's return type 영 is not a literal type"`;

exports[`parser > snapshot 351`] = `"일 declaration"`;

exports[`parser > snapshot 352`] = `"non-void 일 function 영 should return a value"`;

exports[`parser > snapshot 353`] = `"declaration of constexpr static data member 영 requires an initializer"`;

exports[`parser > snapshot 354`] = `"영"`;

exports[`parser > snapshot 355`] = `"constexpr variable cannot have non-literal type 영"`;

exports[`parser > snapshot 356`] = `"constexpr variable 영 must have constant destruction"`;

exports[`parser > snapshot 357`] = `"constexpr variable 영 must be initialized by a constant expression"`;

exports[`parser > snapshot 358`] = `"constexpr 영"`;

exports[`parser > snapshot 359`] = `"variably-modified type 영 cannot be used in a constexpr 일"`;

exports[`parser > snapshot 360`] = `"일 can only be used in 영 declarations"`;

exports[`parser > snapshot 361`] = `"constructor cannot be declared '영'"`;

exports[`parser > snapshot 362`] = `"cannot specify any part of a return type in the declaration of a conversion function일"`;

exports[`parser > snapshot 363`] = `"std::experimental::coroutine_handle missing a member named '영'"`;

exports[`parser > snapshot 364`] = `"'영' cannot be used in 일"`;

exports[`parser > snapshot 365`] = `"'영' cannot be used outside a function"`;

exports[`parser > snapshot 366`] = `"영: 'get_return_object_on_allocation_failure()' must be a static member function"`;

exports[`parser > snapshot 367`] = `"the coroutine promise type 영 declares both 'return_value' and 'return_void'"`;

exports[`parser > snapshot 368`] = `"영 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'"`;

exports[`parser > snapshot 369`] = `"the coroutine promise type 영 must declare either 'return_value' or 'return_void'"`;

exports[`parser > snapshot 370`] = `"this function cannot be a coroutine: 영 is an incomplete type"`;

exports[`parser > snapshot 371`] = `"영 is required to declare the member 'unhandled_exception()'"`;

exports[`parser > snapshot 372`] = `"this function cannot be a coroutine: missing definition of specialization 영"`;

exports[`parser > snapshot 373`] = `"'영' cannot be used in an unevaluated context"`;

exports[`parser > snapshot 374`] = `"'영' cannot be used in the handler of a try block"`;

exports[`parser > snapshot 375`] = `"return type of virtual function 영 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class 영 to base class 영:영)"`;

exports[`parser > snapshot 376`] = `"invalid covariant return for virtual function: 영 is a 일 base class of 영"`;

exports[`parser > snapshot 377`] = `"return type of virtual function 영 is not covariant with the return type of the function it overrides (영 is incomplete)"`;

exports[`parser > snapshot 378`] = `"return type of virtual function 영 is not covariant with the return type of the function it overrides (영 is not derived from 영)"`;

exports[`parser > snapshot 379`] = `"return type of virtual function 영 is not covariant with the return type of the function it overrides (class type 영 is more qualified than class type 영"`;

exports[`parser > snapshot 380`] = `"return type of virtual function 영 is not covariant with the return type of the function it overrides (영 has different qualifiers than 영)"`;

exports[`parser > snapshot 381`] = `"multiple 'cpu_specific' functions cannot specify the same CPU: 영"`;

exports[`parser > snapshot 382`] = `"일 영 must not return void expression"`;

exports[`parser > snapshot 383`] = `"illegal device builtin 일 reference class template 영 declared here"`;

exports[`parser > snapshot 384`] = `"illegal device builtin 일 reference type 영 declared here"`;

exports[`parser > snapshot 385`] = `"cannot use '영' in 일 function"`;

exports[`parser > snapshot 386`] = `"__shared__ variable 영 cannot be 'extern'"`;

exports[`parser > snapshot 387`] = `"__shared__ local variables not allowed in 영 functions"`;

exports[`parser > snapshot 388`] = `"일 function 영"`;

exports[`parser > snapshot 389`] = `"constexpr function 영 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr."`;

exports[`parser > snapshot 390`] = `"cannot use variable-length arrays in 영 functions"`;

exports[`parser > snapshot 391`] = `"module name '영' specified on command line does not match name of module"`;

exports[`parser > snapshot 392`] = `"일 a temporary object whose lifetime would be shorter than the lifetime of the constructed object"`;

exports[`parser > snapshot 393`] = `"dealloc return type must be correctly specified as 'void' under ARC, instead of 영"`;

exports[`parser > snapshot 394`] = `"영 attribute cannot be applied to a statement"`;

exports[`parser > snapshot 395`] = `"'영' declared as an array with a negative size"`;

exports[`parser > snapshot 396`] = `"cannot form 영 'decltype(auto)'"`;

exports[`parser > snapshot 397`] = `"cannot decompose members of ambiguous base class 영 of 영:영"`;

exports[`parser > snapshot 398`] = `"cannot decompose class type 영 because it has an anonymous 일 member"`;

exports[`parser > snapshot 399`] = `"cannot decompose members of inaccessible base class 영 of 영"`;

exports[`parser > snapshot 400`] = `"cannot decompose 일 member 영 of 영"`;

exports[`parser > snapshot 401`] = `"cannot decompose class type 영: 일 영 have non-static data members"`;

exports[`parser > snapshot 402`] = `"decomposition declaration 영 requires an initializer"`;

exports[`parser > snapshot 403`] = `"decomposition declaration cannot be declared %plural{1:'영'|:with '영' specifiers}0"`;

exports[`parser > snapshot 404`] = `"cannot decompose this type; 'std::tuple_element<영>::type' does not name a type"`;

exports[`parser > snapshot 405`] = `"cannot decompose this type; 'std::tuple_size<영>::value' is not a valid integral constant expression"`;

exports[`parser > snapshot 406`] = `"decomposition declaration cannot be declared with type 영; declared type must be 'auto' or reference to 'auto'"`;

exports[`parser > snapshot 407`] = `"cannot decompose 일 type 영"`;

exports[`parser > snapshot 408`] = `"type 영 decomposes into 영 %plural{1:element|:elements}2, but 일 provided"`;

exports[`parser > snapshot 409`] = `"cannot 영 deduced class template specialization type"`;

exports[`parser > snapshot 410`] = `"ambiguous deduction for template arguments of 영"`;

exports[`parser > snapshot 411`] = `"no viable constructor or deduction guide for deduction of template arguments of 영"`;

exports[`parser > snapshot 412`] = `"class template argument deduction for 영 selected a deleted constructor"`;

exports[`parser > snapshot 413`] = `"class template argument deduction for 영 selected an explicit 일 for copy-list-initialization"`;

exports[`parser > snapshot 414`] = `"template 영 has no definition and no 일deduction guides for deduction of template arguments"`;

exports[`parser > snapshot 415`] = `"일 영 requires template arguments; argument deduction only allowed for class templates"`;

exports[`parser > snapshot 416`] = `"deduced non-type template argument does not have the same type as the corresponding template parameter영"`;

exports[`parser > snapshot 417`] = `"typename specifier refers to 영; argument deduction not allowed here"`;

exports[`parser > snapshot 418`] = `"deduced type 영 of deduction guide is not 일a specialization of template 영"`;

exports[`parser > snapshot 419`] = `"deduction guide cannot be declared '영'"`;

exports[`parser > snapshot 420`] = `"cannot specify deduction guide for 일 영"`;

exports[`parser > snapshot 421`] = `"deduction guide cannot be 영"`;

exports[`parser > snapshot 422`] = `"deduction guide template contains 영 that cannot be deduced"`;

exports[`parser > snapshot 423`] = `"deduction guide must be declared in the same scope as template 영"`;

exports[`parser > snapshot 424`] = `"exception specifications of 영 types differ"`;

exports[`parser > snapshot 425`] = `"addition of default argument on redeclaration makes this constructor a 영 constructor"`;

exports[`parser > snapshot 426`] = `"default initialization of an object of const type 영일"`;

exports[`parser > snapshot 427`] = `"default member initializer for 영 uses itself"`;

exports[`parser > snapshot 428`] = `"default member initializer for 영 needed within definition of enclosing class 영 outside of member functions"`;

exports[`parser > snapshot 429`] = `"return type of defaulted 'operator<=>' cannot be deduced because three-way comparison for 일 영 has a deduced return type and is not yet defined"`;

exports[`parser > snapshot 430`] = `"deduced return type for defaulted 일 must be 'auto', not 영"`;

exports[`parser > snapshot 431`] = `"defaulted member 영 must be const-qualified"`;

exports[`parser > snapshot 432`] = `"영 can only be defaulted in a class definition"`;

exports[`parser > snapshot 433`] = `"invalid parameter type for defaulted 이; found 영, expected 영일"`;

exports[`parser > snapshot 434`] = `"parameters for defaulted 일 must have the same type영"`;

exports[`parser > snapshot 435`] = `"return type for defaulted 일 must be 'bool', not 영"`;

exports[`parser > snapshot 436`] = `"the parameter for this explicitly-defaulted copy 영 is const, but a member or base requires it to be non-const"`;

exports[`parser > snapshot 437`] = `"the parameter for an explicitly-defaulted move 영 may not be const"`;

exports[`parser > snapshot 438`] = `"an explicitly-defaulted 영constructor cannot have default arguments"`;

exports[`parser > snapshot 439`] = `"an explicitly-defaulted 영 or 'volatile' qualifiers"`;

exports[`parser > snapshot 440`] = `"explicitly-defaulted 일 assignment operator must return 영"`;

exports[`parser > snapshot 441`] = `"an explicitly-defaulted 영constructor cannot be variadic"`;

exports[`parser > snapshot 442`] = `"the parameter for an explicitly-defaulted 영 may not be volatile"`;

exports[`parser > snapshot 443`] = `"definition of explicitly defaulted 영"`;

exports[`parser > snapshot 444`] = `"definition of implicitly declared 영"`;

exports[`parser > snapshot 445`] = `"converting delete expression from type 영 to type 영 invokes an explicit conversion function"`;

exports[`parser > snapshot 446`] = `"deleting incomplete class type 영; no conversions to pointer type"`;

exports[`parser > snapshot 447`] = `"cannot delete expression of type 영"`;

exports[`parser > snapshot 448`] = `"constructor inherited by 영 from base class 영 is implicitly deleted"`;

exports[`parser > snapshot 449`] = `"deleted function 영 cannot override a non-deleted function"`;

exports[`parser > snapshot 450`] = `"typename specifier refers to 일 member in 영; argument deduction not allowed here"`;

exports[`parser > snapshot 451`] = `"영 in a dependent scope"`;

exports[`parser > snapshot 452`] = `"non-type template argument specializes a template parameter with dependent type 영"`;

exports[`parser > snapshot 453`] = `"dereference of pointer to incomplete type 영"`;

exports[`parser > snapshot 454`] = `"designator in initializer for 일 type 영"`;

exports[`parser > snapshot 455`] = `"영 attribute can only be applied to a variable with static or thread storage duration"`;

exports[`parser > snapshot 456`] = `"destructor cannot be declared '영'"`;

exports[`parser > snapshot 457`] = `"identifier 영 in object destruction expression does not name the type 영 of the object being destroyed"`;

exports[`parser > snapshot 458`] = `"identifier 영 in object destruction expression does not name a type"`;

exports[`parser > snapshot 459`] = `"destructor type 영 in object destruction expression does not match the type 영 of the object being destroyed"`;

exports[`parser > snapshot 460`] = `"identifier 영 after '~' in destructor name does not name a type"`;

exports[`parser > snapshot 461`] = `"영 requires 일 영 type support, but device '영' does not support it"`;

exports[`parser > snapshot 462`] = `"영"`;

exports[`parser > snapshot 463`] = `"declaration of 영 has a different language linkage"`;

exports[`parser > snapshot 464`] = `"virtual function 영 has a different return type 일"`;

exports[`parser > snapshot 465`] = `"@selector expression formed with direct selector 영"`;

exports[`parser > snapshot 466`] = `"cannot cast 일 base class 영 to 영"`;

exports[`parser > snapshot 467`] = `"reference to 영"`;

exports[`parser > snapshot 468`] = `"reimplementation of category 영 for class 영"`;

exports[`parser > snapshot 469`] = `"reimplementation of class 영"`;

exports[`parser > snapshot 470`] = `"base class 영 specified more than once as a direct base class"`;

exports[`parser > snapshot 471`] = `"duplicate case value '영'"`;

exports[`parser > snapshot 472`] = `"duplicate case value: '영' and '영' both equal '영'"`;

exports[`parser > snapshot 473`] = `"duplicate interface definition for class 영"`;

exports[`parser > snapshot 474`] = `"synthesized properties 영 and 영 both claim instance variable 영"`;

exports[`parser > snapshot 475`] = `"duplicate member 영"`;

exports[`parser > snapshot 476`] = `"duplicate declaration of method 영"`;

exports[`parser > snapshot 477`] = `"initializer for sizeless type 영 cannot be empty"`;

exports[`parser > snapshot 478`] = `"non-integral type 영 is an invalid underlying type"`;

exports[`parser > snapshot 479`] = `"mode 영 is not supported for enumeration types"`;

exports[`parser > snapshot 480`] = `"enumeration previously declared with 영fixed underlying type"`;

exports[`parser > snapshot 481`] = `"enumeration previously declared as 영scoped"`;

exports[`parser > snapshot 482`] = `"enumeration redeclared with different underlying type 영 (was 영)"`;

exports[`parser > snapshot 483`] = `"enumerator 영 does not exist in instantiation of 영"`;

exports[`parser > snapshot 484`] = `"enumerator value is not representable in the underlying type 영"`;

exports[`parser > snapshot 485`] = `"enumerator value 영 is not representable in the underlying type 영"`;

exports[`parser > snapshot 486`] = `"exception specification of 영 uses itself"`;

exports[`parser > snapshot 487`] = `"exception specifications are not allowed in 영"`;

exports[`parser > snapshot 488`] = `"exception specification needed for member of incomplete class 영"`;

exports[`parser > snapshot 489`] = `"cannot use '영' with exceptions disabled"`;

exports[`parser > snapshot 490`] = `"excess elements in 영 initializer"`;

exports[`parser > snapshot 491`] = `"excess elements in initializer for indivisible sizeless type 영"`;

exports[`parser > snapshot 492`] = `"영 is not a class일"`;

exports[`parser > snapshot 493`] = `"partial ordering for explicit instantiation of 영 is ambiguous"`;

exports[`parser > snapshot 494`] = `"explicit instantiation refers to static data member 영 that is not an instantiation"`;

exports[`parser > snapshot 495`] = `"duplicate explicit instantiation of 영"`;

exports[`parser > snapshot 496`] = `"explicit instantiation of 영 in class scope"`;

exports[`parser > snapshot 497`] = `"explicit instantiation declaration of 영 with internal linkage"`;

exports[`parser > snapshot 498`] = `"explicit instantiation refers to member function 영 that is not an instantiation"`;

exports[`parser > snapshot 499`] = `"explicit instantiation of 영 must occur at global scope"`;

exports[`parser > snapshot 500`] = `"explicit instantiation of non-templated type 영"`;

exports[`parser > snapshot 501`] = `"explicit instantiation of 영 does not refer to a function template, variable template, member function, member class, or static data member"`;

exports[`parser > snapshot 502`] = `"explicit instantiation of typedef 영"`;

exports[`parser > snapshot 503`] = `"explicit instantiation of 영 not in a namespace enclosing 영"`;

exports[`parser > snapshot 504`] = `"explicit instantiation of undefined function template 영"`;

exports[`parser > snapshot 505`] = `"explicit instantiation of undefined 일 영 of class template 영"`;

exports[`parser > snapshot 506`] = `"explicit instantiation of undefined variable template 영"`;

exports[`parser > snapshot 507`] = `"explicit instantiation of 일 must occur in namespace 영"`;

exports[`parser > snapshot 508`] = `"explicit instantiation of 영 must specify a template argument list"`;

exports[`parser > snapshot 509`] = `"explicit specialization has extraneous, inconsistent storage class '영'"`;

exports[`parser > snapshot 510`] = `"declaration of 영 with internal linkage cannot be exported"`;

exports[`parser > snapshot 511`] = `"영 declaration cannot be exported"`;

exports[`parser > snapshot 512`] = `"export declaration can only be used within a module interface unit영"`;

exports[`parser > snapshot 513`] = `"using declaration referring to 영 with internal linkage cannot be exported"`;

exports[`parser > snapshot 514`] = `"영 is not a constant expression"`;

exports[`parser > snapshot 515`] = `"expression is not an 영 constant expression"`;

exports[`parser > snapshot 516`] = `"영"`;

exports[`parser > snapshot 517`] = `"일 _ExtInt of bit sizes greater than 영 not supported"`;

exports[`parser > snapshot 518`] = `"vector component access exceeds type 영"`;

exports[`parser > snapshot 519`] = `"illegal vector component name '영'"`;

exports[`parser > snapshot 520`] = `"declaration of 영 일"`;

exports[`parser > snapshot 521`] = `"extern declaration of 영 follows non-extern declaration"`;

exports[`parser > snapshot 522`] = `"영 attribute is only allowed on empty statements"`;

exports[`parser > snapshot 523`] = `"field 영 declared as a function"`;

exports[`parser > snapshot 524`] = `"field designator cannot initialize a 일 type 영"`;

exports[`parser > snapshot 525`] = `"field designator 영 does not refer to a non-static data member"`;

exports[`parser > snapshot 526`] = `"field designator 영 does not refer to any field in type 영"`;

exports[`parser > snapshot 527`] = `"field designator 영 does not refer to any field in type 영; did you mean 영?"`;

exports[`parser > snapshot 528`] = `"field has 일 type 영"`;

exports[`parser > snapshot 529`] = `"data member instantiated with function type 영"`;

exports[`parser > snapshot 530`] = `"filter expression has non-integral type 영"`;

exports[`parser > snapshot 531`] = `"declaration of 영 overrides a '일' function"`;

exports[`parser > snapshot 532`] = `"first argument to 'va_arg' is of type 영 and not 'va_list'"`;

exports[`parser > snapshot 533`] = `"flexible array member 영 not allowed in otherwise empty 일"`;

exports[`parser > snapshot 534`] = `"flexible array member 영 of type 영 with non-trivial destruction"`;

exports[`parser > snapshot 535`] = `"flexible array member 영 with type 영 is not at the end of 일"`;

exports[`parser > snapshot 536`] = `"flexible array member 영 in a union is not allowed"`;

exports[`parser > snapshot 537`] = `"flexible array member 영 not allowed in 일 which has a virtual base class"`;

exports[`parser > snapshot 538`] = `"unary fold expression has empty expansion for operator '영' with no fallback value"`;

exports[`parser > snapshot 539`] = `"instantiating fold expression with 영 arguments exceeded expression nesting limit of 영"`;

exports[`parser > snapshot 540`] = `"cannot use type 영 as a range"`;

exports[`parser > snapshot 541`] = `"invalid range expression of type 영; did you mean to dereference it with '*'?"`;

exports[`parser > snapshot 542`] = `"cannot use incomplete type 영 as a range"`;

exports[`parser > snapshot 543`] = `"invalid range expression of type 영; no viable '일' function available"`;

exports[`parser > snapshot 544`] = `"cannot use type 영 as an iterator"`;

exports[`parser > snapshot 545`] = `"loop variable 영 may not be declared 일"`;

exports[`parser > snapshot 546`] = `"format argument not 영"`;

exports[`parser > snapshot 547`] = `"function does not return 영"`;

exports[`parser > snapshot 548`] = `"attempting to use the forward class 영 as superclass of 영"`;

exports[`parser > snapshot 549`] = `"explicit qualification required to use member 영 from dependent base class"`;

exports[`parser > snapshot 550`] = `"member 영 used before its declaration"`;

exports[`parser > snapshot 551`] = `"friend declaration of 영 does not match any declaration in 영"`;

exports[`parser > snapshot 552`] = `"incomplete result type 영 in function definition"`;

exports[`parser > snapshot 553`] = `"function cannot return 일 type 영"`;

exports[`parser > snapshot 554`] = `"function cannot return qualified void type 영"`;

exports[`parser > snapshot 555`] = `"function declared with 영 attribute was previously declared without the 영 attribute"`;

exports[`parser > snapshot 556`] = `"영 marked 'override' but does not override any member functions"`;

exports[`parser > snapshot 557`] = `"type 영 of function parameter pack does not contain any unexpanded parameter packs"`;

exports[`parser > snapshot 558`] = `"function template specialization 영 ambiguously refers to more than one function template; explicitly specify일 template arguments to identify a particular function template"`;

exports[`parser > snapshot 559`] = `"no function template matches function template specialization 영"`;

exports[`parser > snapshot 560`] = `"controlling expression type 영 compatible with 영 generic association types"`;

exports[`parser > snapshot 561`] = `"controlling expression type 영 not compatible with any generic association type"`;

exports[`parser > snapshot 562`] = `"call to global function 영 not configured"`;

exports[`parser > snapshot 563`] = `"cannot jump from this goto statement to label 영 inside an inline assembly block"`;

exports[`parser > snapshot 564`] = `"invalid type 영 as argument of iboutletcollection attribute"`;

exports[`parser > snapshot 565`] = `"ambiguous conversion from type 영 to an integral or unscoped enumeration type"`;

exports[`parser > snapshot 566`] = `"integral constant expression requires explicit conversion from 영 to 영"`;

exports[`parser > snapshot 567`] = `"integral constant expression has incomplete class type 영"`;

exports[`parser > snapshot 568`] = `"일 type, not 영"`;

exports[`parser > snapshot 569`] = `"integer constant expression evaluates to value 영 that cannot be represented in a 영-bit 일 integer type"`;

exports[`parser > snapshot 570`] = `"'영' declared as array of 영"`;

exports[`parser > snapshot 571`] = `"'영' declared as array of functions of type 영"`;

exports[`parser > snapshot 572`] = `"'영' declared as array of references of type 영"`;

exports[`parser > snapshot 573`] = `"'영' does not point into a class"`;

exports[`parser > snapshot 574`] = `"'영' declared as a member pointer to a reference of type 영"`;

exports[`parser > snapshot 575`] = `"'영' declared as a member pointer to void"`;

exports[`parser > snapshot 576`] = `"'영' declared as a pointer to a reference of type 영"`;

exports[`parser > snapshot 577`] = `"illegal initializer type 영"`;

exports[`parser > snapshot 578`] = `"Objective-C message has incomplete result type 영"`;

exports[`parser > snapshot 579`] = `"일"`;

exports[`parser > snapshot 580`] = `"implicit conversion from 영 to 영 is not permitted in C++"`;

exports[`parser > snapshot 581`] = `"implicit instantiation of undefined member 영"`;

exports[`parser > snapshot 582`] = `"cannot 일 because type '영' was not found; include <compare>"`;

exports[`parser > snapshot 583`] = `"영 type was not found; include <experimental/coroutine> before defining a coroutine"`;

exports[`parser > snapshot 584`] = `"this function cannot be a coroutine: 영 is not a class"`;

exports[`parser > snapshot 585`] = `"this function cannot be a coroutine: 영 has no member named 'promise_type'"`;

exports[`parser > snapshot 586`] = `"static data member of type 영 must be initialized out of line"`;

exports[`parser > snapshot 587`] = `"in-class initializer for static data member of type 영 requires 'constexpr' specifier"`;

exports[`parser > snapshot 588`] = `"영"`;

exports[`parser > snapshot 589`] = `"incompatible vector types 영"`;

exports[`parser > snapshot 590`] = `"enumeration 영 is incomplete"`;

exports[`parser > snapshot 591`] = `"일incomplete type 영 is not allowed in exception specification"`;

exports[`parser > snapshot 592`] = `"member access into incomplete type 영"`;

exports[`parser > snapshot 593`] = `"incomplete type 영 named in nested name specifier"`;

exports[`parser > snapshot 594`] = `"incomplete type in call to object of type 영"`;

exports[`parser > snapshot 595`] = `"incomplete receiver type 영"`;

exports[`parser > snapshot 596`] = `"cannot synthesize property 영 with incomplete type 영"`;

exports[`parser > snapshot 597`] = `"incomplete type 영 where a complete type is required"`;

exports[`parser > snapshot 598`] = `"'@encode' of incomplete type 영"`;

exports[`parser > snapshot 599`] = `"incomplete type 영 used in type trait expression"`;

exports[`parser > snapshot 600`] = `"'typeid' of incomplete type 영"`;

exports[`parser > snapshot 601`] = `"defaulted definition of 영 invokes a non-constexpr comparison function"`;

exports[`parser > snapshot 602`] = `"defaulted declaration of 영 cannot be consteval because implicit definition is not constexpr"`;

exports[`parser > snapshot 603`] = `"defaulted definition of 영 is not constexpr"`;

exports[`parser > snapshot 604`] = `"cannot 일 expression of enum type 영"`;

exports[`parser > snapshot 605`] = `"cannot jump from this 영 goto statement to one of its possible targets"`;

exports[`parser > snapshot 606`] = `"cannot deduce type for lambda capture 영 from initializer of type 영"`;

exports[`parser > snapshot 607`] = `"cannot deduce type for lambda capture 영 from initializer list"`;

exports[`parser > snapshot 608`] = `"initializer for lambda capture 영 contains multiple expressions"`;

exports[`parser > snapshot 609`] = `"initializer missing for lambda capture 영"`;

exports[`parser > snapshot 610`] = `"cannot deduce type for lambda capture 영 from 일 initializer list"`;

exports[`parser > snapshot 611`] = `"cannot initialize 일"`;

exports[`parser > snapshot 612`] = `"cannot create object of function type 영"`;

exports[`parser > snapshot 613`] = `"initialization of incomplete type 영"`;

exports[`parser > snapshot 614`] = `"일type 영 cannot be initialized with an initializer list"`;

exports[`parser > snapshot 615`] = `"init methods must return an object pointer type, not 영"`;

exports[`parser > snapshot 616`] = `"initialization of non-aggregate type 영 with an initializer list"`;

exports[`parser > snapshot 617`] = `"cannot initialize Objective-C class type 영"`;

exports[`parser > snapshot 618`] = `"reference member of type 영 uninitialized"`;

exports[`parser > snapshot 619`] = `"initializer would partially override prior initialization of object of type 영 with non-trivial destruction"`;

exports[`parser > snapshot 620`] = `"inline declaration of 영 follows non-inline definition"`;

exports[`parser > snapshot 621`] = `"inline declaration of 영 not allowed in block scope"`;

exports[`parser > snapshot 622`] = `"'inline' can only appear on functions영"`;

exports[`parser > snapshot 623`] = `"invalid block pointer conversion 영"`;

exports[`parser > snapshot 624`] = `"'internal_linkage' attribute does not appear on the first declaration of 영"`;

exports[`parser > snapshot 625`] = `"%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a 영 as a friend"`;

exports[`parser > snapshot 626`] = `"value '영' out of range for constraint '영'"`;

exports[`parser > snapshot 627`] = `"invalid reinterpretation: sizes of 영 and 영 must match"`;

exports[`parser > snapshot 628`] = `"영 attribute cannot be applied to virtual functions"`;

exports[`parser > snapshot 629`] = `"interface type cannot inherit from 일 영"`;

exports[`parser > snapshot 630`] = `"invalid or misplaced branch protection specification '영'"`;

exports[`parser > snapshot 631`] = `"collection element of type 영 is not an Objective-C object"`;

exports[`parser > snapshot 632`] = `"'_Complex 영' is invalid"`;

exports[`parser > snapshot 633`] = `"call to consteval function 영 is not a constant expression"`;

exports[`parser > snapshot 634`] = `"영 cannot be declared consteval"`;

exports[`parser > snapshot 635`] = `"cannot take address of consteval function 영 outside of an immediate invocation"`;

exports[`parser > snapshot 636`] = `"영"`;

exports[`parser > snapshot 637`] = `"non-static data member cannot be constexpr영"`;

exports[`parser > snapshot 638`] = `"invalid conversion between ext-vector type 영 and 영"`;

exports[`parser > snapshot 639`] = `"conversion between matrix type 영 and incompatible type 영 is not allowed"`;

exports[`parser > snapshot 640`] = `"conversion between matrix types영 of different size is not allowed"`;

exports[`parser > snapshot 641`] = `"invalid conversion between vector type 영 and integer type 영 of different size"`;

exports[`parser > snapshot 642`] = `"invalid conversion between vector type 영 and scalar type 영"`;

exports[`parser > snapshot 643`] = `"invalid conversion between vector type영 of different size"`;

exports[`parser > snapshot 644`] = `"invalid option '영' for 일"`;

exports[`parser > snapshot 645`] = `"cannot combine with previous '영' declaration specifier"`;

exports[`parser > snapshot 646`] = `"definition or redeclaration of 영 cannot name the global scope"`;

exports[`parser > snapshot 647`] = `"definition or redeclaration of 영 not allowed inside a block"`;

exports[`parser > snapshot 648`] = `"definition or redeclaration of 영 not allowed inside a function"`;

exports[`parser > snapshot 649`] = `"cannot define or redeclare 영 here because namespace 영 does not enclose namespace 영"`;

exports[`parser > snapshot 650`] = `"invalid use of incomplete type 영"`;

exports[`parser > snapshot 651`] = `"invalid use of member 영 in static member function"`;

exports[`parser > snapshot 652`] = `"invalid use of non-static data member 영"`;

exports[`parser > snapshot 653`] = `"영 is not a valid literal type for NSNumber"`;

exports[`parser > snapshot 654`] = `"'__pixel' must be preceded by '__vector'.  '영' declaration specifier not allowed here"`;

exports[`parser > snapshot 655`] = `"영 is not a valid property name (accessing an object of type 영)"`;

exports[`parser > snapshot 656`] = `"'영' qualifier is not allowed on a constructor"`;

exports[`parser > snapshot 657`] = `"'영' qualifier is not allowed on a destructor"`;

exports[`parser > snapshot 658`] = `"일cannot have '영' qualifier"`;

exports[`parser > snapshot 659`] = `"receiver type 영 is not an Objective-C class"`;

exports[`parser > snapshot 660`] = `"'_Sat' specifier is only valid on '_Fract' or '_Accum', not '영'"`;

exports[`parser > snapshot 661`] = `"'영' cannot be signed or unsigned"`;

exports[`parser > snapshot 662`] = `"'영' is only allowed on variable declarations"`;

exports[`parser > snapshot 663`] = `"the 영 type cannot be used to declare a program scope variable"`;

exports[`parser > snapshot 664`] = `"type 영 of 일 of 영 does not match expected type 영"`;

exports[`parser > snapshot 665`] = `"cannot use '영' with '__vector bool'"`;

exports[`parser > snapshot 666`] = `"cannot combine with previous '영' declaration specifier. '__vector' must be first"`;

exports[`parser > snapshot 667`] = `"'일 영' is invalid"`;

exports[`parser > snapshot 668`] = `"property 영 not found on object of type 영; did you mean to access instance variable 영?"`;

exports[`parser > snapshot 669`] = `"property 영 attempting to use instance variable 영 declared in super class 영"`;

exports[`parser > snapshot 670`] = `"instance variable 영 accessed in class method"`;

exports[`parser > snapshot 671`] = `"kernel call to non-global function 영"`;

exports[`parser > snapshot 672`] = `"kernel function 영 must be a free function or static member function"`;

exports[`parser > snapshot 673`] = `"kernel function type 영 must have void return type"`;

exports[`parser > snapshot 674`] = `"variable 영 with flexible array member cannot be captured in a lambda expression"`;

exports[`parser > snapshot 675`] = `"variable 영 cannot be implicitly captured in a lambda with no capture-default specified"`;

exports[`parser > snapshot 676`] = `"incomplete result type 영 in lambda expression"`;

exports[`parser > snapshot 677`] = `"cannot apply asm label to 영 after its first use"`;

exports[`parser > snapshot 678`] = `"'lifetimebound' attribute cannot be applied to a 영"`;

exports[`parser > snapshot 679`] = `"'lifetimebound' attribute cannot be applied; 영member function has no implicit object parameter"`;

exports[`parser > snapshot 680`] = `"cannot initialize 일 type 영 with a parenthesized initializer list"`;

exports[`parser > snapshot 681`] = `"non-namespace scope '영' cannot have a literal operator member"`;

exports[`parser > snapshot 682`] = `"literal operator 영 must be in a namespace or global scope"`;

exports[`parser > snapshot 683`] = `"invalid literal operator parameter type 영, did you mean 영?"`;

exports[`parser > snapshot 684`] = `"variable 영 cannot be declared both 'extern' and with the 'loader_uninitialized' attribute"`;

exports[`parser > snapshot 685`] = `"일 lvalue reference to type 영 cannot bind to an initializer list temporary"`;

exports[`parser > snapshot 686`] = `"영,2"`;

exports[`parser > snapshot 687`] = `"영,2"`;

exports[`parser > snapshot 688`] = `"rvalue reference 영"`;

exports[`parser > snapshot 689`] = `"일 machine mode 영"`;

exports[`parser > snapshot 690`] = `"일) must be of type 영"`;

exports[`parser > snapshot 691`] = `"too many parameters (영) for 'main': must be 0, 2, or 3"`;

exports[`parser > snapshot 692`] = `"영 cannot be a template"`;

exports[`parser > snapshot 693`] = `"matrix 영 index is not an integer"`;

exports[`parser > snapshot 694`] = `"matrix 일 index is outside the allowed range [0, 영)"`;

exports[`parser > snapshot 695`] = `"member initializer 영 does not name a non-static data member or base class"`;

exports[`parser > snapshot 696`] = `"initializer 영 does not name a non-static data member or base class; did you mean the 일 영?"`;

exports[`parser > snapshot 697`] = `"out-of-line 일 of 영 does not match any declaration in 영"`;

exports[`parser > snapshot 698`] = `"out-of-line 일 of 영 does not match any declaration in 영; did you mean 영?"`;

exports[`parser > snapshot 699`] = `"return type of out-of-line definition of 영 differs from that in the declaration"`;

exports[`parser > snapshot 700`] = `"out-of-line definition of 영 from class 영 without definition"`;

exports[`parser > snapshot 701`] = `"extra qualification on member 영"`;

exports[`parser > snapshot 702`] = `"'this' argument to member function 영 has type 영, but function is not marked 일"`;

exports[`parser > snapshot 703`] = `"'this' argument to member function 영 is an 일 ref-qualifier"`;

exports[`parser > snapshot 704`] = `"cannot initialize object parameter of type 영 with an expression of type 영"`;

exports[`parser > snapshot 705`] = `"member 영 has the same name as its class"`;

exports[`parser > snapshot 706`] = `"no member 영 in 영; it has not yet been instantiated"`;

exports[`parser > snapshot 707`] = `"non-friend class member 영 cannot have a qualified name"`;

exports[`parser > snapshot 708`] = `"multiple overloads of 영 instantiate to the same signature 영"`;

exports[`parser > snapshot 709`] = `"base of member reference is a function; perhaps you meant to call it영?"`;

exports[`parser > snapshot 710`] = `"member pointer refers into non-class type 영"`;

exports[`parser > snapshot 711`] = `"conversion from pointer to member of class 영 to pointer to member of class 영 via virtual base 영 is not allowed"`;

exports[`parser > snapshot 712`] = `"member pointer has incomplete base type 영"`;

exports[`parser > snapshot 713`] = `"at least one argument of MTE builtin function must be a pointer (영, 영 invalid)"`;

exports[`parser > snapshot 714`] = `"영 argument of MTE builtin function must be an integer type (영 invalid)"`;

exports[`parser > snapshot 715`] = `"영 argument of MTE builtin function must be a pointer (영 invalid)"`;

exports[`parser > snapshot 716`] = `"영 argument of MTE builtin function must be a null or a pointer (영 invalid)"`;

exports[`parser > snapshot 717`] = `"일 method 영 not found ; did you mean 영?"`;

exports[`parser > snapshot 718`] = `"inheritance model does not match 영"`;

exports[`parser > snapshot 719`] = `"declaration of 영 in 일"`;

exports[`parser > snapshot 720`] = `"instance variables may not be placed in 영"`;

exports[`parser > snapshot 721`] = `"영 literal must be prefixed by '@'"`;

exports[`parser > snapshot 722`] = `"일 does not have a default constructor"`;

exports[`parser > snapshot 723`] = `"영 is missing exception specification '영'"`;

exports[`parser > snapshot 724`] = `"synthesized property 영 must either be named the same as a compatible instance variable or must explicitly name an instance variable"`;

exports[`parser > snapshot 725`] = `"@import of module '영' in implementation of '영'; use #import"`;

exports[`parser > snapshot 726`] = `"import of module '영' appears within 영"`;

exports[`parser > snapshot 727`] = `"definition of module '영' is not available; use -fmodule-file= to specify path to precompiled module interface"`;

exports[`parser > snapshot 728`] = `"일 영 cannot be declared __module_private__"`;

exports[`parser > snapshot 729`] = `"local 영 cannot be declared __module_private__"`;

exports[`parser > snapshot 730`] = `"영 specialization cannot be declared __module_private__"`;

exports[`parser > snapshot 731`] = `"redefinition of module '영'"`;

exports[`parser > snapshot 732`] = `"import of module '영' appears within same top-level module '영'"`;

exports[`parser > snapshot 733`] = `"일 of 영 must be imported from module '영' before it is required"`;

exports[`parser > snapshot 734`] = `"일 before it is used"`;

exports[`parser > snapshot 735`] = `"일 of 영 must be imported from one of the following modules before it is required:영"`;

exports[`parser > snapshot 736`] = `"multiple initializations given for base 영"`;

exports[`parser > snapshot 737`] = `"virtual function 일 has more than one final overrider in 영"`;

exports[`parser > snapshot 738`] = `"multiple initializations given for non-static member 영"`;

exports[`parser > snapshot 739`] = `"multiversioned function declaration has a different 영"`;

exports[`parser > snapshot 740`] = `"attribute '일' multiversioning cannot be combined with attribute 영"`;

exports[`parser > snapshot 741`] = `"attribute '영"`;

exports[`parser > snapshot 742`] = `"attributes on multiversioned functions must all match, attribute 영 일"`;

exports[`parser > snapshot 743`] = `"function declaration is missing 영 attribute in a multiversioned function"`;

exports[`parser > snapshot 744`] = `"cannot perform a tail call to function일 because it uses an incompatible calling convention"`;

exports[`parser > snapshot 745`] = `"영 attribute cannot be used from 일"`;

exports[`parser > snapshot 746`] = `"일"`;

exports[`parser > snapshot 747`] = `"cannot perform a tail call to function일 because its signature is incompatible with the calling function"`;

exports[`parser > snapshot 748`] = `"영 attribute requires that the return value is the result of a function call"`;

exports[`parser > snapshot 749`] = `"영 attribute requires that both caller and callee functions have a prototype"`;

exports[`parser > snapshot 750`] = `"영 attribute may not be used with variadic functions"`;

exports[`parser > snapshot 751`] = `"cannot perform a tail call 영"`;

exports[`parser > snapshot 752`] = `"no matching 영 function for non-allocating placement new expression; include <new>"`;

exports[`parser > snapshot 753`] = `"lookup of 영 in member access expression is ambiguous"`;

exports[`parser > snapshot 754`] = `"영 cannot appear before '::' because it is not a class일; did you mean ':'?"`;

exports[`parser > snapshot 755`] = `"type 영 cannot be used prior to '::' because it has no members"`;

exports[`parser > snapshot 756`] = `"일 영 of 영 from nested type 영"`;

exports[`parser > snapshot 757`] = `"영 discards qualifiers in nested pointer types"`;

exports[`parser > snapshot 758`] = `"nested redefinition of 영"`;

exports[`parser > snapshot 759`] = `"'abi_tag' 영 missing in original declaration"`;

exports[`parser > snapshot 760`] = `"allocation of 일 type 영"`;

exports[`parser > snapshot 761`] = `"no 일 defined for property 영"`;

exports[`parser > snapshot 762`] = `"invalid use of '__super', 영 has no base classes"`;

exports[`parser > snapshot 763`] = `"no matching function 영 found in local scope; did you mean 영?"`;

exports[`parser > snapshot 764`] = `"no member named 영 in 영"`;

exports[`parser > snapshot 765`] = `"no member named 영 in 영; did you mean to use '->' instead of '.'?"`;

exports[`parser > snapshot 766`] = `"no member named 영 in 영; did you mean 일영?"`;

exports[`parser > snapshot 767`] = `"no template named 영 in 영"`;

exports[`parser > snapshot 768`] = `"no template named 영 in 영; did you mean 일영?"`;

exports[`parser > snapshot 769`] = `"cannot find interface declaration for 영"`;

exports[`parser > snapshot 770`] = `"no suitable member 영 in 영"`;

exports[`parser > snapshot 771`] = `"no @interface declaration found in class messaging of 영"`;

exports[`parser > snapshot 772`] = `"no template named 영"`;

exports[`parser > snapshot 773`] = `"no template named 영; did you mean 영?"`;

exports[`parser > snapshot 774`] = `"no getter method 영 for 일 of property"`;

exports[`parser > snapshot 775`] = `"atomic constraint must be of type 'bool' (found 영)"`;

exports[`parser > snapshot 776`] = `"anonymous non-C-compatible type given name for linkage purposes by 영 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition"`;

exports[`parser > snapshot 777`] = `"non-consteval function 영 cannot override a consteval function"`;

exports[`parser > snapshot 778`] = `"non-deleted function 영 cannot override a deleted function"`;

exports[`parser > snapshot 779`] = `"non-extern declaration of 영 follows extern declaration"`;

exports[`parser > snapshot 780`] = `"defaulting 영 would delete it after its first declaration"`;

exports[`parser > snapshot 781`] = `"non-static declaration of 영 follows static declaration"`;

exports[`parser > snapshot 782`] = `"member 영 of 영 is not a template; did you mean 일영?"`;

exports[`parser > snapshot 783`] = `"영 does not name a template but is followed by template arguments"`;

exports[`parser > snapshot 784`] = `"영 does not name a template but is followed by template arguments; did you mean 영?"`;

exports[`parser > snapshot 785`] = `"non-thread-local declaration of 영 follows thread-local declaration"`;

exports[`parser > snapshot 786`] = `"cannot 일"`;

exports[`parser > snapshot 787`] = `"non-type template argument refers to subobject '영'"`;

exports[`parser > snapshot 788`] = `"sorry, non-type template argument of type 영 is not yet supported"`;

exports[`parser > snapshot 789`] = `"qualified name refers into a specialization of 일 template 영"`;

exports[`parser > snapshot 790`] = `"non-type template parameter 영 with type 영 has incompatible initializer of type 영"`;

exports[`parser > snapshot 791`] = `"영 is not virtual and cannot be declared pure"`;

exports[`parser > snapshot 792`] = `"address argument to nontemporal builtin must be a pointer (영 invalid)"`;

exports[`parser > snapshot 793`] = `"address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (영 invalid)"`;

exports[`parser > snapshot 794`] = `"일"`;

exports[`parser > snapshot 795`] = `"일"`;

exports[`parser > snapshot 796`] = `"cannot specialize a 영"`;

exports[`parser > snapshot 797`] = `"type 영 is not a direct or virtual base of 영"`;

exports[`parser > snapshot 798`] = `"call to function 영 that is neither visible in the template definition nor found by argument-dependent lookup"`;

exports[`parser > snapshot 799`] = `"anonymous bit-field has non-integral type 영"`;

exports[`parser > snapshot 800`] = `"bit-field 영 has non-integral type 영"`;

exports[`parser > snapshot 801`] = `"no 일 named 영 in 영"`;

exports[`parser > snapshot 802`] = `"영 attribute only applies to 일 parameters"`;

exports[`parser > snapshot 803`] = `"domain argument 일does not refer to global constant"`;

exports[`parser > snapshot 804`] = `"domain argument 영 does not point to an NSString or CFString constant"`;

exports[`parser > snapshot 805`] = `"overriding method has mismatched ns_returns_영 attributes"`;

exports[`parser > snapshot 806`] = `"nullability keyword 영 cannot be applied to multi-level pointer type 영"`;

exports[`parser > snapshot 807`] = `"nullability specifier 영 cannot be applied to non-pointer type 영"`;

exports[`parser > snapshot 808`] = `"array of interface 영 is invalid (probably should be an array of pointers)"`;

exports[`parser > snapshot 809`] = `"parameter of 영 attribute must be a single name of an Objective-C 일"`;

exports[`parser > snapshot 810`] = `"attribute 영 can only be applied to @protocol definitions, not forward declarations"`;

exports[`parser > snapshot 811`] = `"parameter of 영 attribute must be 'id' when used on a typedef"`;

exports[`parser > snapshot 812`] = `"could not find Objective-C class 영 to convert 영 to 영"`;

exports[`parser > snapshot 813`] = `"영 must be name of an Objective-C class to be able to convert 영 to 영"`;

exports[`parser > snapshot 814`] = `"영 must be explicitly converted to 영; use 일 method for this conversion"`;

exports[`parser > snapshot 815`] = `"CF object of type 영 is bridged to 영, which is not an Objective-C class"`;

exports[`parser > snapshot 816`] = `"일 영"`;

exports[`parser > snapshot 817`] = `"direct method was declared in 영"`;

exports[`parser > snapshot 818`] = `"methods that 영 cannot be direct"`;

exports[`parser > snapshot 819`] = `"'objc_direct' attribute cannot be applied to 영 declared in an Objective-C protocol"`;

exports[`parser > snapshot 820`] = `"일 cannot conform to protocol 영 because of direct members declared in interface 영"`;

exports[`parser > snapshot 821`] = `"cannot use '영' with Objective-C exceptions disabled"`;

exports[`parser > snapshot 822`] = `"illegal type 영 used in a boxed expression"`;

exports[`parser > snapshot 823`] = `"incomplete type 영 used in a boxed expression"`;

exports[`parser > snapshot 824`] = `"Objective-C index expression has incomplete class type 영"`;

exports[`parser > snapshot 825`] = `"method for accessing 일 element must have Objective-C object return type instead of 영"`;

exports[`parser > snapshot 826`] = `"'__kindof' specifier cannot be applied to non-object type 영"`;

exports[`parser > snapshot 827`] = `"literal construction method 영 has incompatible signature"`;

exports[`parser > snapshot 828`] = `"영 일 type is unsupported; support for vector types for this target is introduced in 영"`;

exports[`parser > snapshot 829`] = `"indexing expression is invalid because subscript type 영 has multiple type conversion functions"`;

exports[`parser > snapshot 830`] = `"non-trivially copyable type 영 cannot be used in a boxed expression"`;

exports[`parser > snapshot 831`] = `"ObjectiveC object of type 영 is bridged to 영, which is not valid CF object"`;

exports[`parser > snapshot 832`] = `"cannot assign to class object (영 invalid)"`;

exports[`parser > snapshot 833`] = `"일 of non-parameterized class 영 cannot have type parameters"`;

exports[`parser > snapshot 834`] = `"forward declaration of non-parameterized class 영 cannot have type parameters"`;

exports[`parser > snapshot 835`] = `"class 영 previously declared with type parameters"`;

exports[`parser > snapshot 836`] = `"objc_precise_lifetime only applies to retainable types; type here is 영"`;

exports[`parser > snapshot 837`] = `"property attributes '영' and '영' are mutually exclusive"`;

exports[`parser > snapshot 838`] = `"property with '영' attribute must be of object type"`;

exports[`parser > snapshot 839`] = `"cannot implement a category for class 영 that is only visible via the Objective-C runtime"`;

exports[`parser > snapshot 840`] = `"cannot implement subclass 영 of a superclass 영 that is only visible via the Objective-C runtime"`;

exports[`parser > snapshot 841`] = `"일 subscript base type 영 is not an Objective-C object"`;

exports[`parser > snapshot 842`] = `"method object parameter type 영 is not object type"`;

exports[`parser > snapshot 843`] = `"method index parameter type 영 is not integral type"`;

exports[`parser > snapshot 844`] = `"method key parameter type 영 is not object type"`;

exports[`parser > snapshot 845`] = `"expected method to 일 element not found on object of type 영"`;

exports[`parser > snapshot 846`] = `"cannot assign to this 일 because assigning method's 2nd parameter of type 영 is not an Objective-C pointer type"`;

exports[`parser > snapshot 847`] = `"indexing expression is invalid because subscript type 영 is not an Objective-C pointer"`;

exports[`parser > snapshot 848`] = `"indexing expression is invalid because subscript type 영 is not an integral or Objective-C pointer type"`;

exports[`parser > snapshot 849`] = `"@synchronized requires an Objective-C object type (영 invalid)"`;

exports[`parser > snapshot 850`] = `"@throw requires an Objective-C object type (영 invalid)"`;

exports[`parser > snapshot 851`] = `"type argument 영 does not satisfy the bound (영) of type parameter 영"`;

exports[`parser > snapshot 852`] = `"type argument 영 cannot explicitly specify nullability"`;

exports[`parser > snapshot 853`] = `"no type or protocol named 영"`;

exports[`parser > snapshot 854`] = `"type argument 영 must be a pointer (requires a '*')"`;

exports[`parser > snapshot 855`] = `"type argument 영 is neither an Objective-C object nor a block type"`;

exports[`parser > snapshot 856`] = `"type argument 영 cannot be qualified with '영'"`;

exports[`parser > snapshot 857`] = `"angle brackets contain both a 일 (영)"`;

exports[`parser > snapshot 858`] = `"type arguments cannot be applied to non-class type 영"`;

exports[`parser > snapshot 859`] = `"type arguments cannot be applied to non-parameterized class 영"`;

exports[`parser > snapshot 860`] = `"type arguments cannot be applied to already-specialized class type 영"`;

exports[`parser > snapshot 861`] = `"too 일 type arguments for class 영 (have 영, expected 영)"`;

exports[`parser > snapshot 862`] = `"일 type parameters (expected 영, have 영)"`;

exports[`parser > snapshot 863`] = `"type bound 영 for type parameter 영 conflicts with 일"`;

exports[`parser > snapshot 864`] = `"type parameter 영 bound 영 cannot explicitly specify nullability"`;

exports[`parser > snapshot 865`] = `"missing type bound 영 for type parameter 영 in 일"`;

exports[`parser > snapshot 866`] = `"missing '*' in type bound 영 for type parameter 영"`;

exports[`parser > snapshot 867`] = `"type bound 영 for type parameter 영 is not an Objective-C pointer type"`;

exports[`parser > snapshot 868`] = `"type bound 영 for type parameter 영 cannot be qualified with '영'"`;

exports[`parser > snapshot 869`] = `"redeclaration of type parameter 영"`;

exports[`parser > snapshot 870`] = `"일variant type parameter 영"`;

exports[`parser > snapshot 871`] = `"field 영 with variable sized type 영 is not at the end of class"`;

exports[`parser > snapshot 872`] = `"interface type 영 cannot be 일 by value; did you forget * in 영?"`;

exports[`parser > snapshot 873`] = `"offsetof requires array type, 영 invalid"`;

exports[`parser > snapshot 874`] = `"cannot compute offset of bit-field 영"`;

exports[`parser > snapshot 875`] = `"offsetof of incomplete type 영"`;

exports[`parser > snapshot 876`] = `"offsetof requires struct, union, or class type, 영 invalid"`;

exports[`parser > snapshot 877`] = `"argument of aligned clause should be array일, not 영"`;

exports[`parser > snapshot 878`] = `"ambiguous conversion from type 영 to an integral or unscoped enumeration type"`;

exports[`parser > snapshot 879`] = `"directive '#pragma omp atomic일' cannot be used with '영' clause"`;

exports[`parser > snapshot 880`] = `"bit fields cannot be used to specify storage in a '영' clause"`;

exports[`parser > snapshot 881`] = `"arguments of OpenMP clause '영' with bitwise operators cannot be of floating type"`;

exports[`parser > snapshot 882`] = `"arguments of OpenMP clause '영' for 'min' or 'max' must be of 일 type"`;

exports[`parser > snapshot 883`] = `"'영' and '영' clause are mutually exclusive and may not appear on the same directive"`;

exports[`parser > snapshot 884`] = `"const-qualified list item cannot be 영"`;

exports[`parser > snapshot 885`] = `"const-qualified variable without mutable fields cannot be 영"`;

exports[`parser > snapshot 886`] = `"const-qualified variable cannot be 영"`;

exports[`parser > snapshot 887`] = `"redefinition of user-defined mapper for type 영 with name 영"`;

exports[`parser > snapshot 888`] = `"only variable 영 is allowed in map clauses of this 'omp declare mapper' directive"`;

exports[`parser > snapshot 889`] = `"redefinition of user-defined reduction for type 영"`;

exports[`parser > snapshot 890`] = `"영 must not appear in both clauses 'to' and 'link'"`;

exports[`parser > snapshot 891`] = `"function with '#pragma omp declare variant' has a different 영"`;

exports[`parser > snapshot 892`] = `"'#pragma omp declare variant' does not support 영"`;

exports[`parser > snapshot 893`] = `"variant in '#pragma omp declare variant' with type 영 is incompatible with type 영"`;

exports[`parser > snapshot 894`] = `"the user condition in the OpenMP context selector needs to be constant; 영 is not"`;

exports[`parser > snapshot 895`] = `"variable 영 must have explicitly specified data sharing attributes, data mapping attributes, or in an is_device_ptr clause"`;

exports[`parser > snapshot 896`] = `"'depend' clauses cannot be mixed with '영' clause"`;

exports[`parser > snapshot 897`] = `"expected일 loop iteration variable"`;

exports[`parser > snapshot 898`] = `"'depend(영"`;

exports[`parser > snapshot 899`] = `"'device_type(영)' does not match previously specified 'device_type(영)' for the same declaration"`;

exports[`parser > snapshot 900`] = `"'영' region encountered before requires directive with '영' clause"`;

exports[`parser > snapshot 901`] = `"expected addressable lvalue expression, array element영"`;

exports[`parser > snapshot 902`] = `"expected constant sized array of 'omp_alloctrait_t' elements, not 영"`;

exports[`parser > snapshot 903`] = `"expected variable name as a base of the array 영"`;

exports[`parser > snapshot 904`] = `"expected lvalue expression일"`;

exports[`parser > snapshot 905`] = `"영 is not a global variable, static local variable or static data member"`;

exports[`parser > snapshot 906`] = `"영 is not a global variable, static local variable or static data member; did you mean 영"`;

exports[`parser > snapshot 907`] = `"expected variable name영"`;

exports[`parser > snapshot 908`] = `"expected variable name영, array element or array section"`;

exports[`parser > snapshot 909`] = `"expression requires explicit conversion from 영 to 영"`;

exports[`parser > snapshot 910`] = `"a firstprivate variable with incomplete type 영"`;

exports[`parser > snapshot 911`] = `"'flush' directive with memory order clause '영' cannot have the list"`;

exports[`parser > snapshot 912`] = `"'#pragma omp declare 영' can only be applied to functions"`;

exports[`parser > snapshot 913`] = `"arguments of '#pragma omp 영' must have 일"`;

exports[`parser > snapshot 914`] = `"'영' type not found; include <omp.h>"`;

exports[`parser > snapshot 915`] = `"expression has incomplete class type 영"`;

exports[`parser > snapshot 916`] = `"interop variable 영 used in multiple action clauses"`;

exports[`parser > snapshot 917`] = `"expected영 variable of type 'omp_interop_t'"`;

exports[`parser > snapshot 918`] = `"일 for '#pragma omp 영'"`;

exports[`parser > snapshot 919`] = `"cannot find a valid user-defined mapper for type 영 with name 영"`;

exports[`parser > snapshot 920`] = `"'#pragma omp 영' directive must appear only in file scope"`;

exports[`parser > snapshot 921`] = `"영 used in declare target directive is not a variable or a function name"`;

exports[`parser > snapshot 922`] = `"expected loop invariant expression or '<invariant1> * 영 + <invariant2>' kind of expression"`;

exports[`parser > snapshot 923`] = `"expected integral or pointer type as the iterator-type, not 영"`;

exports[`parser > snapshot 924`] = `"iterator step expression 영 evaluates to 0"`;

exports[`parser > snapshot 925`] = `"iterator step expression 영 is not the integral expression"`;

exports[`parser > snapshot 926`] = `"a lastprivate variable with incomplete type 영"`;

exports[`parser > snapshot 927`] = `"argument of a linear clause should be of integral or pointer type, not 영"`;

exports[`parser > snapshot 928`] = `"a linear variable with incomplete type 영"`;

exports[`parser > snapshot 929`] = `"'영' statement cannot be used in OpenMP for loop"`;

exports[`parser > snapshot 930`] = `"increment expression must cause 영 to 일 on each iteration of OpenMP for loop"`;

exports[`parser > snapshot 931`] = `"condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', 일) of loop variable 영"`;

exports[`parser > snapshot 932`] = `"increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable 영"`;

exports[`parser > snapshot 933`] = `"loop iteration variable in the associated loop of 'omp 영' directive may not be 영, predetermined as 영"`;

exports[`parser > snapshot 934`] = `"variable must be of integer or 영 type"`;

exports[`parser > snapshot 935`] = `"argument to '영' clause must be a 일 integer value"`;

exports[`parser > snapshot 936`] = `"expected at least one 영 clause for '#pragma omp 영'"`;

exports[`parser > snapshot 937`] = `"variable 영 must have explicitly specified data sharing attributes"`;

exports[`parser > snapshot 938`] = `"expected addressable lvalue in '영' clause"`;

exports[`parser > snapshot 939`] = `"일"`;

exports[`parser > snapshot 940`] = `"expression must have integral or unscoped enumeration type, not 영"`;

exports[`parser > snapshot 941`] = `"unable to resolve declare reduction construct for type 영"`;

exports[`parser > snapshot 942`] = `"variable can appear only once in OpenMP '영' clause"`;

exports[`parser > snapshot 943`] = `"'ordered' directive 영 cannot be closely nested inside ordered region with specified parameter"`;

exports[`parser > snapshot 944`] = `"'ordered' clause with a parameter can not be specified in '#pragma omp 영' directive"`;

exports[`parser > snapshot 945`] = `"orphaned 'omp 영' directives are prohibited; perhaps you forget to enclose the directive into a 일region?"`;

exports[`parser > snapshot 946`] = `"일"`;

exports[`parser > snapshot 947`] = `"argument of a reduction clause of a 영 construct must not appear in a firstprivate clause on a task construct"`;

exports[`parser > snapshot 948`] = `"expected reference to one of the parameters of function 영일"`;

exports[`parser > snapshot 949`] = `"parent region for 'omp 영' construct cannot be nowait"`;

exports[`parser > snapshot 950`] = `"parent region for 'omp 영' construct cannot be ordered"`;

exports[`parser > snapshot 951`] = `"a private variable with incomplete type 영"`;

exports[`parser > snapshot 952`] = `"region cannot be일"`;

exports[`parser > snapshot 953`] = `"cannot nest 'critical' regions having the same name 영"`;

exports[`parser > snapshot 954`] = `"OpenMP constructs may not be nested inside a simd region영"`;

exports[`parser > snapshot 955`] = `"list item of type 영 is not valid for specified reduction operation: unable to provide default initialization value"`;

exports[`parser > snapshot 956`] = `"a reduction list item with incomplete type 영"`;

exports[`parser > snapshot 957`] = `"argument of OpenMP clause '영' must reference the same object in all threads"`;

exports[`parser > snapshot 958`] = `"cannot generate code for reduction on 영variable length array"`;

exports[`parser > snapshot 959`] = `"reduction type cannot be 영 type"`;

exports[`parser > snapshot 960`] = `"arguments of '#pragma omp 영' cannot be of reference type 영"`;

exports[`parser > snapshot 961`] = `"영 variable must be 영"`;

exports[`parser > snapshot 962`] = `"Only one 영 clause can appear on a requires directive in a single translation unit"`;

exports[`parser > snapshot 963`] = `"section of pointer to function type 영"`;

exports[`parser > snapshot 964`] = `"section of pointer to incomplete type 영"`;

exports[`parser > snapshot 965`] = `"section length is evaluated to a negative value 영"`;

exports[`parser > snapshot 966`] = `"section length is unspecified and cannot be inferred because subscripted value is 영"`;

exports[`parser > snapshot 967`] = `"section stride is evaluated to a non-positive value 영"`;

exports[`parser > snapshot 968`] = `"exactly one '영' directive must appear in the loop body of an enclosing directive"`;

exports[`parser > snapshot 969`] = `"directive '#pragma omp 영' cannot contain more than one 일'acq_rel', 'acquire' or 'release' clause"`;

exports[`parser > snapshot 970`] = `"array shaping dimension is evaluated to a non-positive value 영"`;

exports[`parser > snapshot 971`] = `"'영' statement cannot be used in OpenMP simd region"`;

exports[`parser > snapshot 972`] = `"'영' clause with '영' modifier cannot be specified if an 'ordered' clause is specified"`;

exports[`parser > snapshot 973`] = `"single declaration is expected after 'declare 영' directive"`;

exports[`parser > snapshot 974`] = `"the loop 영 expression depends on the current loop control variable"`;

exports[`parser > snapshot 975`] = `"threadprivate variables are not allowed in '영' clause"`;

exports[`parser > snapshot 976`] = `"threadprivate variable with incomplete type 영"`;

exports[`parser > snapshot 977`] = `"array section 영 is not an integer"`;

exports[`parser > snapshot 978`] = `"expected 영 in OpenMP clause '영'"`;

exports[`parser > snapshot 979`] = `"modifier '영' cannot be used along with modifier '영'"`;

exports[`parser > snapshot 980`] = `"incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type 영"`;

exports[`parser > snapshot 981`] = `"expected일"`;

exports[`parser > snapshot 982`] = `"일 cannot appear in more than one 영 clause"`;

exports[`parser > snapshot 983`] = `"expected variable of the '영' type일"`;

exports[`parser > snapshot 984`] = `"'#pragma omp 영' must appear in the scope of the 일 variable declaration"`;

exports[`parser > snapshot 985`] = `"variable 영 cannot be threadprivate because it is 일"`;

exports[`parser > snapshot 986`] = `"'#pragma omp 영' must precede all references to variable 일"`;

exports[`parser > snapshot 987`] = `"영 variable cannot be in a 영 clause in '#pragma omp 영' directive"`;

exports[`parser > snapshot 988`] = `"arguments of OpenMP clause '영' in '#pragma omp 영' directive cannot be of variably-modified type 영"`;

exports[`parser > snapshot 989`] = `"expected an integer or a pointer type of the outer loop counter '영' for non-rectangular nests"`;

exports[`parser > snapshot 990`] = `"function with 'device_type(영)' is not available on 일"`;

exports[`parser > snapshot 991`] = `"영 variable cannot be 영"`;

exports[`parser > snapshot 992`] = `"directive name modifier '영' is not allowed for '#pragma omp 영'"`;

exports[`parser > snapshot 993`] = `"expected 영"`;

exports[`parser > snapshot 994`] = `"variable of non-reference type 영 can be used only with 'val' modifier, but used with '영'"`;

exports[`parser > snapshot 995`] = `"only 영 expression"`;

exports[`parser > snapshot 996`] = `"variables in the 영 address space can only be declared in the outermost scope of a kernel function"`;

exports[`parser > snapshot 997`] = `"atomic variable can be 영 to a variable only in global address space"`;

exports[`parser > snapshot 998`] = `"illegal call to 영, expected 영 argument type"`;

exports[`parser > snapshot 999`] = `"invalid number of arguments to function: 영"`;

exports[`parser > snapshot 1000`] = `"first argument to 영 must be a pipe type"`;

exports[`parser > snapshot 1001`] = `"invalid pipe access modifier (expecting 영)"`;

exports[`parser > snapshot 1002`] = `"invalid argument type to function 영 (expecting 영 having 영)"`;

exports[`parser > snapshot 1003`] = `"invalid argument 영 to function: 영, expecting a generic pointer argument"`;

exports[`parser > snapshot 1004`] = `"cannot cast non-zero value '영' to 'event_t'"`;

exports[`parser > snapshot 1005`] = `"casting to type 영 is not allowed"`;

exports[`parser > snapshot 1006`] = `"vector component access has invalid length 영.  Supported: 1,2,3,4,8,16."`;

exports[`parser > snapshot 1007`] = `"영 to functions are not allowed"`;

exports[`parser > snapshot 1008`] = `"일 variable cannot be declared in 영 address space"`;

exports[`parser > snapshot 1009`] = `"일 variable must reside in 영 address space"`;

exports[`parser > snapshot 1010`] = `"declaring variable of type 영 is not allowed"`;

exports[`parser > snapshot 1011`] = `"일 builtin functions instead"`;

exports[`parser > snapshot 1012`] = `"implicit declaration of function 영 is invalid in OpenCL"`;

exports[`parser > snapshot 1013`] = `"implicit conversions between vector types (영 and 영) are not permitted"`;

exports[`parser > snapshot 1014`] = `"invalid block variable declaration - must be 영"`;

exports[`parser > snapshot 1015`] = `"declaring function parameter of type 영 is not allowed일"`;

exports[`parser > snapshot 1016`] = `"access qualifier 영 can not be used for 영 일"`;

exports[`parser > snapshot 1017`] = `"declaring function return value of type 영 is not allowed 일"`;

exports[`parser > snapshot 1018`] = `"array of 영 type is invalid in OpenCL"`;

exports[`parser > snapshot 1019`] = `"attribute 영 can only be applied to an OpenCL kernel function"`;

exports[`parser > snapshot 1020`] = `"영 cannot be called 'main'"`;

exports[`parser > snapshot 1021`] = `"pointer to type 영 is invalid in OpenCL"`;

exports[`parser > snapshot 1022`] = `"use of 일 영 requires 영 support"`;

exports[`parser > snapshot 1023`] = `"scalar operand type has greater rank than the type of the vector element. (영 and 영)"`;

exports[`parser > snapshot 1024`] = `"invalid application of '영' to a void type"`;

exports[`parser > snapshot 1025`] = `"type 영 can only be used as a function parameter in OpenCL"`;

exports[`parser > snapshot 1026`] = `"영 type 영 not found; include the base header with -finclude-default-header"`;

exports[`parser > snapshot 1027`] = `"the 영 type cannot be used to declare a structure or union field"`;

exports[`parser > snapshot 1028`] = `"use of 'operator->' on type 영 would invoke a sequence of more than 영 'operator->' calls"`;

exports[`parser > snapshot 1029`] = `"영 cannot take a dependent type as first parameter; use 영 instead"`;

exports[`parser > snapshot 1030`] = `"first parameter of 영 must have type 영"`;

exports[`parser > snapshot 1031`] = `"parameter of 영 cannot have a default argument"`;

exports[`parser > snapshot 1032`] = `"영 cannot be declared inside a namespace"`;

exports[`parser > snapshot 1033`] = `"영 cannot be declared static in global scope"`;

exports[`parser > snapshot 1034`] = `"영 cannot have a dependent return type; use 영 instead"`;

exports[`parser > snapshot 1035`] = `"영 must return type 영"`;

exports[`parser > snapshot 1036`] = `"영 template must have at least two parameters"`;

exports[`parser > snapshot 1037`] = `"영 must have at least one parameter"`;

exports[`parser > snapshot 1038`] = `"영 cannot take a dependent type as first parameter; use size_t (영) instead"`;

exports[`parser > snapshot 1039`] = `"영 takes type size_t (영) as first parameter"`;

exports[`parser > snapshot 1040`] = `"parameter of overloaded 영 cannot have a default argument"`;

exports[`parser > snapshot 1041`] = `"overloaded 영 must be a 이 operator (has 영 parameter일)"`;

exports[`parser > snapshot 1042`] = `"overloaded 영 must be a non-static member function"`;

exports[`parser > snapshot 1043`] = `"overloaded 영 must have at least one parameter of class or enumeration type"`;

exports[`parser > snapshot 1044`] = `"parameter of overloaded post-일 operator must have type 'int' (not 영)"`;

exports[`parser > snapshot 1045`] = `"overloaded 영 cannot be a static member function"`;

exports[`parser > snapshot 1046`] = `"overloaded 영 cannot be variadic"`;

exports[`parser > snapshot 1047`] = `"os_log() argument 영 is too big (영 bytes, max 영)"`;

exports[`parser > snapshot 1048`] = `"defaulting this 영 would delete it after its first declaration"`;

exports[`parser > snapshot 1049`] = `"qualified reference to 영 is a constructor name rather than a 일 in this context"`;

exports[`parser > snapshot 1050`] = `"__builtin_mul_overflow does not support signed _ExtInt operands of more than 영 bits"`;

exports[`parser > snapshot 1051`] = `"operand argument to overflow builtin must be an integer (영 invalid)"`;

exports[`parser > snapshot 1052`] = `"result argument to overflow builtin must be a pointer to a non-const integer (영 invalid)"`;

exports[`parser > snapshot 1053`] = `"call to 영 is ambiguous"`;

exports[`parser > snapshot 1054`] = `"ambiguous conversion for 일 from 영 to 영"`;

exports[`parser > snapshot 1055`] = `"call to constructor of 영 is ambiguous"`;

exports[`parser > snapshot 1056`] = `"call to member function 영 is ambiguous"`;

exports[`parser > snapshot 1057`] = `"call to object of type 영 is ambiguous"`;

exports[`parser > snapshot 1058`] = `"use of overloaded operator '영' is ambiguous (with operand types 영 and 영)"`;

exports[`parser > snapshot 1059`] = `"use of overloaded operator '영' is ambiguous (operand type 영)"`;

exports[`parser > snapshot 1060`] = `"call to deleted function 영"`;

exports[`parser > snapshot 1061`] = `"object of type 영 cannot be compared because its 영 is implicitly deleted"`;

exports[`parser > snapshot 1062`] = `"일 from 영 to 영 uses deleted function"`;

exports[`parser > snapshot 1063`] = `"call to deleted constructor of 영"`;

exports[`parser > snapshot 1064`] = `"call to deleted member function 영"`;

exports[`parser > snapshot 1065`] = `"call to deleted function call operator in type 영"`;

exports[`parser > snapshot 1066`] = `"overload resolution selected deleted operator '영'"`;

exports[`parser > snapshot 1067`] = `"call to implicitly-deleted 일 of 영"`;

exports[`parser > snapshot 1068`] = `"object of type 영 cannot be 일 is implicitly deleted"`;

exports[`parser > snapshot 1069`] = `"cannot convert 영 to 영 without a conversion operator"`;

exports[`parser > snapshot 1070`] = `"type 영 does not provide a 일 operator"`;

exports[`parser > snapshot 1071`] = `"no matching conversion for 일 from 영 to 영"`;

exports[`parser > snapshot 1072`] = `"no matching function for call to 영"`;

exports[`parser > snapshot 1073`] = `"no matching constructor for initialization of 영"`;

exports[`parser > snapshot 1074`] = `"no matching literal operator for call to 영일"`;

exports[`parser > snapshot 1075`] = `"no matching member function for call to 영"`;

exports[`parser > snapshot 1076`] = `"no matching function for call to object of type 영"`;

exports[`parser > snapshot 1077`] = `"no viable overloaded '영'"`;

exports[`parser > snapshot 1078`] = `"no viable overloaded operator[] for type 영"`;

exports[`parser > snapshot 1079`] = `"return type 영 of selected 'operator==' function for rewritten '영' comparison is not 'bool'"`;

exports[`parser > snapshot 1080`] = `"reference to 영?"`;

exports[`parser > snapshot 1081`] = `"'ownership_returns' attribute index does not match; here it is 영"`;

exports[`parser > snapshot 1082`] = `"영 attribute only applies to 일 arguments"`;

exports[`parser > snapshot 1083`] = `"pack expansion contains parameter packs 영 and 영 that have different lengths (영 vs. 영)"`;

exports[`parser > snapshot 1084`] = `"pack expansion contains parameter pack 영 that has a different length (영 vs. 영) from outer parameter packs"`;

exports[`parser > snapshot 1085`] = `"pack expansion contains parameter pack 영 that has a different length (at least 영 vs. 영) from outer parameter packs"`;

exports[`parser > snapshot 1086`] = `"pack expansion for initialization of member 영"`;

exports[`parser > snapshot 1087`] = `"default arguments cannot be added to an out-of-line definition of a member of a 영"`;

exports[`parser > snapshot 1088`] = `"missing default argument on parameter 영"`;

exports[`parser > snapshot 1089`] = `"default argument references local variable 영 of enclosing function"`;

exports[`parser > snapshot 1090`] = `"default argument references parameter 영"`;

exports[`parser > snapshot 1091`] = `"영 cannot have __fp16 type; did you forget * ?"`;

exports[`parser > snapshot 1092`] = `"영 the primary template, remove the template argument list"`;

exports[`parser > snapshot 1093`] = `"partial specialization of 영 does not use any of its template parameters"`;

exports[`parser > snapshot 1094`] = `"ambiguous partial specializations of 영"`;

exports[`parser > snapshot 1095`] = `"class template partial specialization 영 cannot be redeclared"`;

exports[`parser > snapshot 1096`] = `"deduced type 영 does not satisfy 영"`;

exports[`parser > snapshot 1097`] = `"call to pointer to member function of type 영 drops '영' qualifier%s2"`;

exports[`parser > snapshot 1098`] = `"pointer-to-member function type 영 can only be called on an 일"`;

exports[`parser > snapshot 1099`] = `"invalid use of pointer to member type after 영"`;

exports[`parser > snapshot 1100`] = `"this builtin is only valid on POWER영 or later CPUs"`;

exports[`parser > snapshot 1101`] = `"attribute 영 can't be applied to 영"`;

exports[`parser > snapshot 1102`] = `"negated attribute subject matcher sub-rule '영' contradicts sub-rule '영'"`;

exports[`parser > snapshot 1103`] = `"redundant attribute subject matcher sub-rule '영'; '영' already matches those declarations"`;

exports[`parser > snapshot 1104`] = `"'#pragma clang attribute 일push'"`;

exports[`parser > snapshot 1105`] = `"일 directives '영' and '영'"`;

exports[`parser > snapshot 1106`] = `"invalid argument of type 영; expected an integer type"`;

exports[`parser > snapshot 1107`] = `"일"`;

exports[`parser > snapshot 1108`] = `"expected a for, while, or do-while loop to follow '영'"`;

exports[`parser > snapshot 1109`] = `"argument to #pragma section is not valid for this target: 영"`;

exports[`parser > snapshot 1110`] = `"__builtin_preserve_enum_value argument 영 invalid"`;

exports[`parser > snapshot 1111`] = `"__builtin_preserve_enum_value argument 영 not a constant"`;

exports[`parser > snapshot 1112`] = `"__builtin_preserve_field_info argument 영 not a constant"`;

exports[`parser > snapshot 1113`] = `"__builtin_preserve_field_info argument 영 not a field access"`;

exports[`parser > snapshot 1114`] = `"__builtin_preserve_type_info argument 영 invalid"`;

exports[`parser > snapshot 1115`] = `"__builtin_preserve_type_info argument 영 not a constant"`;

exports[`parser > snapshot 1116`] = `"instance variable 영 is private"`;

exports[`parser > snapshot 1117`] = `"type of property 영 (영) does not match type of accessor 영 (영)"`;

exports[`parser > snapshot 1118`] = `"property 영 found on object of type 영; did you mean to access it with the \\".\\" operator?"`;

exports[`parser > snapshot 1119`] = `"property 영 is already implemented"`;

exports[`parser > snapshot 1120`] = `"property 영 has a variably modified type"`;

exports[`parser > snapshot 1121`] = `"type of property 영 (영) does not match type of instance variable 영 (영)"`;

exports[`parser > snapshot 1122`] = `"property access is using 영 method which is unavailable"`;

exports[`parser > snapshot 1123`] = `"property 영 refers to an incomplete Objective-C class 영 (with no @interface available)"`;

exports[`parser > snapshot 1124`] = `"property 영 not found on object of type 영"`;

exports[`parser > snapshot 1125`] = `"property 영 cannot be found in forward class object 영"`;

exports[`parser > snapshot 1126`] = `"property 영 not found on object of type 영; did you mean 영?"`;

exports[`parser > snapshot 1127`] = `"synthesized properties 영 and 영 both claim setter 영 - use of this setter will cause unexpected behavior"`;

exports[`parser > snapshot 1128`] = `"property cannot have array or function type 영"`;

exports[`parser > snapshot 1129`] = `"instance variable 영 is protected"`;

exports[`parser > snapshot 1130`] = `"property 일 was selected for synthesis"`;

exports[`parser > snapshot 1131`] = `"object expression of non-scalar type 영 cannot be used in a pseudo-destructor expression"`;

exports[`parser > snapshot 1132`] = `"영 does not refer to a type name in pseudo-destructor expression; expected the name of type 영"`;

exports[`parser > snapshot 1133`] = `"the type of object expression 영 in pseudo-destructor expression"`;

exports[`parser > snapshot 1134`] = `"friend function definition cannot be qualified with '영'"`;

exports[`parser > snapshot 1135`] = `"friend declaration of 영 does not match any declaration in 영"`;

exports[`parser > snapshot 1136`] = `"type operand 영 of 'typeid' cannot have '영' qualifier"`;

exports[`parser > snapshot 1137`] = `"qualified member access refers to a member in 영"`;

exports[`parser > snapshot 1138`] = `"일 is not a member of class 영"`;

exports[`parser > snapshot 1139`] = `"일 access cannot be qualified with '영'"`;

exports[`parser > snapshot 1140`] = `"cannot build range expression with array function parameter 영 since parameter with array type 영 is treated as pointer type 영"`;

exports[`parser > snapshot 1141`] = `"invalid type 영 to 영 operator"`;

exports[`parser > snapshot 1142`] = `"영 kernel parameters may not contain pointers"`;

exports[`parser > snapshot 1143`] = `"trying to recursively use 영 as superclass of 영"`;

exports[`parser > snapshot 1144`] = `"redeclaration of 영 with a different type일"`;

exports[`parser > snapshot 1145`] = `"redefinition of 영"`;

exports[`parser > snapshot 1146`] = `"redefinition of 영 as different kind of symbol"`;

exports[`parser > snapshot 1147`] = `"redefinition of 영 as an alias for a different namespace"`;

exports[`parser > snapshot 1148`] = `"redefinition of 영 with a different type일"`;

exports[`parser > snapshot 1149`] = `"영,2"`;

exports[`parser > snapshot 1150`] = `"redefinition of a 'extern inline' function 영 is not supported in 일"`;

exports[`parser > snapshot 1151`] = `"redefinition of enumerator 영"`;

exports[`parser > snapshot 1152`] = `"redefinition of label 영"`;

exports[`parser > snapshot 1153`] = `"redefinition of 일 for variably-modified type 영"`;

exports[`parser > snapshot 1154`] = `"reference to 일 function"`;

exports[`parser > snapshot 1155`] = `"reference to 일 function 영 in global initializer"`;

exports[`parser > snapshot 1156`] = `"reference initialization of type 영 with initializer of type 영 is ambiguous"`;

exports[`parser > snapshot 1157`] = `"영 does not refer to a value"`;

exports[`parser > snapshot 1158`] = `"ref-qualifier '영' is not allowed on a constructor"`;

exports[`parser > snapshot 1159`] = `"ref-qualifier '영' is not allowed on a destructor"`;

exports[`parser > snapshot 1160`] = `"cannot overload a member function 영"`;

exports[`parser > snapshot 1161`] = `"binding reference 이 일"`;

exports[`parser > snapshot 1162`] = `"reference %diff{to 영,3"`;

exports[`parser > snapshot 1163`] = `"reference to type 영 cannot bind to an initializer list"`;

exports[`parser > snapshot 1164`] = `"reference of type 영 cannot bind to a temporary object because of address space mismatch"`;

exports[`parser > snapshot 1165`] = `"일"`;

exports[`parser > snapshot 1166`] = `"영 reference cannot bind to matrix element"`;

exports[`parser > snapshot 1167`] = `"영 reference cannot bind to vector element"`;

exports[`parser > snapshot 1168`] = `"invalid reference to function 영: constraints not satisfied"`;

exports[`parser > snapshot 1169`] = `"reference to local 일"`;

exports[`parser > snapshot 1170`] = `"declaration of reference variable 영 requires an initializer"`;

exports[`parser > snapshot 1171`] = `"reference to type 영 requires an initializer"`;

exports[`parser > snapshot 1172`] = `"function declared with regparm(영) attribute was previously declared %plural{0:without the regparm|:with the regparm(영)}1 attribute"`;

exports[`parser > snapshot 1173`] = `"영 attribute cannot be repeated"`;

exports[`parser > snapshot 1174`] = `"constraint variable 영 cannot be used in an evaluated context"`;

exports[`parser > snapshot 1175`] = `"cannot return from 영"`;

exports[`parser > snapshot 1176`] = `"일 영 must not return a value"`;

exports[`parser > snapshot 1177`] = `"builtin requires '영' extension support to be enabled"`;

exports[`parser > snapshot 1178`] = `"영 cannot use 'super' because it is a root class"`;

exports[`parser > snapshot 1179`] = `"rvalue reference type 영 is not allowed in exception specification"`;

exports[`parser > snapshot 1180`] = `"sampler_t variable required - got 영"`;

exports[`parser > snapshot 1181`] = `"sampler_t initialization requires 32-bit integer, not 영"`;

exports[`parser > snapshot 1182`] = `"second argument to 'va_arg' is of abstract type 영"`;

exports[`parser > snapshot 1183`] = `"second argument to 'va_arg' is of incomplete type 영"`;

exports[`parser > snapshot 1184`] = `"영 causes a section type conflict with 영"`;

exports[`parser > snapshot 1185`] = `"selector element of type 영 cannot be a constant lvalue expression"`;

exports[`parser > snapshot 1186`] = `"selector element type 영 is not a valid object"`;

exports[`parser > snapshot 1187`] = `"requested shift is a vector of type 영 but the first operand is not a vector (영)"`;

exports[`parser > snapshot 1188`] = `"일sizeless type 영 is not allowed in exception specification"`;

exports[`parser > snapshot 1189`] = `"non-local variable with sizeless type 영"`;

exports[`parser > snapshot 1190`] = `"invalid application of '영' to a function type"`;

exports[`parser > snapshot 1191`] = `"invalid application of '영' to 일 type 영"`;

exports[`parser > snapshot 1192`] = `"invalid application of '영' to bit-field"`;

exports[`parser > snapshot 1193`] = `"application of '일' to interface 영 is not supported on this architecture and platform"`;

exports[`parser > snapshot 1194`] = `"영 does not refer to the name of a parameter pack"`;

exports[`parser > snapshot 1195`] = `"영 does not refer to the name of a parameter pack; did you mean 영?"`;

exports[`parser > snapshot 1196`] = `"argument to 'operator<=>' 일"`;

exports[`parser > snapshot 1197`] = `"specialization of member 영 does not specialize an instantiated member"`;

exports[`parser > snapshot 1198`] = `"explicit specialization of 영 after instantiation"`;

exports[`parser > snapshot 1199`] = `"cannot reference member of primary template because deduced class template specialization 영 is 일 specialization"`;

exports[`parser > snapshot 1200`] = `"cannot specialize 영a member of an unspecialized template"`;

exports[`parser > snapshot 1201`] = `"forward declaration of 영 cannot have a nested name specifier"`;

exports[`parser > snapshot 1202`] = `"static_assert failed일"`;

exports[`parser > snapshot 1203`] = `"static_assert failed due to requirement '영'일"`;

exports[`parser > snapshot 1204`] = `"static data member 영 not allowed in anonymous 일"`;

exports[`parser > snapshot 1205`] = `"static data member 영 not allowed in local 일 영"`;

exports[`parser > snapshot 1206`] = `"static data member 영 already has an initializer"`;

exports[`parser > snapshot 1207`] = `"cannot cast 영 to 영 via virtual base 영"`;

exports[`parser > snapshot 1208`] = `"static declaration of 영 follows non-static declaration"`;

exports[`parser > snapshot 1209`] = `"static member 영 cannot be a bit-field"`;

exports[`parser > snapshot 1210`] = `"'static' member function 영 overrides a virtual function in a base class"`;

exports[`parser > snapshot 1211`] = `"standard library implementation of 영 is not supported; 일"`;

exports[`parser > snapshot 1212`] = `"unsupported standard library implementation: 'std::영' is not a class template"`;

exports[`parser > snapshot 1213`] = `"영 attribute cannot be applied to a declaration"`;

exports[`parser > snapshot 1214`] = `"@catch parameter cannot have storage specifier '영'"`;

exports[`parser > snapshot 1215`] = `"existing instance variable 영 for strong property 영 may not be __weak"`;

exports[`parser > snapshot 1216`] = `"subscript of pointer to function type 영"`;

exports[`parser > snapshot 1217`] = `"subscript of pointer to 일 type 영"`;

exports[`parser > snapshot 1218`] = `"subscript requires size of interface 영, which is not constant for this architecture and platform"`;

exports[`parser > snapshot 1219`] = `"'영' parameter must have pointer일 type; type here is 영"`;

exports[`parser > snapshot 1220`] = `"'swift_async' completion handler parameter must have block type returning 'void', type here is 영"`;

exports[`parser > snapshot 1221`] = `"영 attribute with 'nonnull_error' convention can only be applied to a 일 with a completion handler with an error parameter"`;

exports[`parser > snapshot 1222`] = `"영 attribute with '영' convention must have an integral-typed parameter in completion handler at index 영, type here is 영"`;

exports[`parser > snapshot 1223`] = `"영 attribute must be applied to a 일 annotated with non-'none' attribute 'swift_async'"`;

exports[`parser > snapshot 1224`] = `"'영' parameter can only be used with swiftcall일"`;

exports[`parser > snapshot 1225`] = `"switch condition type 영 requires explicit conversion to 영"`;

exports[`parser > snapshot 1226`] = `"switch condition has incomplete class type 영"`;

exports[`parser > snapshot 1227`] = `"multiple conversions from switch condition type 영 to an integral or enumeration type"`;

exports[`parser > snapshot 1228`] = `"@synthesize not allowed on a class property 영"`;

exports[`parser > snapshot 1229`] = `"synthesized property with variable size type 영 requires an existing instance variable"`;

exports[`parser > snapshot 1230`] = `"definition of type 영 conflicts with 일 of the same name"`;

exports[`parser > snapshot 1231`] = `"일 index 영 is greater than the number of arguments specified"`;

exports[`parser > snapshot 1232`] = `"implicit declaration introduced by elaborated type conflicts with a 영 of the same name"`;

exports[`parser > snapshot 1233`] = `"일 specifier"`;

exports[`parser > snapshot 1234`] = `"attributes '영(\\"영\\")' and '영(\\"영\\")' are mutually exclusive"`;

exports[`parser > snapshot 1235`] = `"ambiguous constructor call when 일 of type 영"`;

exports[`parser > snapshot 1236`] = `"일 of type 영 invokes deleted constructor"`;

exports[`parser > snapshot 1237`] = `"copying a temporary object of incomplete type 영"`;

exports[`parser > snapshot 1238`] = `"no viable constructor 일 of type 영"`;

exports[`parser > snapshot 1239`] = `"address taken in non-type template argument for template parameter of reference type 영"`;

exports[`parser > snapshot 1240`] = `"deduced incomplete pack 영 for template parameter 영"`;

exports[`parser > snapshot 1241`] = `"non-type template argument refers to non-static data member 영"`;

exports[`parser > snapshot 1242`] = `"constraints not satisfied for 일 영영"`;

exports[`parser > snapshot 1243`] = `"일 영"`;

exports[`parser > snapshot 1244`] = `"sorry, non-type template argument of pointer-to-member type 영 that refers to member 일 of a different class is not supported yet"`;

exports[`parser > snapshot 1245`] = `"non-type template argument refers to non-static member function 영"`;

exports[`parser > snapshot 1246`] = `"template argument for template template parameter must be a class template영"`;

exports[`parser > snapshot 1247`] = `"non-type template parameter of reference type 영"`;

exports[`parser > snapshot 1248`] = `"template argument for non-type template parameter is treated as function type 영"`;

exports[`parser > snapshot 1249`] = `"non-type template argument of type 영 is not a constant expression"`;

exports[`parser > snapshot 1250`] = `"non-type template argument for template parameter of pointer type 영 must have its address taken"`;

exports[`parser > snapshot 1251`] = `"non-type template argument of type 영 cannot be converted to a value of type 영"`;

exports[`parser > snapshot 1252`] = `"non-type template argument of type 영 is not an integral constant expression"`;

exports[`parser > snapshot 1253`] = `"non-type template argument of type 영 must have an integral or enumeration type"`;

exports[`parser > snapshot 1254`] = `"non-type template argument refers to 일 영 that does not have linkage"`;

exports[`parser > snapshot 1255`] = `"reference binding of non-type template parameter 영 ignores qualifiers"`;

exports[`parser > snapshot 1256`] = `"non-type template argument of reference type 영 is not an object"`;

exports[`parser > snapshot 1257`] = `"null non-type template argument must be cast to template parameter type 영"`;

exports[`parser > snapshot 1258`] = `"null non-type template argument of type 영 does not match template parameter of type 영"`;

exports[`parser > snapshot 1259`] = `"pack expansion used as argument for non-pack parameter of 영"`;

exports[`parser > snapshot 1260`] = `"template name refers to non-type template 영"`;

exports[`parser > snapshot 1261`] = `"일 instantiation of undefined template 영"`;

exports[`parser > snapshot 1262`] = `"일 instantiation of template 영 within its own definition"`;

exports[`parser > snapshot 1263`] = `"missing 'template' keyword prior to dependent template name '영영'"`;

exports[`parser > snapshot 1264`] = `"'영영' instantiated to a class template, not a function template"`;

exports[`parser > snapshot 1265`] = `"영일 cannot refer to a dependent template"`;

exports[`parser > snapshot 1266`] = `"영일 does not refer to a template"`;

exports[`parser > snapshot 1267`] = `"member 영 declared as a template"`;

exports[`parser > snapshot 1268`] = `"extraneous 'template<>' in declaration of member 영"`;

exports[`parser > snapshot 1269`] = `"use of 일 영 requires template arguments"`;

exports[`parser > snapshot 1270`] = `"a non-type template parameter cannot have type 영 before C++20"`;

exports[`parser > snapshot 1271`] = `"a non-type template parameter cannot have type 영"`;

exports[`parser > snapshot 1272`] = `"template non-type parameter has a different type 영 in template 일redeclaration"`;

exports[`parser > snapshot 1273`] = `"non-type template parameter has incomplete type 영"`;

exports[`parser > snapshot 1274`] = `"non-type template parameter has non-literal type 영"`;

exports[`parser > snapshot 1275`] = `"type 영 of non-type template parameter is not a structural type"`;

exports[`parser > snapshot 1276`] = `"non-type template parameter has rvalue reference type 영"`;

exports[`parser > snapshot 1277`] = `"template parameter has a different kind in template 영redeclaration"`;

exports[`parser > snapshot 1278`] = `"영redeclaration"`;

exports[`parser > snapshot 1279`] = `"template parameter list matching the non-templated nested type 영 should be empty ('template<>')"`;

exports[`parser > snapshot 1280`] = `"declaration of 영 shadows template parameter"`;

exports[`parser > snapshot 1281`] = `"영"`;

exports[`parser > snapshot 1282`] = `"nested name specifier '영' for declaration does not refer into a class, class template or class template partial specialization"`;

exports[`parser > snapshot 1283`] = `"recursive template instantiation exceeded maximum depth of 영"`;

exports[`parser > snapshot 1284`] = `"explicit specialization of 영 in function scope"`;

exports[`parser > snapshot 1285`] = `"default argument not permitted on an explicit 일 of function 영"`;

exports[`parser > snapshot 1286`] = `"template specialization or definition requires a template parameter list corresponding to the nested type 영"`;

exports[`parser > snapshot 1287`] = `"일 specialization of 영 must occur at global scope"`;

exports[`parser > snapshot 1288`] = `"일"`;

exports[`parser > snapshot 1289`] = `"can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, 영 of a class template"`;

exports[`parser > snapshot 1290`] = `"extraneous 'template<>' in declaration of 영 영"`;

exports[`parser > snapshot 1291`] = `"template template argument 영 is more constrained than template template parameter 영"`;

exports[`parser > snapshot 1292`] = `"extraneous 'template<>' in declaration of variable 영"`;

exports[`parser > snapshot 1293`] = `"tentative definition has type 영 that is never completed"`;

exports[`parser > snapshot 1294`] = `"'this' cannot be 영captured in this context"`;

exports[`parser > snapshot 1295`] = `"'this' cannot be영 used in a static member function declaration"`;

exports[`parser > snapshot 1296`] = `"'영' variables must have global storage"`;

exports[`parser > snapshot 1297`] = `"thread-local declaration of 영 follows non-thread-local declaration"`;

exports[`parser > snapshot 1298`] = `"thread-local declaration of 영 with 일 initialization"`;

exports[`parser > snapshot 1299`] = `"cannot throw an object of abstract type 영"`;

exports[`parser > snapshot 1300`] = `"cannot throw object of incomplete type 영"`;

exports[`parser > snapshot 1301`] = `"cannot throw pointer to object of incomplete type 영"`;

exports[`parser > snapshot 1302`] = `"cannot throw object of sizeless type 영"`;

exports[`parser > snapshot 1303`] = `"alignment (영) of thread-local variable 영 is greater than the maximum supported alignment (영) for a thread-local variable on this target"`;

exports[`parser > snapshot 1304`] = `"function with trailing return type must specify return type 'auto', not 영"`;

exports[`parser > snapshot 1305`] = `"영 requires more than 1 template argument; provide the remaining arguments explicitly to use it here"`;

exports[`parser > snapshot 1306`] = `"영 cannot be defined in a type alias template"`;

exports[`parser > snapshot 1307`] = `"영 cannot be defined in a condition"`;

exports[`parser > snapshot 1308`] = `"영 cannot be defined in an enumeration"`;

exports[`parser > snapshot 1309`] = `"영 cannot be defined in a parameter type"`;

exports[`parser > snapshot 1310`] = `"영 cannot be defined in the result type of a function"`;

exports[`parser > snapshot 1311`] = `"영 cannot be defined in a type specifier"`;

exports[`parser > snapshot 1312`] = `"type of property 영 in class extension does not match property type in primary class"`;

exports[`parser > snapshot 1313`] = `"'type_tag_for_datatype' attribute requires the initializer to be an 영 constant expression"`;

exports[`parser > snapshot 1314`] = `"'type_tag_for_datatype' attribute requires the initializer to be an 영 constant expression that can be represented by a 64 bit integer"`;

exports[`parser > snapshot 1315`] = `"영 is not supported on this target"`;

exports[`parser > snapshot 1316`] = `"address of 영 requested"`;

exports[`parser > snapshot 1317`] = `"taking the address of a temporary object of type 영"`;

exports[`parser > snapshot 1318`] = `"conversion 영 is ambiguous"`;

exports[`parser > snapshot 1319`] = `"arithmetic on a pointer to 일 type 영"`;

exports[`parser > snapshot 1320`] = `"array type 영 is not assignable"`;

exports[`parser > snapshot 1321`] = `"일"`;

exports[`parser > snapshot 1322`] = `"value of type 영 is not contextually convertible to 'bool'"`;

exports[`parser > snapshot 1323`] = `"arguments are of different types영"`;

exports[`parser > snapshot 1324`] = `"ordered compare requires two args of floating point type영"`;

exports[`parser > snapshot 1325`] = `"floating point classification requires argument of floating point type (passed in 영)"`;

exports[`parser > snapshot 1326`] = `"called object type 영 is not a function or function pointer"`;

exports[`parser > snapshot 1327`] = `"argument type 영 is not a real floating point type"`;

exports[`parser > snapshot 1328`] = `"too few 일 call, expected 영, have 영"`;

exports[`parser > snapshot 1329`] = `"too few 일 call, expected at least 영, have 영"`;

exports[`parser > snapshot 1330`] = `"too few 일 call, at least argument 영 must be specified"`;

exports[`parser > snapshot 1331`] = `"too few 일 call, expected at least 영, have 영; did you mean 영?"`;

exports[`parser > snapshot 1332`] = `"too few 일 call, single argument 영 was not specified"`;

exports[`parser > snapshot 1333`] = `"too few 일 call, expected 영, have 영; did you mean 영?"`;

exports[`parser > snapshot 1334`] = `"too many 일 call, expected 영, have 영"`;

exports[`parser > snapshot 1335`] = `"too many 일 call, expected at most 영, have 영"`;

exports[`parser > snapshot 1336`] = `"too many 일 call, expected at most single argument 영, have 영 arguments"`;

exports[`parser > snapshot 1337`] = `"too many 일 call, expected at most 영, have 영; did you mean 영?"`;

exports[`parser > snapshot 1338`] = `"too many 일 call, expected single argument 영, have 영 arguments"`;

exports[`parser > snapshot 1339`] = `"too many 일 call, expected 영, have 영; did you mean 영?"`;

exports[`parser > snapshot 1340`] = `"cast to incomplete type 영"`;

exports[`parser > snapshot 1341`] = `"cast to union type from type 영 not present in union"`;

exports[`parser > snapshot 1342`] = `"comparison of distinct block types영"`;

exports[`parser > snapshot 1343`] = `"comparison of distinct pointer types영"`;

exports[`parser > snapshot 1344`] = `"equality comparison between function pointer and void pointer (영 and 영)"`;

exports[`parser > snapshot 1345`] = `"comparison between pointer and integer (영 and 영)"`;

exports[`parser > snapshot 1346`] = `"used type 영 where integer or floating point type is required"`;

exports[`parser > snapshot 1347`] = `"used type 영 where floating point type is not allowed"`;

exports[`parser > snapshot 1348`] = `"used type 영 where arithmetic or pointer type is required"`;

exports[`parser > snapshot 1349`] = `"incompatible operand types영"`;

exports[`parser > snapshot 1350`] = `"non-pointer operand type 영 incompatible with 일"`;

exports[`parser > snapshot 1351`] = `"영 discards qualifiers"`;

exports[`parser > snapshot 1352`] = `"일"`;

exports[`parser > snapshot 1353`] = `"incompatible block pointer types 영"`;

exports[`parser > snapshot 1354`] = `"incompatible function pointer types 영"`;

exports[`parser > snapshot 1355`] = `"incompatible pointer types 영"`;

exports[`parser > snapshot 1356`] = `"영"`;

exports[`parser > snapshot 1357`] = `"incompatible integer to pointer conversion 영"`;

exports[`parser > snapshot 1358`] = `"incompatible pointer to integer conversion 영"`;

exports[`parser > snapshot 1359`] = `"영 converts between void pointer and function pointer"`;

exports[`parser > snapshot 1360`] = `"value of type 영 is not implicitly convertible to 영"`;

exports[`parser > snapshot 1361`] = `"conversion from 영 to 영 is not allowed in a converted constant expression"`;

exports[`parser > snapshot 1362`] = `"conversion from 영 to 영 in converted constant expression would bind reference to a temporary"`;

exports[`parser > snapshot 1363`] = `"variable has incomplete type 영"`;

exports[`parser > snapshot 1364`] = `"conversion function 영 invokes a deleted function"`;

exports[`parser > snapshot 1365`] = `"invalid operand of type 영 where floating, complex or a vector of such types is required"`;

exports[`parser > snapshot 1366`] = `"used type 영 where integer is required"`;

exports[`parser > snapshot 1367`] = `"operand of type 영 where arithmetic or pointer type is required"`;

exports[`parser > snapshot 1368`] = `"cannot 일 value of type 영"`;

exports[`parser > snapshot 1369`] = `"영 changes address space of pointer"`;

exports[`parser > snapshot 1370`] = `"영 changes address space of nested pointer"`;

exports[`parser > snapshot 1371`] = `"영 changes retain/release properties of pointer"`;

exports[`parser > snapshot 1372`] = `"incomplete definition of type 영"`;

exports[`parser > snapshot 1373`] = `"incomplete type 영 is not assignable"`;

exports[`parser > snapshot 1374`] = `"indirection requires pointer operand (영 invalid)"`;

exports[`parser > snapshot 1375`] = `"cannot take the address of an rvalue of type 영"`;

exports[`parser > snapshot 1376`] = `"invalid operands to binary expression (영 and 영)"`;

exports[`parser > snapshot 1377`] = `"pointer to function type 영 may not be 'restrict' qualified"`;

exports[`parser > snapshot 1378`] = `"restrict requires a pointer or reference (영 is invalid)"`;

exports[`parser > snapshot 1379`] = `"logical expression with vector 일 is only supported in C++"`;

exports[`parser > snapshot 1380`] = `"member reference type 영 is not a pointer"`;

exports[`parser > snapshot 1381`] = `"영 does not have a member named 영"`;

exports[`parser > snapshot 1382`] = `"영 does not have a member named 영; did you mean 영?"`;

exports[`parser > snapshot 1383`] = `"member reference base type 영 is not a structure or union"`;

exports[`parser > snapshot 1384`] = `"member reference type 영 is 일'?"`;

exports[`parser > snapshot 1385`] = `"cannot refer to type member 영 in 영 with '일'"`;

exports[`parser > snapshot 1386`] = `"cannot refer to member 영 in 영 with '일'"`;

exports[`parser > snapshot 1387`] = `"일 when 영 has unspecified explicit return type"`;

exports[`parser > snapshot 1388`] = `"non-object type 영 is not assignable"`;

exports[`parser > snapshot 1389`] = `"no viable conversion영"`;

exports[`parser > snapshot 1390`] = `"no viable conversion영"`;

exports[`parser > snapshot 1391`] = `"영 which are pointers to non-overlapping address spaces"`;

exports[`parser > snapshot 1392`] = `"ordered comparison of function pointers (영 and 영)"`;

exports[`parser > snapshot 1393`] = `"ordered comparison between pointer and zero (영 and 영)"`;

exports[`parser > snapshot 1394`] = `"arithmetic on일"`;

exports[`parser > snapshot 1395`] = `"arithmetic on영 to void"`;

exports[`parser > snapshot 1396`] = `"statement requires expression of integer type (영 invalid)"`;

exports[`parser > snapshot 1397`] = `"statement requires expression of scalar type (영 invalid)"`;

exports[`parser > snapshot 1398`] = `"영"`;

exports[`parser > snapshot 1399`] = `"cannot combine fixed-length and sizeless SVE vectors in expression, result is ambiguous (영 and 영)"`;

exports[`parser > snapshot 1400`] = `"cannot combine GNU and SVE vectors in expression, result is ambiguous (영 and 영)"`;

exports[`parser > snapshot 1401`] = `"invalid argument type 영 to unary expression"`;

exports[`parser > snapshot 1402`] = `"vector operands do not have the same number of elements (영 and 영)"`;

exports[`parser > snapshot 1403`] = `"cannot convert between vector values of different size (영 and 영)"`;

exports[`parser > snapshot 1404`] = `"cannot convert between 일 type 영 and vector type 영 as implicit conversion would cause truncation"`;

exports[`parser > snapshot 1405`] = `"cannot convert between vector and non-scalar values (영 and 영)"`;

exports[`parser > snapshot 1406`] = `"unsupported: anonymous type given name for linkage purposes by 영 declaration after its linkage was computed; add a tag name here to establish linkage prior to definition"`;

exports[`parser > snapshot 1407`] = `"typedef member 영 cannot be a bit-field"`;

exports[`parser > snapshot 1408`] = `"missing 'typename' prior to dependent type name '영영'"`;

exports[`parser > snapshot 1409`] = `"missing 'typename' prior to dependent type template name '영영'"`;

exports[`parser > snapshot 1410`] = `"no type named 영 in 영"`;

exports[`parser > snapshot 1411`] = `"no type named 'type' in 영; 'enable_if' cannot be used to disable this declaration"`;

exports[`parser > snapshot 1412`] = `"failed requirement '영'; 'enable_if' cannot be used to disable this declaration"`;

exports[`parser > snapshot 1413`] = `"typename specifier refers to non-type member 영 in 영"`;

exports[`parser > snapshot 1414`] = `"typename specifier refers to non-type 영"`;

exports[`parser > snapshot 1415`] = `"typename specifier refers to a dependent using declaration for a value 영 in 영"`;

exports[`parser > snapshot 1416`] = `"영 is unavailable"`;

exports[`parser > snapshot 1417`] = `"영 is unavailable in ARC"`;

exports[`parser > snapshot 1418`] = `"영 is unavailable: 영"`;

exports[`parser > snapshot 1419`] = `"영 has unknown return type; cast the call to its declared return type"`;

exports[`parser > snapshot 1420`] = `"no known method 영; cast the message send to the method's return type"`;

exports[`parser > snapshot 1421`] = `"영 has unknown type; cast it to its declared type to use it"`;

exports[`parser > snapshot 1422`] = `"declaration of 영 is missing in 영 class"`;

exports[`parser > snapshot 1423`] = `"undeclared identifier 영 in destructor name"`;

exports[`parser > snapshot 1424`] = `"use of undeclared label 영"`;

exports[`parser > snapshot 1425`] = `"definition of class 영 must be available to use Objective-C 일"`;

exports[`parser > snapshot 1426`] = `"cannot find protocol declaration for 영"`;

exports[`parser > snapshot 1427`] = `"cannot find protocol declaration for 영; did you mean 영?"`;

exports[`parser > snapshot 1428`] = `"use of undeclared 영"`;

exports[`parser > snapshot 1429`] = `"use of undeclared 영; did you mean 영?"`;

exports[`parser > snapshot 1430`] = `"変数 영 は未定義やで"`;

exports[`parser > snapshot 1431`] = `"変数 영 は未定義やで; did you mean 영?"`;

exports[`parser > snapshot 1432`] = `"cannot find interface declaration for 영"`;

exports[`parser > snapshot 1433`] = `"cannot find interface declaration for 영; did you mean 영?"`;

exports[`parser > snapshot 1434`] = `"cannot find interface declaration for 영, superclass of 영"`;

exports[`parser > snapshot 1435`] = `"cannot find interface declaration for 영, superclass of 영; did you mean 영?"`;

exports[`parser > snapshot 1436`] = `"inline variable 영 is not defined"`;

exports[`parser > snapshot 1437`] = `"영 일 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage"`;

exports[`parser > snapshot 1438`] = `"cannot determine underlying type of incomplete enumeration type 영"`;

exports[`parser > snapshot 1439`] = `"일"`;

exports[`parser > snapshot 1440`] = `"unexpected interface name 영: expected expression"`;

exports[`parser > snapshot 1441`] = `"unexpected namespace name 영: expected expression"`;

exports[`parser > snapshot 1442`] = `"unexpected type name 영: expected expression"`;

exports[`parser > snapshot 1443`] = `"cannot define the implicit copy assignment operator for 영, because non-static 일 member 영 cannot use copy assignment operator"`;

exports[`parser > snapshot 1444`] = `"일 member 영"`;

exports[`parser > snapshot 1445`] = `"union member 영 has reference type 영"`;

exports[`parser > snapshot 1446`] = `"function 영 with unknown type must be given a function type"`;

exports[`parser > snapshot 1447`] = `"variable 영 with unknown type cannot be given a function type"`;

exports[`parser > snapshot 1448`] = `"no type named 영 in 영; did you mean 일영?"`;

exports[`parser > snapshot 1449`] = `"unknown receiver 영; did you mean 영?"`;

exports[`parser > snapshot 1450`] = `"unknown 일 name 영; did you mean 영?"`;

exports[`parser > snapshot 1451`] = `"unknown type name 영"`;

exports[`parser > snapshot 1452`] = `"unknown type name 영; did you mean 영?"`;

exports[`parser > snapshot 1453`] = `"영 has unknown type, which is not supported for this kind of declaration"`;

exports[`parser > snapshot 1454`] = `"cannot cast 영 to its 일 base class 영"`;

exports[`parser > snapshot 1455`] = `"illegal redeclaration of property in class extension 영 (attribute must be 'readwrite', while its primary must be 'readonly')"`;

exports[`parser > snapshot 1456`] = `"illegal redeclaration of 'readwrite' property in class extension 영 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)"`;

exports[`parser > snapshot 1457`] = `"use of default argument to function 영 that is declared later in class 영"`;

exports[`parser > snapshot 1458`] = `"use of 영 with tag type that does not match previous declaration"`;

exports[`parser > snapshot 1459`] = `"영 is not a direct base of 영, cannot inherit constructors"`;

exports[`parser > snapshot 1460`] = `"using declaration refers into '영', which is not a base class of 영"`;

exports[`parser > snapshot 1461`] = `"using declaration in class refers into '영', which is not a class"`;

exports[`parser > snapshot 1462`] = `"no namespace named 영 in 영; did you mean 일영?"`;

exports[`parser > snapshot 1463`] = `"no namespace named 영; did you mean 영?"`;

exports[`parser > snapshot 1464`] = `"일 using declaration 영 instantiates to an empty pack"`;

exports[`parser > snapshot 1465`] = `"'va_start' used in 영 ABI function"`;

exports[`parser > snapshot 1466`] = `"variable template partial specialization 영 cannot be redefined"`;

exports[`parser > snapshot 1467`] = `"no variable template matches영 specialization"`;

exports[`parser > snapshot 1468`] = `"no variable template matches specialization; did you mean to use 영 as function template instead?"`;

exports[`parser > snapshot 1469`] = `"일 instantiated with function type 영"`;

exports[`parser > snapshot 1470`] = `"'new' cannot allocate object of variably modified type 영"`;

exports[`parser > snapshot 1471`] = `"non-type template parameter of variably modified type 영"`;

exports[`parser > snapshot 1472`] = `"variably modified type 영 cannot be used as a template argument"`;

exports[`parser > snapshot 1473`] = `"'typeid' of variably modified type 영"`;

exports[`parser > snapshot 1474`] = `"first two arguments to 영 must have the same type"`;

exports[`parser > snapshot 1475`] = `"first two arguments to 영 must be vectors"`;

exports[`parser > snapshot 1476`] = `"'vec_step' requires built-in scalar or vector type, 영 invalid"`;

exports[`parser > snapshot 1477`] = `"일 elements in vector initialization (expected 영 elements, have 영)"`;

exports[`parser > snapshot 1478`] = `"argument 영 to 영 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)"`;

exports[`parser > snapshot 1479`] = `"existing instance variable 영 for __weak property 영 must be __weak"`;

exports[`parser > snapshot 1480`] = `"영 calling convention is not supported 일"`;

exports[`parser > snapshot 1481`] = `"duplicate use of asm operand name \\"영\\""`;

exports[`parser > snapshot 1482`] = `"anonymous types declared in an anonymous 영 are an extension"`;

exports[`parser > snapshot 1483`] = `"types declared in an anonymous 영 are a Microsoft extension"`;

exports[`parser > snapshot 1484`] = `"anonymous 일 cannot be '영'"`;

exports[`parser > snapshot 1485`] = `"initialization of an array 영 is a GNU extension"`;

exports[`parser > snapshot 1486`] = `"implicit conversion from array size expression of type 영 to 일 type 영 is a C++11 extension"`;

exports[`parser > snapshot 1487`] = `"ISO C++ standards before C++17 do not allow new expression for type 영 to use list-initialization"`;

exports[`parser > snapshot 1488`] = `"ISO C++ does not allow 일 from 영 to 영 because it casts away qualifiers, even though the source and destination types are unrelated"`;

exports[`parser > snapshot 1489`] = `"영is a C99 feature"`;

exports[`parser > snapshot 1490`] = `"'trivial_abi' cannot be applied to 영"`;

exports[`parser > snapshot 1491`] = `"일"`;

exports[`parser > snapshot 1492`] = `"use of this statement in a constexpr 영 is a C++14 extension"`;

exports[`parser > snapshot 1493`] = `"use of this statement in a constexpr 영 is a C++20 extension"`;

exports[`parser > snapshot 1494`] = `"영 never produces a constant expression"`;

exports[`parser > snapshot 1495`] = `"function try block in constexpr 영 is a C++20 extension"`;

exports[`parser > snapshot 1496`] = `"variable declaration in a constexpr 영 is a C++14 extension"`;

exports[`parser > snapshot 1497`] = `"uninitialized variable in a constexpr 영 is a C++20 extension"`;

exports[`parser > snapshot 1498`] = `"type definition in a constexpr 영 is a C++14 extension"`;

exports[`parser > snapshot 1499`] = `"'constinit' specifier missing on initializing declaration of 영"`;

exports[`parser > snapshot 1500`] = `"use of the 영 attribute is a C++14 extension"`;

exports[`parser > snapshot 1501`] = `"use of the 영 attribute is a C++17 extension"`;

exports[`parser > snapshot 1502`] = `"use of the 영 attribute is a C++20 extension"`;

exports[`parser > snapshot 1503`] = `"decomposition declaration declared %plural{1:'영'|:with '영' specifiers}0 is a C++20 extension"`;

exports[`parser > snapshot 1504`] = `"default initialization of an object of const type 영일 is a Microsoft extension"`;

exports[`parser > snapshot 1505`] = `"cannot delete expression with pointer-to-'void' type 영"`;

exports[`parser > snapshot 1506`] = `"ISO C++11 does not allow conversion from string literal to 영"`;

exports[`parser > snapshot 1507`] = `"ISO C++ requires field designators to be specified in declaration order; field 영 will be initialized after field 영"`;

exports[`parser > snapshot 1508`] = `"destructor cannot be declared using a 일 영 of the class name"`;

exports[`parser > snapshot 1509`] = `"empty 영 is a GNU extension"`;

exports[`parser > snapshot 1510`] = `"befriending enumeration type 영 is a C++11 extension"`;

exports[`parser > snapshot 1511`] = `"ISO C restricts enumerator values to range of 'int' (영 is too 일)"`;

exports[`parser > snapshot 1512`] = `"incremented enumerator value 영 is not representable in the largest integer type"`;

exports[`parser > snapshot 1513`] = `"enumerator value is not representable in the underlying type 영"`;

exports[`parser > snapshot 1514`] = `"ambiguous use of internal linkage declaration 영 defined in multiple modules"`;

exports[`parser > snapshot 1515`] = `"excess elements in 영 initializer"`;

exports[`parser > snapshot 1516`] = `"excess elements in initializer for indivisible sizeless type 영"`;

exports[`parser > snapshot 1517`] = `"duplicate explicit instantiation of 영 ignored as a Microsoft extension"`;

exports[`parser > snapshot 1518`] = `"qualifier in explicit instantiation of 영 requires a template-id (a typedef is not permitted)"`;

exports[`parser > snapshot 1519`] = `"ISO C++20 does not permit 영 declaration to appear in an export block"`;

exports[`parser > snapshot 1520`] = `"expression is not an 영 constant expression; folding it to a constant is a GNU extension"`;

exports[`parser > snapshot 1521`] = `"flexible array member 영 in otherwise empty 일 is a GNU extension"`;

exports[`parser > snapshot 1522`] = `"flexible array member 영 in otherwise empty 일 is a Microsoft extension"`;

exports[`parser > snapshot 1523`] = `"영 may not be used as an array element due to flexible array member"`;

exports[`parser > snapshot 1524`] = `"영 may not be nested in a struct due to flexible array member"`;

exports[`parser > snapshot 1525`] = `"flexible array member 영 in a union is a GNU extension"`;

exports[`parser > snapshot 1526`] = `"flexible array member 영 in a union is a Microsoft extension"`;

exports[`parser > snapshot 1527`] = `"'begin' and 'end' returning different types (영 and 영) is a C++17 extension"`;

exports[`parser > snapshot 1528`] = `"redeclaration of already-defined enum 영 is a GNU extension"`;

exports[`parser > snapshot 1529`] = `"use of member 영 found via unqualified lookup into dependent bases of class templates is a Microsoft extension"`;

exports[`parser > snapshot 1530`] = `"use of member 영 before its declaration is a Microsoft extension"`;

exports[`parser > snapshot 1531`] = `"arithmetic on일 is a GNU extension"`;

exports[`parser > snapshot 1532`] = `"arithmetic on영 to void is a GNU extension"`;

exports[`parser > snapshot 1533`] = `"function previously declared with an 영 exception specification"`;

exports[`parser > snapshot 1534`] = `"implicit declaration of function 영 is invalid in C99"`;

exports[`parser > snapshot 1535`] = `"implicitly declaring library function '영' with type 영"`;

exports[`parser > snapshot 1536`] = `"in-class initializer for static data member of type 영 is a GNU extension"`;

exports[`parser > snapshot 1537`] = `"in-class initializer for static data member of type 영 requires 'constexpr' specifier"`;

exports[`parser > snapshot 1538`] = `"일incomplete type 영 is not allowed in exception specification"`;

exports[`parser > snapshot 1539`] = `"constant expression evaluates to 영 which cannot be narrowed to type 영"`;

exports[`parser > snapshot 1540`] = `"type 영 cannot be narrowed to 영 in initializer list"`;

exports[`parser > snapshot 1541`] = `"non-constant-expression cannot be narrowed from type 영 to 영 in initializer list"`;

exports[`parser > snapshot 1542`] = `"initializer 영overrides prior initialization of this subobject"`;

exports[`parser > snapshot 1543`] = `"ISO C does not support '~' for complex conjugation of 영"`;

exports[`parser > snapshot 1544`] = `"ISO C does not support '++'/'--' on complex integer type 영"`;

exports[`parser > snapshot 1545`] = `"static 일 영 is used in an inline function with external linkage"`;

exports[`parser > snapshot 1546`] = `"static 일 영 is used in an inline function with external linkage"`;

exports[`parser > snapshot 1547`] = `"too many braces around 영initializer"`;

exports[`parser > snapshot 1548`] = `"영 is missing exception specification '영'"`;

exports[`parser > snapshot 1549`] = `"import of C++ module '영' appears within extern \\"C\\" language linkage specification"`;

exports[`parser > snapshot 1550`] = `"redundant #include of module '영' appears within 영"`;

exports[`parser > snapshot 1551`] = `"accessing inaccessible direct base 영 of 영 is a Microsoft extension"`;

exports[`parser > snapshot 1552`] = `"anonymous 영 are a Microsoft extension"`;

exports[`parser > snapshot 1553`] = `"using the undeclared type 영 as a default template argument is a Microsoft extension"`;

exports[`parser > snapshot 1554`] = `"영 is missing exception specification '영'"`;

exports[`parser > snapshot 1555`] = `"일 is a Microsoft extension"`;

exports[`parser > snapshot 1556`] = `"using declaration referring to inaccessible member '영' (which refers to accessible member '영') is a Microsoft compatibility extension"`;

exports[`parser > snapshot 1557`] = `"lookup of 영 in member access expression is ambiguous; using member of 영"`;

exports[`parser > snapshot 1558`] = `"영 discards qualifiers in nested pointer types"`;

exports[`parser > snapshot 1559`] = `"영 without named members is a GNU extension"`;

exports[`parser > snapshot 1560`] = `"anonymous non-C-compatible type given name for linkage purposes by 영 declaration; add a tag name here"`;

exports[`parser > snapshot 1561`] = `"non-class friend type 영 is a C++11 extension"`;

exports[`parser > snapshot 1562`] = `"offset of on non-POD type 영"`;

exports[`parser > snapshot 1563`] = `"offset of on non-standard-layout type 영"`;

exports[`parser > snapshot 1564`] = `"vector component name '영' is an OpenCL C version 3.0 feature"`;

exports[`parser > snapshot 1565`] = `"replacement function 영 cannot be declared 'inline'"`;

exports[`parser > snapshot 1566`] = `"ISO C++ specifies that qualified reference to 영 is a constructor name rather than a 일 keyword"`;

exports[`parser > snapshot 1567`] = `"ISO C++20 considers use of overloaded operator '영' (with operand types 영 and 영) to be ambiguous despite there being a unique best viable function일"`;

exports[`parser > snapshot 1568`] = `"ISO C++20 requires return type of selected 'operator==' function for rewritten '영' comparison to be 'bool', not 영"`;

exports[`parser > snapshot 1569`] = `"parameter 영 was not declared, defaulting to type 'int'"`;

exports[`parser > snapshot 1570`] = `"영 declared in a previous prototype"`;

exports[`parser > snapshot 1571`] = `"영 template partial specialization is not more specialized than the primary template"`;

exports[`parser > snapshot 1572`] = `"영 that cannot be deduced; this partial specialization will never be used"`;

exports[`parser > snapshot 1573`] = `"redefinition of typedef 영 is a C11 feature"`;

exports[`parser > snapshot 1574`] = `"friend function 영 retaining previous language linkage is an extension"`;

exports[`parser > snapshot 1575`] = `"일 영 should not return a value"`;

exports[`parser > snapshot 1576`] = `"void 일 영 should not return void expression"`;

exports[`parser > snapshot 1577`] = `"non-void 일 영 should return a value"`;

exports[`parser > snapshot 1578`] = `"C++98 requires an accessible copy constructor for class 영 when binding a reference to a temporary; was 일"`;

exports[`parser > snapshot 1579`] = `"no viable constructor 일 of type 영; C++98 requires a copy constructor when binding a reference to a temporary"`;

exports[`parser > snapshot 1580`] = `"invalid application of '영' to a function type"`;

exports[`parser > snapshot 1581`] = `"invalid application of '영' to a void type"`;

exports[`parser > snapshot 1582`] = `"'영' is not permitted on a declaration of a type"`;

exports[`parser > snapshot 1583`] = `"static data member 영 in union is a C++11 extension"`;

exports[`parser > snapshot 1584`] = `"redeclaring non-static 영 as static is a Microsoft extension"`;

exports[`parser > snapshot 1585`] = `"template argument uses local type 영"`;

exports[`parser > snapshot 1586`] = `"non-type template argument referring to 일 영 with internal linkage is a C++11 extension"`;

exports[`parser > snapshot 1587`] = `"declaration of 영 shadows template parameter"`;

exports[`parser > snapshot 1588`] = `"taking the address of a temporary object of type 영"`;

exports[`parser > snapshot 1589`] = `"method parameter type 영"`;

exports[`parser > snapshot 1590`] = `"C99 forbids casting nonscalar type 영 to the same type"`;

exports[`parser > snapshot 1591`] = `"pointer comparisons before C11 need to be between two complete or two incomplete types; 영 is 일complete"`;

exports[`parser > snapshot 1592`] = `"comparison of distinct pointer types영"`;

exports[`parser > snapshot 1593`] = `"equality comparison between function pointer and void pointer (영 and 영)"`;

exports[`parser > snapshot 1594`] = `"comparison between pointer and integer (영 and 영)"`;

exports[`parser > snapshot 1595`] = `"incompatible operand types (영 and 영)"`;

exports[`parser > snapshot 1596`] = `"pointer type mismatch영"`;

exports[`parser > snapshot 1597`] = `"pointer/integer type mismatch in conditional expression영"`;

exports[`parser > snapshot 1598`] = `"영 discards qualifiers"`;

exports[`parser > snapshot 1599`] = `"incompatible function pointer types 영"`;

exports[`parser > snapshot 1600`] = `"incompatible pointer types 영"`;

exports[`parser > snapshot 1601`] = `"영"`;

exports[`parser > snapshot 1602`] = `"incompatible integer to pointer conversion 영"`;

exports[`parser > snapshot 1603`] = `"incompatible pointer to integer conversion 영"`;

exports[`parser > snapshot 1604`] = `"영 converts between void pointer and function pointer"`;

exports[`parser > snapshot 1605`] = `"tentative definition of variable with internal linkage has incomplete non-array type 영"`;

exports[`parser > snapshot 1606`] = `"ISO C++ does not allow indirection on operand of type 영"`;

exports[`parser > snapshot 1607`] = `"ordered comparison of function pointers (영 and 영)"`;

exports[`parser > snapshot 1608`] = `"ordered comparison between pointer and zero (영 and 영) is an extension"`;

exports[`parser > snapshot 1609`] = `"ordered comparison between pointer and integer (영 and 영)"`;

exports[`parser > snapshot 1610`] = `"missing 'typename' prior to dependent type name '영영'"`;

exports[`parser > snapshot 1611`] = `"変数 영 は未定義やで; unqualified lookup into dependent bases of class template 영 is a Microsoft extension"`;

exports[`parser > snapshot 1612`] = `"ISO C++ requires a definition in this translation unit for 영 일 because its type does not have linkage"`;

exports[`parser > snapshot 1613`] = `"unelaborated friend declaration is a C++11 extension; specify '일' to befriend 영"`;

exports[`parser > snapshot 1614`] = `"union member 영 has reference type 영, which is a Microsoft extension"`;

exports[`parser > snapshot 1615`] = `"use of out-of-scope declaration of 영일"`;

exports[`parser > snapshot 1616`] = `"field 영 with variable sized type 영 not at the end of a struct or class is a GNU extension"`;

exports[`parser > snapshot 1617`] = `"'영' cannot be signed or unsigned"`;

exports[`parser > snapshot 1618`] = `"constrained by 영 inheritance here"`;

exports[`parser > snapshot 1619`] = `"영 here"`;

exports[`parser > snapshot 1620`] = `"protected 영 a base class subobject"`;

exports[`parser > snapshot 1621`] = `"must name member using the type of the current context 영"`;

exports[`parser > snapshot 1622`] = `"can only access this member on an object of type 영"`;

exports[`parser > snapshot 1623`] = `"declared with 영 attribute here"`;

exports[`parser > snapshot 1624`] = `"allocated with 'new영' here"`;

exports[`parser > snapshot 1625`] = `"lookup in the object type 영 refers here"`;

exports[`parser > snapshot 1626`] = `"candidate found by name lookup is 영"`;

exports[`parser > snapshot 1627`] = `"inherited from base class 영 here"`;

exports[`parser > snapshot 1628`] = `"member type 영 found by ambiguous name lookup"`;

exports[`parser > snapshot 1629`] = `"because of ambiguity in conversion 영"`;

exports[`parser > snapshot 1630`] = `"use 일 to make an ARC object available as a +1 영"`;

exports[`parser > snapshot 1631`] = `"use 일 to transfer ownership of a +1 영 into ARC"`;

exports[`parser > snapshot 1632`] = `"use __bridge_retained with C-style cast to make an ARC object available as a +1 영"`;

exports[`parser > snapshot 1633`] = `"use __bridge_transfer with C-style cast to transfer ownership of a +1 영 into ARC"`;

exports[`parser > snapshot 1634`] = `"declaration in interface is not in the '영"`;

exports[`parser > snapshot 1635`] = `"block will be retained by 영"`;

exports[`parser > snapshot 1636`] = `"array 영 declared here"`;

exports[`parser > snapshot 1637`] = `"conversion to 일 type 영 declared here"`;

exports[`parser > snapshot 1638`] = `"constraint '영' is already present here"`;

exports[`parser > snapshot 1639`] = `"use constraint modifier \\"영\\""`;

exports[`parser > snapshot 1640`] = `"type 영 is incomplete"`;

exports[`parser > snapshot 1641`] = `"일 '영' evaluated to false"`;

exports[`parser > snapshot 1642`] = `"일 '영' (영 영 영) evaluated to false"`;

exports[`parser > snapshot 1643`] = `"previous 영overload of function is here"`;

exports[`parser > snapshot 1644`] = `"영 has been explicitly marked 일 here"`;

exports[`parser > snapshot 1645`] = `"base class 영 specified here"`;

exports[`parser > snapshot 1646`] = `"did you mean to use __block 영?"`;

exports[`parser > snapshot 1647`] = `"called by 영"`;

exports[`parser > snapshot 1648`] = `"previous call is here영"`;

exports[`parser > snapshot 1649`] = `"영 declared here"`;

exports[`parser > snapshot 1650`] = `"'trivial_abi' is disallowed on 영 because 일"`;

exports[`parser > snapshot 1651`] = `"일 conforms to protocol 영 which defines method 영"`;

exports[`parser > snapshot 1652`] = `"consider making the bitfield type 영"`;

exports[`parser > snapshot 1653`] = `"consider defining 영 with the '영' calling convention"`;

exports[`parser > snapshot 1654`] = `"while checking constraint satisfaction for class template partial specialization '영' required here"`;

exports[`parser > snapshot 1655`] = `"while checking constraint satisfaction for function '영' required here"`;

exports[`parser > snapshot 1656`] = `"while checking constraint satisfaction for template '영' required here"`;

exports[`parser > snapshot 1657`] = `"while checking constraint satisfaction for variable template partial specialization '영' required here"`;

exports[`parser > snapshot 1658`] = `"explicitly declare getter 일 with '영' to return an 'unowned' object"`;

exports[`parser > snapshot 1659`] = `"in defaulted 일 for 영 first required here"`;

exports[`parser > snapshot 1660`] = `"compatible type 영 specified here"`;

exports[`parser > snapshot 1661`] = `"일 '영' evaluated to false"`;

exports[`parser > snapshot 1662`] = `"while checking the satisfaction of concept '영' requested here"`;

exports[`parser > snapshot 1663`] = `"conflicting 영 here"`;

exports[`parser > snapshot 1664`] = `"일 declared here"`;

exports[`parser > snapshot 1665`] = `"add the 영 to the initializing declaration here"`;

exports[`parser > snapshot 1666`] = `"while calculating associated constraint of template '영' here"`;

exports[`parser > snapshot 1667`] = `"use 'static' to give inline function 영 internal linkage"`;

exports[`parser > snapshot 1668`] = `"call to 영 implicitly required by coroutine function here"`;

exports[`parser > snapshot 1669`] = `"call to '영"`;

exports[`parser > snapshot 1670`] = `"the 일"`;

exports[`parser > snapshot 1671`] = `"영 needs to have exactly 영 template parameters"`;

exports[`parser > snapshot 1672`] = `"영 needs to be instantiated from a class template with proper template arguments"`;

exports[`parser > snapshot 1673`] = `"annotate 일 with an availability attribute to silence this warning"`;

exports[`parser > snapshot 1674`] = `"this declaration is not a prototype; add 영"`;

exports[`parser > snapshot 1675`] = `"function is a coroutine due to use of '영' here"`;

exports[`parser > snapshot 1676`] = `"declared 영 here"`;

exports[`parser > snapshot 1677`] = `"required by 영 here"`;

exports[`parser > snapshot 1678`] = `"during template argument deduction for 일영 영"`;

exports[`parser > snapshot 1679`] = `"deduction guide declared 영 by intervening access specifier"`;

exports[`parser > snapshot 1680`] = `"member template declared 영 here"`;

exports[`parser > snapshot 1681`] = `"in instantiation of default argument for '영' required here"`;

exports[`parser > snapshot 1682`] = `"in instantiation of default function argument expression for '영' required here"`;

exports[`parser > snapshot 1683`] = `"defaulted 영 is implicitly deleted because implied 일is ambiguous"`;

exports[`parser > snapshot 1684`] = `"defaulted 영 is implicitly deleted because it would invoke a deleted comparison function일"`;

exports[`parser > snapshot 1685`] = `"return type of defaulted 'operator<=>' cannot be deduced because return type 영 of three-way comparison for 일 영 is not a standard comparison category type"`;

exports[`parser > snapshot 1686`] = `"selected 'operator<=>' for 일 영 declared here"`;

exports[`parser > snapshot 1687`] = `"일 영 declared here"`;

exports[`parser > snapshot 1688`] = `"defaulted 영 is implicitly deleted because it would invoke a 일"`;

exports[`parser > snapshot 1689`] = `"defaulted 영 is implicitly deleted because there is no viable three-way comparison function for일 영"`;

exports[`parser > snapshot 1690`] = `"three-way comparison cannot be synthesized because there is no viable function for 영 comparison"`;

exports[`parser > snapshot 1691`] = `"non-constexpr comparison function would be used to compare 일"`;

exports[`parser > snapshot 1692`] = `"defaulted 영 is implicitly deleted because this non-rewritten comparison function would be the best match for the comparison"`;

exports[`parser > snapshot 1693`] = `"defaulted 영 is implicitly deleted because class 영 has a reference member"`;

exports[`parser > snapshot 1694`] = `"defaulted 영 is implicitly deleted because 영 is a 일 with variant members"`;

exports[`parser > snapshot 1695`] = `"영 defined here"`;

exports[`parser > snapshot 1696`] = `"conversion to pointer type 영"`;

exports[`parser > snapshot 1697`] = `"일 type 영"`;

exports[`parser > snapshot 1698`] = `"copy constructor of 영 is implicitly deleted because field 영 is of rvalue reference type 영"`;

exports[`parser > snapshot 1699`] = `"copy 일"`;

exports[`parser > snapshot 1700`] = `"일 are const-qualified"`;

exports[`parser > snapshot 1701`] = `"일 type 영 would not be initialized"`;

exports[`parser > snapshot 1702`] = `"일"`;

exports[`parser > snapshot 1703`] = `"function is implicitly deleted because its declared type does not match the type of an implicit 영"`;

exports[`parser > snapshot 1704`] = `"candidate ignored: 영"`;

exports[`parser > snapshot 1705`] = `"type 영 found by destructor name lookup"`;

exports[`parser > snapshot 1706`] = `"direct method 영 declared here"`;

exports[`parser > snapshot 1707`] = `"due to 영 being dllexported일"`;

exports[`parser > snapshot 1708`] = `"asm operand name \\"영\\" first referenced here"`;

exports[`parser > snapshot 1709`] = `"element 영 also has value 영"`;

exports[`parser > snapshot 1710`] = `"change this ',' to a ';' to call 영"`;

exports[`parser > snapshot 1711`] = `"영 declared here"`;

exports[`parser > snapshot 1712`] = `"enum 영 was explicitly specialized here"`;

exports[`parser > snapshot 1713`] = `"declared here일"`;

exports[`parser > snapshot 1714`] = `"in evaluation of exception specification for 영 needed here"`;

exports[`parser > snapshot 1715`] = `"explicit 영 declared here"`;

exports[`parser > snapshot 1716`] = `"explicit instantiation candidate function 일 template here 영"`;

exports[`parser > snapshot 1717`] = `"while substituting explicitly-specified template arguments into function template 영 영"`;

exports[`parser > snapshot 1718`] = `"'template<>' header not required for explicitly-specialized class 영 declared here"`;

exports[`parser > snapshot 1719`] = `"일 type constraint '영' was not satisfied:"`;

exports[`parser > snapshot 1720`] = `"일 영 does not satisfy 영:"`;

exports[`parser > snapshot 1721`] = `"일 '영' would be invalid: 영"`;

exports[`parser > snapshot 1722`] = `"일 '영' would be invalid"`;

exports[`parser > snapshot 1723`] = `"일 '영' may throw an exception"`;

exports[`parser > snapshot 1724`] = `"일 '영' would be invalid: 영"`;

exports[`parser > snapshot 1725`] = `"일 '영' would be invalid"`;

exports[`parser > snapshot 1726`] = `"declared 영 here"`;

exports[`parser > snapshot 1727`] = `"mark 영 as '일' to silence this warning"`;

exports[`parser > snapshot 1728`] = `"final overrider of 일 in 영"`;

exports[`parser > snapshot 1729`] = `"initialized flexible array member 영 is here"`;

exports[`parser > snapshot 1730`] = `"selected '일영 with iterator type 영"`;

exports[`parser > snapshot 1731`] = `"in implicit call to 'operator일' for iterator of type 영"`;

exports[`parser > snapshot 1732`] = `"member is not a candidate because range type 영 has no '일' member"`;

exports[`parser > snapshot 1733`] = `"did you mean to use '영'?"`;

exports[`parser > snapshot 1734`] = `"영 is not defined, but forward declared here; conversion would be valid if it was derived from 영"`;

exports[`parser > snapshot 1735`] = `"found near match '영'"`;

exports[`parser > snapshot 1736`] = `"from 'diagnose_if' attribute on 영:"`;

exports[`parser > snapshot 1737`] = `"did you mean 영?"`;

exports[`parser > snapshot 1738`] = `"while substituting deduced template arguments into function template 영 영"`;

exports[`parser > snapshot 1739`] = `"in instantiation of function template specialization 영 requested here"`;

exports[`parser > snapshot 1740`] = `"function template 일 matches specialization 영"`;

exports[`parser > snapshot 1741`] = `"or because setter is declared here, but no getter method 영 is found"`;

exports[`parser > snapshot 1742`] = `"inline assembly label 영 declared here"`;

exports[`parser > snapshot 1743`] = `"hidden overloaded virtual function 이 declared here일"`;

exports[`parser > snapshot 1744`] = `"conversion to 일 type 영 declared here"`;

exports[`parser > snapshot 1745`] = `"field of illegal 일 영 declared here"`;

exports[`parser > snapshot 1746`] = `"when implemented by class 영"`;

exports[`parser > snapshot 1747`] = `"implicit 일 inferred target collision: call to both 영 members"`;

exports[`parser > snapshot 1748`] = `"영 is an implicit parameter"`;

exports[`parser > snapshot 1749`] = `"in implicit initialization of binding declaration 영"`;

exports[`parser > snapshot 1750`] = `"while declaring the implicit 일 for 영"`;

exports[`parser > snapshot 1751`] = `"when looking up '일' function for range expression of type 영"`;

exports[`parser > snapshot 1752`] = `"in implicit initialization of 일"`;

exports[`parser > snapshot 1753`] = `"in initialization of temporary of type 영 created to list-initialize this reference"`;

exports[`parser > snapshot 1754`] = `"include the header <영> or explicitly provide a declaration for '영'"`;

exports[`parser > snapshot 1755`] = `"conformance of forward class 영 to protocol 영 can not be confirmed"`;

exports[`parser > snapshot 1756`] = `"possible target of 영 goto statement"`;

exports[`parser > snapshot 1757`] = `"initializing field 영 with default member initializer"`;

exports[`parser > snapshot 1758`] = `"일 영"`;

exports[`parser > snapshot 1759`] = `"insert '영;' to silence this warning"`;

exports[`parser > snapshot 1760`] = `"add an explicit instantiation declaration to suppress this warning if 영 is explicitly instantiated in another translation unit"`;

exports[`parser > snapshot 1761`] = `"(skipping 영 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)"`;

exports[`parser > snapshot 1762`] = `"영 instantiation first required here"`;

exports[`parser > snapshot 1763`] = `"일"`;

exports[`parser > snapshot 1764`] = `"default capture by 영"`;

exports[`parser > snapshot 1765`] = `"capture 영 by 일"`;

exports[`parser > snapshot 1766`] = `"영 declared here"`;

exports[`parser > snapshot 1767`] = `"type of 영 parameter of local declaration does not match definition일"`;

exports[`parser > snapshot 1768`] = `"일here"`;

exports[`parser > snapshot 1769`] = `"the other acquisition of 영 '영' is here"`;

exports[`parser > snapshot 1770`] = `"영 acquired here"`;

exports[`parser > snapshot 1771`] = `"use '영' for a bitwise operation"`;

exports[`parser > snapshot 1772`] = `"add parentheses after the '!' to evaluate the 영 first"`;

exports[`parser > snapshot 1773`] = `"영 here"`;

exports[`parser > snapshot 1774`] = `"member 영 declared here"`;

exports[`parser > snapshot 1775`] = `"member declaration does not match because it 영 const qualified"`;

exports[`parser > snapshot 1776`] = `"type of 영 parameter of member declaration does not match definition일"`;

exports[`parser > snapshot 1777`] = `"member 영 first declared here"`;

exports[`parser > snapshot 1778`] = `"in 일 for 영 first required here"`;

exports[`parser > snapshot 1779`] = `"did you mean to compare the result of 영 instead?"`;

exports[`parser > snapshot 1780`] = `"method 영 declared here"`;

exports[`parser > snapshot 1781`] = `"compiler has implicitly changed method 영 return type"`;

exports[`parser > snapshot 1782`] = `"method 영 is used for the forward class"`;

exports[`parser > snapshot 1783`] = `"영 begins here"`;

exports[`parser > snapshot 1784`] = `"target function has calling convention 영 (expected 영)"`;

exports[`parser > snapshot 1785`] = `"영 declared here"`;

exports[`parser > snapshot 1786`] = `"target function 일"`;

exports[`parser > snapshot 1787`] = `"target 영 is declared here"`;

exports[`parser > snapshot 1788`] = `"namespace 영 defined here"`;

exports[`parser > snapshot 1789`] = `"consider using vld1_영영() to initialize a vector from memory, or vcreate_영영() to initialize from an integer constant"`;

exports[`parser > snapshot 1790`] = `"consider using vld1q_영영() to initialize a vector from memory, or vcombine_영영(vcreate_영영(), vcreate_영영()) to initialize from integer constants"`;

exports[`parser > snapshot 1791`] = `"일 '영' would be invalid: 영"`;

exports[`parser > snapshot 1792`] = `"일 '영' would be invalid"`;

exports[`parser > snapshot 1793`] = `"next 영 is here"`;

exports[`parser > snapshot 1794`] = `"type is not C-compatible due to this 영"`;

exports[`parser > snapshot 1795`] = `"non-deducible template parameter 영"`;

exports[`parser > snapshot 1796`] = `"영 is not literal because it has base class 영 of non-literal type"`;

exports[`parser > snapshot 1797`] = `"영 is not literal because it has data member 영 of 일 type 영"`;

exports[`parser > snapshot 1798`] = `"incomplete type 영 is not a literal type"`;

exports[`parser > snapshot 1799`] = `"영 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors"`;

exports[`parser > snapshot 1800`] = `"영 is not literal because its destructor is not constexpr"`;

exports[`parser > snapshot 1801`] = `"영 is not literal because it has a non-trivial destructor"`;

exports[`parser > snapshot 1802`] = `"영 is not literal because it has a user-provided destructor"`;

exports[`parser > snapshot 1803`] = `"영 is not a literal type"`;

exports[`parser > snapshot 1804`] = `"일"`;

exports[`parser > snapshot 1805`] = `"non-usual 영 declared here"`;

exports[`parser > snapshot 1806`] = `"because field 영 has an initializer"`;

exports[`parser > snapshot 1807`] = `"field is non-trivial to 영"`;

exports[`parser > snapshot 1808`] = `"because type 영 has a virtual 일"`;

exports[`parser > snapshot 1809`] = `"because no 일 of type 영"`;

exports[`parser > snapshot 1810`] = `"because 일type 영 has no default constructor"`;

exports[`parser > snapshot 1811`] = `"because type 영 has a member with 일 ownership"`;

exports[`parser > snapshot 1812`] = `"because its parameter is 영"`;

exports[`parser > snapshot 1813`] = `"because the function selected to 일 of type 영 is not trivial"`;

exports[`parser > snapshot 1814`] = `"because 일"`;

exports[`parser > snapshot 1815`] = `"destructor for 영 is not trivial because it is virtual"`;

exports[`parser > snapshot 1816`] = `"영 should be declared prior to the call site일"`;

exports[`parser > snapshot 1817`] = `"영 is not a structural type because it has a mutable non-static data member"`;

exports[`parser > snapshot 1818`] = `"영 is not a structural type because it has a 일 that is not public"`;

exports[`parser > snapshot 1819`] = `"영 is not a structural type because it has a non-static data member of rvalue reference type"`;

exports[`parser > snapshot 1820`] = `"영 is not a structural type because it has a 일 of non-structural type 영"`;

exports[`parser > snapshot 1821`] = `"insert '영"`;

exports[`parser > snapshot 1822`] = `"영 specified here"`;

exports[`parser > snapshot 1823`] = `"use nullability type specifier 영 to affect the innermost pointer type of 영"`;

exports[`parser > snapshot 1824`] = `"영 declared here"`;

exports[`parser > snapshot 1825`] = `"일 parameter has unexpected type 영 (should be 영)"`;

exports[`parser > snapshot 1826`] = `"method returns unexpected type 영 (should be an object type)"`;

exports[`parser > snapshot 1827`] = `"type parameter 영 declared here"`;

exports[`parser > snapshot 1828`] = `"method 영 that returns 영 declared here"`;

exports[`parser > snapshot 1829`] = `"영"`;

exports[`parser > snapshot 1830`] = `"영"`;

exports[`parser > snapshot 1831`] = `"영"`;

exports[`parser > snapshot 1832`] = `"as specified in 영"`;

exports[`parser > snapshot 1833`] = `"conversion to 일 type 영 declared here"`;

exports[`parser > snapshot 1834`] = `"일'hint' clause with value '영'"`;

exports[`parser > snapshot 1835`] = `"영directive with no 'hint' clause specified"`;

exports[`parser > snapshot 1836`] = `"'영' directive found here"`;

exports[`parser > snapshot 1837`] = `"defined as 영"`;

exports[`parser > snapshot 1838`] = `"memory order clause '영' is specified here"`;

exports[`parser > snapshot 1839`] = `"implicitly determined as 영"`;

exports[`parser > snapshot 1840`] = `"loop step is expected to be 영 due to this condition"`;

exports[`parser > snapshot 1841`] = `"marked as 'device_type(영)' here"`;

exports[`parser > snapshot 1842`] = `"영 outside teams construct here"`;

exports[`parser > snapshot 1843`] = `"'ordered' clause영"`;

exports[`parser > snapshot 1844`] = `"predefined trait '영' used here"`;

exports[`parser > snapshot 1845`] = `"일"`;

exports[`parser > snapshot 1846`] = `"'영' clause is specified here"`;

exports[`parser > snapshot 1847`] = `"previous '영' directive used here"`;

exports[`parser > snapshot 1848`] = `"'영' clause used here"`;

exports[`parser > snapshot 1849`] = `"'영' previously encountered here"`;

exports[`parser > snapshot 1850`] = `"영 clause previously used here"`;

exports[`parser > snapshot 1851`] = `"previously declared '영' here"`;

exports[`parser > snapshot 1852`] = `"'operator->' declared here produces an object of type 영"`;

exports[`parser > snapshot 1853`] = `"(skipping 영 'operator->'%s0 in backtrace)"`;

exports[`parser > snapshot 1854`] = `"built-in candidate 영"`;

exports[`parser > snapshot 1855`] = `"candidate 이,1,3일"`;

exports[`parser > snapshot 1856`] = `"candidate 이,1,2 not viable: requires일 provided"`;

exports[`parser > snapshot 1857`] = `"candidate 이,1,2 not viable: 일 arguments were provided"`;

exports[`parser > snapshot 1858`] = `"candidate 삼,1,2 not viable: cannot 일 영 in 이 argument"`;

exports[`parser > snapshot 1859`] = `"candidate 일,1,2 not viable: 'this' object is in 영, but method expects object in 영"`;

exports[`parser > snapshot 1860`] = `"candidate 이,1,2 not viable: cannot implicitly convert argument 일 for 영 under ARC"`;

exports[`parser > snapshot 1861`] = `"candidate 삼,1,2 not viable: cannot 일 영 for 이 argument"`;

exports[`parser > snapshot 1862`] = `"candidate 이,1,2 not viable: no known conversion 일 for 영"`;

exports[`parser > snapshot 1863`] = `"candidate 이,1,2 not viable: cannot convert argument of incomplete type 일 for 영"`;

exports[`parser > snapshot 1864`] = `"candidate 삼,1,2 not viable: 이 argument (영) would lose 일"`;

exports[`parser > snapshot 1865`] = `"candidate 이,1,2 not viable: 'this' argument has type 영, but method is not marked 일"`;

exports[`parser > snapshot 1866`] = `"candidate 이,1,2 not viable: 일 ownership"`;

exports[`parser > snapshot 1867`] = `"candidate 일,1,2 not viable: cannot convert initializer list argument to 영"`;

exports[`parser > snapshot 1868`] = `"candidate 이,1,2 not viable: no overload of 영 matching 영 for 일 argument"`;

exports[`parser > snapshot 1869`] = `"candidate 이,1,2 not viable: 일 ownership"`;

exports[`parser > snapshot 1870`] = `"candidate 일,1,2 not viable: call to 영 function"`;

exports[`parser > snapshot 1871`] = `"candidate 이,1,2 not viable: 일 argument (영) would lose __unaligned qualifier"`;

exports[`parser > snapshot 1872`] = `"candidate 일,1,2 not viable: expects an 영"`;

exports[`parser > snapshot 1873`] = `"candidate 영,1,2 not viable: constraints not satisfied"`;

exports[`parser > snapshot 1874`] = `"candidate template ignored: deduced type %diff{$ of 일,2영"`;

exports[`parser > snapshot 1875`] = `"candidate 일,1,2 has been 영"`;

exports[`parser > snapshot 1876`] = `"candidate template ignored: disabled by 영영"`;

exports[`parser > snapshot 1877`] = `"candidate disabled: 영"`;

exports[`parser > snapshot 1878`] = `"candidate template ignored: requirement '영' was not satisfied영"`;

exports[`parser > snapshot 1879`] = `"explicit 영"`;

exports[`parser > snapshot 1880`] = `"candidate template ignored: invalid explicitly-specified argument for template parameter 영"`;

exports[`parser > snapshot 1881`] = `"candidate template ignored: invalid explicitly-specified argument for 영 template parameter"`;

exports[`parser > snapshot 1882`] = `"candidate address cannot be taken because parameter 영 has pass_object_size attribute"`;

exports[`parser > snapshot 1883`] = `"candidate 영 its own class type by value"`;

exports[`parser > snapshot 1884`] = `"candidate constructor ignored: cannot be used to construct an object in address space 영"`;

exports[`parser > snapshot 1885`] = `"candidate template ignored: couldn't infer template argument 영"`;

exports[`parser > snapshot 1886`] = `"candidate template ignored: deduced too few arguments for expanded pack 영; no argument for 일 expanded parameter in deduced argument pack 영"`;

exports[`parser > snapshot 1887`] = `"candidate template ignored: deduced 일,3"`;

exports[`parser > snapshot 1888`] = `"candidate template ignored: deduced values 일"`;

exports[`parser > snapshot 1889`] = `"constructor from base class 영 inherited here"`;

exports[`parser > snapshot 1890`] = `"candidate 영 object"`;

exports[`parser > snapshot 1891`] = `"candidate template ignored: could not match 영"`;

exports[`parser > snapshot 1892`] = `"candidate template ignored: could not match 영 against 일"`;

exports[`parser > snapshot 1893`] = `"candidate template ignored: substitution failure영영"`;

exports[`parser > snapshot 1894`] = `"candidate template ignored: cannot deduce a type for 영 that would make 영 equal 영"`;

exports[`parser > snapshot 1895`] = `"candidate template ignored: constraints not satisfied영"`;

exports[`parser > snapshot 1896`] = `"conversion candidate of type 영"`;

exports[`parser > snapshot 1897`] = `"remaining 영 candidate%s0 omitted; pass -fshow-overloads=all to show them"`;

exports[`parser > snapshot 1898`] = `"declared with index 영 here"`;

exports[`parser > snapshot 1899`] = `"passing argument to parameter 영 here"`;

exports[`parser > snapshot 1900`] = `"parameter pack 영 declared here"`;

exports[`parser > snapshot 1901`] = `"parameter of type 영 is declared here"`;

exports[`parser > snapshot 1902`] = `"영 has been marked as being introduced in 영 영 here, but the deployment target is 영 영"`;

exports[`parser > snapshot 1903`] = `"partial specialization matches 영"`;

exports[`parser > snapshot 1904`] = `"영"`;

exports[`parser > snapshot 1905`] = `"pointer 영 declared here"`;

exports[`parser > snapshot 1906`] = `"place parentheses around the 영 expression to evaluate it first"`;

exports[`parser > snapshot 1907`] = `"place parentheses around the '영' expression to silence this warning"`;

exports[`parser > snapshot 1908`] = `"module loaded from '영'"`;

exports[`parser > snapshot 1909`] = `"previous declaration of class template partial specialization 영 is here"`;

exports[`parser > snapshot 1910`] = `"previously declared '영' here"`;

exports[`parser > snapshot 1911`] = `"영 is a builtin with type 영"`;

exports[`parser > snapshot 1912`] = `"영 declared here"`;

exports[`parser > snapshot 1913`] = `"for type 영"`;

exports[`parser > snapshot 1914`] = `"previous initialization for field 영 is here"`;

exports[`parser > snapshot 1915`] = `"previous initialization 영"`;

exports[`parser > snapshot 1916`] = `"previously defined as an alias for 영"`;

exports[`parser > snapshot 1917`] = `"did you mean to call the 영 method?"`;

exports[`parser > snapshot 1918`] = `"while substituting prior template arguments into 일 template parameter영 영"`;

exports[`parser > snapshot 1919`] = `"property 영 is declared 일 here"`;

exports[`parser > snapshot 1920`] = `"protocol 영 has no definition"`;

exports[`parser > snapshot 1921`] = `"it could also be property 일 declared here"`;

exports[`parser > snapshot 1922`] = `"qualified call to 영::영 is treated as a virtual call to 영 due to -fapple-kext"`;

exports[`parser > snapshot 1923`] = `"unimplemented pure virtual method 영 in 영"`;

exports[`parser > snapshot 1924`] = `"add a variable name to declare a 영 initialized with 영"`;

exports[`parser > snapshot 1925`] = `"'영' included multiple times, additional include site here"`;

exports[`parser > snapshot 1926`] = `"'영' included multiple times, additional include site in header from module '영'"`;

exports[`parser > snapshot 1927`] = `"영 member declared here"`;

exports[`parser > snapshot 1928`] = `"일 member 영 will never be initialized"`;

exports[`parser > snapshot 1929`] = `"영 returns a reference"`;

exports[`parser > snapshot 1930`] = `"use 'static_cast' to adjust the pointer correctly while 영"`;

exports[`parser > snapshot 1931`] = `"영"`;

exports[`parser > snapshot 1932`] = `"영"`;

exports[`parser > snapshot 1933`] = `"일 method 영 is assumed to return an instance of its receiver type (영)"`;

exports[`parser > snapshot 1934`] = `"remove the call to '영' since unsigned values cannot be negative"`;

exports[`parser > snapshot 1935`] = `"use function '영' instead"`;

exports[`parser > snapshot 1936`] = `"영 has been explicitly marked sentinel here"`;

exports[`parser > snapshot 1937`] = `"일 영 does not satisfy 영"`;

exports[`parser > snapshot 1938`] = `"declare 'static' if the 영 is not intended to be used outside of this translation unit"`;

exports[`parser > snapshot 1939`] = `"did you mean 영 here?"`;

exports[`parser > snapshot 1940`] = `"because substituted constraint expression is ill-formed영"`;

exports[`parser > snapshot 1941`] = `"영 to silence"`;

exports[`parser > snapshot 1942`] = `"conversion to 일 type 영"`;

exports[`parser > snapshot 1943`] = `"tail call required by 영 attribute here"`;

exports[`parser > snapshot 1944`] = `"non-type template argument refers to 영 here"`;

exports[`parser > snapshot 1945`] = `"template argument refers to function template 영, here"`;

exports[`parser > snapshot 1946`] = `"class template 영 was explicitly specialized here"`;

exports[`parser > snapshot 1947`] = `"in instantiation of template class 영 requested here"`;

exports[`parser > snapshot 1948`] = `"class template 영 was instantiated here"`;

exports[`parser > snapshot 1949`] = `"일 영 declared here"`;

exports[`parser > snapshot 1950`] = `"in instantiation of enumeration 영 requested here"`;

exports[`parser > snapshot 1951`] = `"in instantiation of exception specification for 영 requested here"`;

exports[`parser > snapshot 1952`] = `"in instantiation of member class 영 requested here"`;

exports[`parser > snapshot 1953`] = `"in instantiation of member function 영 requested here"`;

exports[`parser > snapshot 1954`] = `"template non-type parameter has a different type 영 in template argument"`;

exports[`parser > snapshot 1955`] = `"previous non-type template parameter with type 영 is here"`;

exports[`parser > snapshot 1956`] = `"in instantiation of default member initializer 영 requested here"`;

exports[`parser > snapshot 1957`] = `"영 template parameters in template template argument"`;

exports[`parser > snapshot 1958`] = `"previous 영 declared here"`;

exports[`parser > snapshot 1959`] = `"영 in template argument"`;

exports[`parser > snapshot 1960`] = `"previous template 영 is here"`;

exports[`parser > snapshot 1961`] = `"in instantiation of static data member 영 requested here"`;

exports[`parser > snapshot 1962`] = `"in instantiation of template type alias 영 requested here"`;

exports[`parser > snapshot 1963`] = `"in instantiation of variable template specialization 영 requested here"`;

exports[`parser > snapshot 1964`] = `"thread warning in function 영"`;

exports[`parser > snapshot 1965`] = `"영 exception specification"`;

exports[`parser > snapshot 1966`] = `"required alignment of type 영 (영 bytes) is larger than the supported alignment of C++ exception objects on this target (영 bytes)"`;

exports[`parser > snapshot 1967`] = `"일 of first field is 영 bits"`;

exports[`parser > snapshot 1968`] = `"영 is incomplete"`;

exports[`parser > snapshot 1969`] = `"일 '영' would be invalid: 영"`;

exports[`parser > snapshot 1970`] = `"일 '영' would be invalid"`;

exports[`parser > snapshot 1971`] = `"일"`;

exports[`parser > snapshot 1972`] = `"일 operand was implicitly converted to type 영"`;

exports[`parser > snapshot 1973`] = `"type is given name 영 for linkage purposes by this 일 declaration"`;

exports[`parser > snapshot 1974`] = `"referenced member 영 is declared here"`;

exports[`parser > snapshot 1975`] = `"referenced 영 is declared here"`;

exports[`parser > snapshot 1976`] = `"enclose 영 in 일 check to silence this warning"`;

exports[`parser > snapshot 1977`] = `"remove the 일"`;

exports[`parser > snapshot 1978`] = `"during field initialization in 영 constructor"`;

exports[`parser > snapshot 1979`] = `"영 here"`;

exports[`parser > snapshot 1980`] = `"영 released here"`;

exports[`parser > snapshot 1981`] = `"영"`;

exports[`parser > snapshot 1982`] = `"use non-reference type 영"`;

exports[`parser > snapshot 1983`] = `"use reference type 영 to prevent copying"`;

exports[`parser > snapshot 1984`] = `"use non-reference type 영 to make construction explicit or type 영 to prevent copying"`;

exports[`parser > snapshot 1985`] = `"영using declaration"`;

exports[`parser > snapshot 1986`] = `"use 영 instead"`;

exports[`parser > snapshot 1987`] = `"영using-enum declaration"`;

exports[`parser > snapshot 1988`] = `"in value-initialization of type 영 here"`;

exports[`parser > snapshot 1989`] = `"variable 영 is declared here"`;

exports[`parser > snapshot 1990`] = `"variable 영 is일 captured here"`;

exports[`parser > snapshot 1991`] = `"initialize the variable 영 to silence this warning"`;

exports[`parser > snapshot 1992`] = `"일"`;

exports[`parser > snapshot 1993`] = `"widen this field to 영 bits to store all values of 영"`;

exports[`parser > snapshot 1994`] = `"within field of type 영 declared here"`;

exports[`parser > snapshot 1995`] = `"replace expression with '영' 일to silence this warning"`;

exports[`parser > snapshot 1996`] = `"non-virtual member function marked '영' hides virtual member 일"`;

exports[`parser > snapshot 1997`] = `"only virtual member functions can be marked '영'"`;

exports[`parser > snapshot 1998`] = `"영"`;

exports[`parser > snapshot 1999`] = `"영 comparison operator"`;

exports[`parser > snapshot 2000`] = `"영"`;

exports[`parser > snapshot 2001`] = `"일"`;

exports[`parser > snapshot 2002`] = `"영"`;

exports[`parser > snapshot 2003`] = `"영"`;

exports[`parser > snapshot 2004`] = `"영-bit 일 value"`;

exports[`parser > snapshot 2005`] = `"absolute value function 영 given an argument of type 영 but has parameter of type 영 which may cause truncation of value"`;

exports[`parser > snapshot 2006`] = `"abstract class is marked '영'"`;

exports[`parser > snapshot 2007`] = `"initializer for virtual base class 영 of abstract class 영 will never be used"`;

exports[`parser > snapshot 2008`] = `"type of property 영 does not match type of accessor 영"`;

exports[`parser > snapshot 2009`] = `"acquiring 영 '영' requires negative capability '영'"`;

exports[`parser > snapshot 2010`] = `"영 '영' must be acquired before '영'"`;

exports[`parser > snapshot 2011`] = `"Cycle in acquired_before/after dependencies, starting with '영'"`;

exports[`parser > snapshot 2012`] = `"operator '영' has lower precedence than '영'; '영' will be evaluated first"`;

exports[`parser > snapshot 2013`] = `"reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to 영"`;

exports[`parser > snapshot 2014`] = `"영"`;

exports[`parser > snapshot 2015`] = `"use of function 영 is discouraged; there is no way to check for failure but failure may still occur, resulting in a possibly exploitable security vulnerability"`;

exports[`parser > snapshot 2016`] = `"multiple suitable 영 functions for 영; no 'operator delete' function will be invoked if initialization throws an exception"`;

exports[`parser > snapshot 2017`] = `"ARC 영 lifetime qualifier on return type is ignored"`;

exports[`parser > snapshot 2018`] = `"assigning 영; object will be released after assignment"`;

exports[`parser > snapshot 2019`] = `"일 this 영 call is a pointer to ownership-qualified type 영"`;

exports[`parser > snapshot 2020`] = `"weak 일 and may be unpredictably set to nil; assign to a strong variable to keep the object alive"`;

exports[`parser > snapshot 2021`] = `"weak 일 but may be unpredictably set to nil; assign to a strong variable to keep the object alive"`;

exports[`parser > snapshot 2022`] = `"capturing 영 strongly in this block is likely to lead to a retain cycle"`;

exports[`parser > snapshot 2023`] = `"assigning retained object to 영; object will be released after assignment"`;

exports[`parser > snapshot 2024`] = `"method parameter of type 영 with no explicit ownership"`;

exports[`parser > snapshot 2025`] = `"argument value 영 is outside the valid range [영, 영]"`;

exports[`parser > snapshot 2026`] = `"이 일 type 영"`;

exports[`parser > snapshot 2027`] = `"이 일 type 영 is deprecated"`;

exports[`parser > snapshot 2028`] = `"일 different enumeration types영"`;

exports[`parser > snapshot 2029`] = `"일 different enumeration types영 is deprecated"`;

exports[`parser > snapshot 2030`] = `"일 different enumeration types영"`;

exports[`parser > snapshot 2031`] = `"일 different enumeration types영 is deprecated"`;

exports[`parser > snapshot 2032`] = `"array index 영 is past the end of the array (which contains 영 element%s2)"`;

exports[`parser > snapshot 2033`] = `"array index 영 refers past the last possible element for an array in 영-bit address space containing 영-bit (영-byte) elements (max possible 영 element%s5)"`;

exports[`parser > snapshot 2034`] = `"array index 영 is before the beginning of the array"`;

exports[`parser > snapshot 2035`] = `"ignored asm label '영' on automatic variable"`;

exports[`parser > snapshot 2036`] = `"requested alignment must be 영 bytes or smaller; maximum alignment assumed"`;

exports[`parser > snapshot 2037`] = `"unknown assumption string '영'; attribute is potentially ignored"`;

exports[`parser > snapshot 2038`] = `"unknown assumption string '영' may be misspelled; attribute is potentially ignored, did you mean '영'?"`;

exports[`parser > snapshot 2039`] = `"the argument to 영 has side effects that will be discarded"`;

exports[`parser > snapshot 2040`] = `"영) instead"`;

exports[`parser > snapshot 2041`] = `"writable atomic property 영 cannot pair a synthesized 일"`;

exports[`parser > snapshot 2042`] = `"'abi_tag' attribute on 영 namespace ignored"`;

exports[`parser > snapshot 2043`] = `"consumed analysis attribute is attached to member of class 영 which isn't marked as consumable"`;

exports[`parser > snapshot 2044`] = `"영 attribute cannot be applied to this declaration"`;

exports[`parser > snapshot 2045`] = `"영 attribute cannot be applied to a 일 with no parameters"`;

exports[`parser > snapshot 2046`] = `"영 attribute argument must be a string literal specifying a Swift function name"`;

exports[`parser > snapshot 2047`] = `"영 attribute for getter must not have any parameters besides 'self:'"`;

exports[`parser > snapshot 2048`] = `"영 attribute has invalid identifier for the 일 name"`;

exports[`parser > snapshot 2049`] = `"영 attribute is missing parameter label clause"`;

exports[`parser > snapshot 2050`] = `"영 attribute cannot specify more than one 'self:' parameter"`;

exports[`parser > snapshot 2051`] = `"too 일 parameters in the signature specified by the 영 attribute (expected 영; got 영)"`;

exports[`parser > snapshot 2052`] = `"영 attribute for setter must have one parameter for new value"`;

exports[`parser > snapshot 2053`] = `"영 attribute for 'subscript' getter cannot have a 'newValue:' parameter"`;

exports[`parser > snapshot 2054`] = `"영 attribute for 'subscript' must 일"`;

exports[`parser > snapshot 2055`] = `"영 attribute for 'subscript' setter cannot have multiple 'newValue:' parameters"`;

exports[`parser > snapshot 2056`] = `"영 attribute for 'subscript' setter must have a 'newValue:' parameter"`;

exports[`parser > snapshot 2057`] = `"attribute 영 after definition is ignored"`;

exports[`parser > snapshot 2058`] = `"영 attribute parameter 영 is negative and will be ignored"`;

exports[`parser > snapshot 2059`] = `"propagating dll attribute to 영 base class template without dll attribute is not supported"`;

exports[`parser > snapshot 2060`] = `"redeclaration of 영 should not add 일 attribute"`;

exports[`parser > snapshot 2061`] = `"attribute 영 has no effect when annotating an 'if constexpr' statement"`;

exports[`parser > snapshot 2062`] = `"attribute 영 has no effect when annotating an infinite loop"`;

exports[`parser > snapshot 2063`] = `"영 attribute can only be applied to instance variables or properties"`;

exports[`parser > snapshot 2064`] = `"영 attribute ignored"`;

exports[`parser > snapshot 2065`] = `"영 attribute ignored for field of type 영"`;

exports[`parser > snapshot 2066`] = `"영 attribute ignored on inline function"`;

exports[`parser > snapshot 2067`] = `"영 attribute ignored on a non-definition declaration"`;

exports[`parser > snapshot 2068`] = `"'영' attribute cannot be specified on a definition"`;

exports[`parser > snapshot 2069`] = `"'영' is not a valid builtin name for 영"`;

exports[`parser > snapshot 2070`] = `"영 attribute ignored when parsing type"`;

exports[`parser > snapshot 2071`] = `"영 attribute only applies to a pointer or reference (영 is invalid)"`;

exports[`parser > snapshot 2072`] = `"영 attribute only applies to일 pointer arguments"`;

exports[`parser > snapshot 2073`] = `"영 attribute only applies to return values that are pointers"`;

exports[`parser > snapshot 2074`] = `"영 attribute only applies to return values that are pointers or references"`;

exports[`parser > snapshot 2075`] = `"#pragma 영(\\".drectve\\") has undefined behavior, use #pragma comment(linker, ...) instead"`;

exports[`parser > snapshot 2076`] = `"'sentinel' attribute only supported for variadic 영"`;

exports[`parser > snapshot 2077`] = `"영 attribute argument not supported: 영"`;

exports[`parser > snapshot 2078`] = `"unknown visibility 영"`;

exports[`parser > snapshot 2079`] = `"attribute 영 cannot be applied to 일 without return value"`;

exports[`parser > snapshot 2080`] = `"영 attribute only applies to 일"`;

exports[`parser > snapshot 2081`] = `"영 attribute only applies to 영"`;

exports[`parser > snapshot 2082`] = `"conflicting attributes 영 are ignored"`;

exports[`parser > snapshot 2083`] = `"readonly IBOutlet property 영 when auto-synthesized may not work correctly with 'nib' loader"`;

exports[`parser > snapshot 2084`] = `"auto property synthesis will not synthesize property 영 declared in protocol 영"`;

exports[`parser > snapshot 2085`] = `"'auto' deduced as 'id' in declaration of 영"`;

exports[`parser > snapshot 2086`] = `"auto property synthesis will not synthesize property 영; it will be implemented by its superclass, use @dynamic to acknowledge intention"`;

exports[`parser > snapshot 2087`] = `"autosynthesized property 영 will use 일 instance variable 영, not existing instance variable 영"`;

exports[`parser > snapshot 2088`] = `"ignoring availability attribute 영"`;

exports[`parser > snapshot 2089`] = `"unknown platform 영 in availability macro"`;

exports[`parser > snapshot 2090`] = `"feature cannot be 일 in version 영; attribute ignored"`;

exports[`parser > snapshot 2091`] = `"일 from 영 to 영 changes address space of nested pointers"`;

exports[`parser > snapshot 2092`] = `"cast from function call of type 영 to non-matching type 영"`;

exports[`parser > snapshot 2093`] = `"receiver type 영 is not 'id' or interface pointer, consider casting it to 'id'"`;

exports[`parser > snapshot 2094`] = `"base class 영 is uninitialized when used here to access 일"`;

exports[`parser > snapshot 2095`] = `"binding reference member 영 to stack allocated 일 영"`;

exports[`parser > snapshot 2096`] = `"bit-field 영 is not wide enough to store all enumerators of 영"`;

exports[`parser > snapshot 2097`] = `"width of bit-field 영 (영 bits) exceeds the width of its type; value will be truncated to 영 bit%s2"`;

exports[`parser > snapshot 2098`] = `"bitwise negation of a boolean expression영 did you mean logical negation?"`;

exports[`parser > snapshot 2099`] = `"'영' within '영'"`;

exports[`parser > snapshot 2100`] = `"attribute 영 ignored, because it cannot be applied to omitted return type"`;

exports[`parser > snapshot 2101`] = `"'영' qualifier on omitted return type 영 has no effect"`;

exports[`parser > snapshot 2102`] = `"braces around 영initializer"`;

exports[`parser > snapshot 2103`] = `"'영' will always overflow; destination buffer has size 영, but size argument is 영"`;

exports[`parser > snapshot 2104`] = `"use of unknown builtin 영"`;

exports[`parser > snapshot 2105`] = `"call to pure virtual member function 영 has undefined behavior; overrides of 영 in subclasses are not available in the 일 of 영"`;

exports[`parser > snapshot 2106`] = `"too 일 arguments in call to 영"`;

exports[`parser > snapshot 2107`] = `"영 parameter marked 'called_once' is called twice"`;

exports[`parser > snapshot 2108`] = `"일영 parameter marked 'called_once' is never called"`;

exports[`parser > snapshot 2109`] = `"영 parameter marked 'called_once' is never 일"`;

exports[`parser > snapshot 2110`] = `"cannot pass object of 일; call will abort at runtime"`;

exports[`parser > snapshot 2111`] = `"overflow converting case value to switch condition type (영 to 영)"`;

exports[`parser > snapshot 2112`] = `"cast from 영 to 영 increases required alignment from 영 to 영"`;

exports[`parser > snapshot 2113`] = `"cast between incompatible calling conventions '영' and '영'; calls through this pointer may abort at runtime"`;

exports[`parser > snapshot 2114`] = `"cast 영converts to incompatible function type"`;

exports[`parser > snapshot 2115`] = `"nonnull 일 '영' will evaluate to 'true' on first encounter"`;

exports[`parser > snapshot 2116`] = `"cast of type 영 to 영 is deprecated; use sel_getName instead"`;

exports[`parser > snapshot 2117`] = `"cast from 영 to 영 drops 일"`;

exports[`parser > snapshot 2118`] = `"cast from 영 to 영 must have all intermediate pointers const qualified to be safe"`;

exports[`parser > snapshot 2119`] = `"function with no prototype cannot use the 영 calling convention"`;

exports[`parser > snapshot 2120`] = `"영 calling convention is not supported 일"`;

exports[`parser > snapshot 2121`] = `"cannot refer to a non-static member from the handler of a 영 function try block"`;

exports[`parser > snapshot 2122`] = `"class method 영 not found (return type defaults to 'id')"`;

exports[`parser > snapshot 2123`] = `"class method 영 not found (return type defaults to 'id'); did you mean 일?"`;

exports[`parser > snapshot 2124`] = `"passing union across security boundary via 일 may leak information"`;

exports[`parser > snapshot 2125`] = `"collection expression type 영 may not respond to 영"`;

exports[`parser > snapshot 2126`] = `"영"`;

exports[`parser > snapshot 2127`] = `"bitwise comparison always evaluates to 영"`;

exports[`parser > snapshot 2128`] = `"일 different enumeration types영"`;

exports[`parser > snapshot 2129`] = `"일 different enumeration types영 is deprecated"`;

exports[`parser > snapshot 2130`] = `"comparison of different enumeration types in switch statement영"`;

exports[`parser > snapshot 2131`] = `"영completion handler is never called"`;

exports[`parser > snapshot 2132`] = `"completion handler is never 영"`;

exports[`parser > snapshot 2133`] = `"일 different enumeration types영"`;

exports[`parser > snapshot 2134`] = `"일 different enumeration types영 is deprecated"`;

exports[`parser > snapshot 2135`] = `"conflicting distributed object modifiers on parameter type in declaration of 영"`;

exports[`parser > snapshot 2136`] = `"conflicting parameter types in declaration of 영일"`;

exports[`parser > snapshot 2137`] = `"conflicting distributed object modifiers on return type in declaration of 영"`;

exports[`parser > snapshot 2138`] = `"conflicting return type in declaration of 영일"`;

exports[`parser > snapshot 2139`] = `"conflicting distributed object modifiers on parameter type in implementation of 영"`;

exports[`parser > snapshot 2140`] = `"conflicting parameter types in implementation of 영일"`;

exports[`parser > snapshot 2141`] = `"conflicting distributed object modifiers on return type in implementation of 영"`;

exports[`parser > snapshot 2142`] = `"conflicting return type in implementation of 영일"`;

exports[`parser > snapshot 2143`] = `"conversion function converting 영 to its base class 영 will never be used"`;

exports[`parser > snapshot 2144`] = `"conversion function converting 영 to itself will never be used"`;

exports[`parser > snapshot 2145`] = `"conversion function converting 영 to 영 will never be used"`;

exports[`parser > snapshot 2146`] = `"return type of 'coroutine_handle<>::address should be 'void*' (have 영) in order to get capability with existing async C API."`;

exports[`parser > snapshot 2147`] = `"영 is required to declare the member 'unhandled_exception()' when exceptions are enabled"`;

exports[`parser > snapshot 2148`] = `"일"`;

exports[`parser > snapshot 2149`] = `"영 may not intend to support class template argument deduction"`;

exports[`parser > snapshot 2150`] = `"constructor parameter 영 shadows the field 영 of 영"`;

exports[`parser > snapshot 2151`] = `"use of this statement in a constexpr 영 is incompatible with C++ standards before C++14"`;

exports[`parser > snapshot 2152`] = `"variable declaration in a constexpr 영 is incompatible with C++ standards before C++14"`;

exports[`parser > snapshot 2153`] = `"type definition in a constexpr 영 is incompatible with C++ standards before C++14"`;

exports[`parser > snapshot 2154`] = `"attribute 영 ignored, because it cannot be applied to a type"`;

exports[`parser > snapshot 2155`] = `"class template argument deduction is incompatible with C++ standards before C++17일"`;

exports[`parser > snapshot 2156`] = `"non-type template parameters declared with 영 are incompatible with C++ standards before C++17"`;

exports[`parser > snapshot 2157`] = `"use of this statement in a constexpr 영 is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2158`] = `"function try block in constexpr 영 is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2159`] = `"uninitialized variable in a constexpr 영 is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2160`] = `"decomposition declaration declared %plural{1:'영'|:with '영' specifiers}0 is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2161`] = `"explicitly defaulting this 영 with a type different from the implicit type is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2162`] = `"mangled name of 영 will change in C++17 due to non-throwing exception specification in function signature"`;

exports[`parser > snapshot 2163`] = `"영 of lambda is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2164`] = `"non-type template parameter of type 영 is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2165`] = `"member using declaration naming non-class '영' enumerator is incompatible with C++ standards before C++20"`;

exports[`parser > snapshot 2166`] = `"aggregate initialization of type 영 with user-declared constructors is incompatible with C++20"`;

exports[`parser > snapshot 2167`] = `"implicit conversion from array size expression of type 영 to 일 type 영 is incompatible with C++98"`;

exports[`parser > snapshot 2168`] = `"initializing 영 from an empty initializer list is incompatible with C++98"`;

exports[`parser > snapshot 2169`] = `"befriending enumeration type 영 is incompatible with C++98"`;

exports[`parser > snapshot 2170`] = `"jump from this 영 goto statement to one of its possible targets is incompatible with C++98"`;

exports[`parser > snapshot 2171`] = `"use of non-static data member 영 in an unevaluated context is incompatible with C++98"`;

exports[`parser > snapshot 2172`] = `"non-class friend type 영 is incompatible with C++98"`;

exports[`parser > snapshot 2173`] = `"일 is incompatible with C++98"`;

exports[`parser > snapshot 2174`] = `"passing object of trivial but non-POD type 영 through variadic 일 is incompatible with C++98"`;

exports[`parser > snapshot 2175`] = `"static data member 영 in union is incompatible with C++98"`;

exports[`parser > snapshot 2176`] = `"이 of type 영 when binding a reference to a temporary would 일 in C++98"`;

exports[`parser > snapshot 2177`] = `"local type 영 as template argument is incompatible with C++98"`;

exports[`parser > snapshot 2178`] = `"non-type template argument referring to 일 영 with internal linkage is incompatible with C++98"`;

exports[`parser > snapshot 2179`] = `"befriending 영 without '일' keyword is incompatible with C++98"`;

exports[`parser > snapshot 2180`] = `"'영' type specifier is incompatible with C++98"`;

exports[`parser > snapshot 2181`] = `"initializing pointer member 영 to point to a temporary object whose lifetime is shorter than the lifetime of the constructed object"`;

exports[`parser > snapshot 2182`] = `"일 a temporary object whose lifetime is shorter than the lifetime of the constructed object"`;

exports[`parser > snapshot 2183`] = `"일will be destroyed at the end of the full-expression"`;

exports[`parser > snapshot 2184`] = `"declaration of 영 will not be visible outside of this function"`;

exports[`parser > snapshot 2185`] = `"declaration shadows a 일"`;

exports[`parser > snapshot 2186`] = `"declaration shadows a 일"`;

exports[`parser > snapshot 2187`] = `"ignoring __declspec(allocator) because the function return type 영 is not a pointer or reference type"`;

exports[`parser > snapshot 2188`] = `"attribute 영 is ignored, place it after \\"일\\" to apply attribute to type declaration"`;

exports[`parser > snapshot 2189`] = `"exception specifications of 영 types differ"`;

exports[`parser > snapshot 2190`] = `"%plural{1:enumeration value 영 not explicitly handled in switch|2:enumeration values 영 and 영 not explicitly handled in switch|3:enumeration values 영, 영, and 영 not explicitly handled in switch|:영 enumeration values not explicitly handled in switch: 영, 영, 영...}0"`;

exports[`parser > snapshot 2191`] = `"atomic by default property 영 has a user defined 일 (property should be marked 'atomic' if this is intended)"`;

exports[`parser > snapshot 2192`] = `"explicitly defaulted 영 is implicitly deleted"`;

exports[`parser > snapshot 2193`] = `"explicitly defaulted 영 is implicitly deleted"`;

exports[`parser > snapshot 2194`] = `"constructor for 영 creates a delegation cycle"`;

exports[`parser > snapshot 2195`] = `"일 called on 영 that is abstract but has non-virtual destructor"`;

exports[`parser > snapshot 2196`] = `"'delete' applied to a pointer-to-array type 영 treated as 'delete[]'"`;

exports[`parser > snapshot 2197`] = `"deleting pointer to incomplete type 영 may cause undefined behavior"`;

exports[`parser > snapshot 2198`] = `"일 called on non-final 영 that has virtual functions but non-virtual destructor"`;

exports[`parser > snapshot 2199`] = `"영 is deprecated"`;

exports[`parser > snapshot 2200`] = `"compound assignment to object of volatile-qualified type 영 is deprecated"`;

exports[`parser > snapshot 2201`] = `"definition of implicit copy 일"`;

exports[`parser > snapshot 2202`] = `"definition of implicit copy 일 for 영 is deprecated because it has a user-declared destructor"`;

exports[`parser > snapshot 2203`] = `"definition of implicit copy 일"`;

exports[`parser > snapshot 2204`] = `"definition of implicit copy 일 for 영 is deprecated because it has a user-provided destructor"`;

exports[`parser > snapshot 2205`] = `"implementing deprecated 영"`;

exports[`parser > snapshot 2206`] = `"영 may be deprecated because the receiver type is unknown"`;

exports[`parser > snapshot 2207`] = `"영 currently has no effect on a using declaration"`;

exports[`parser > snapshot 2208`] = `"일 of object of volatile-qualified type 영 is deprecated"`;

exports[`parser > snapshot 2209`] = `"영 is deprecated: 영"`;

exports[`parser > snapshot 2210`] = `"use of result of assignment to object of volatile-qualified type 영 is deprecated"`;

exports[`parser > snapshot 2211`] = `"conversion from string literal to 영 is deprecated"`;

exports[`parser > snapshot 2212`] = `"volatile-qualified parameter type 영 is deprecated"`;

exports[`parser > snapshot 2213`] = `"volatile-qualified return type 영 is deprecated"`;

exports[`parser > snapshot 2214`] = `"dereferencing 영; was declared with a 'noderef' type"`;

exports[`parser > snapshot 2215`] = `"영 overrides a destructor but is not marked 'override'"`;

exports[`parser > snapshot 2216`] = `"영"`;

exports[`parser > snapshot 2217`] = `"instance variable 영 is being directly accessed"`;

exports[`parser > snapshot 2218`] = `"expression does not compute the number of elements in this array; element type is 영, not 영"`;

exports[`parser > snapshot 2219`] = `"'영' will return the size of the pointer, not the array itself"`;

exports[`parser > snapshot 2220`] = `"일 redeclared inline; 영 attribute ignored"`;

exports[`parser > snapshot 2221`] = `"double precision constant requires 영, casting to single precision"`;

exports[`parser > snapshot 2222`] = `"acquiring 영 '영' that is already held"`;

exports[`parser > snapshot 2223`] = `"attribute 영 is already applied with different arguments"`;

exports[`parser > snapshot 2224`] = `"attribute 영 is already applied"`;

exports[`parser > snapshot 2225`] = `"element 영 has been implicitly assigned 영 which another element has been assigned"`;

exports[`parser > snapshot 2226`] = `"multiple declarations of method 영 found and ignored"`;

exports[`parser > snapshot 2227`] = `"duplicate protocol definition of 영 is ignored"`;

exports[`parser > snapshot 2228`] = `"일"`;

exports[`parser > snapshot 2229`] = `"exception of type 영 will be caught by earlier handler"`;

exports[`parser > snapshot 2230`] = `"expecting 영 '영' to be held at start of each loop"`;

exports[`parser > snapshot 2231`] = `"expecting 영 '영' to be held at the end of function"`;

exports[`parser > snapshot 2232`] = `"explicit instantiation of 영 that occurs after an explicit specialization has no effect"`;

exports[`parser > snapshot 2233`] = `"explicit instantiation of 영 must occur at global scope"`;

exports[`parser > snapshot 2234`] = `"explicit instantiation of 영 not in a namespace enclosing 영"`;

exports[`parser > snapshot 2235`] = `"explicit instantiation of 일 must occur in namespace 영"`;

exports[`parser > snapshot 2236`] = `"field 영 is uninitialized when used here"`;

exports[`parser > snapshot 2237`] = `"class with destructor marked '영' cannot be inherited from"`;

exports[`parser > snapshot 2238`] = `"enumeration value 영 is out of range of flags in enumeration type 영"`;

exports[`parser > snapshot 2239`] = `"magnitude of floating-point constant too large for type 영; maximum is 영"`;

exports[`parser > snapshot 2240`] = `"magnitude of floating-point constant too small for type 영; minimum is 영"`;

exports[`parser > snapshot 2241`] = `"'begin' and 'end' returning different types (영 and 영) is incompatible with C++ standards before C++17"`;

exports[`parser > snapshot 2242`] = `"loop variable 영 일"`;

exports[`parser > snapshot 2243`] = `"loop variable 영 creates a copy from type 영"`;

exports[`parser > snapshot 2244`] = `"loop variable 영 binds to a temporary value produced by a range of type 영"`;

exports[`parser > snapshot 2245`] = `"using '%%P' format specifier without precision"`;

exports[`parser > snapshot 2246`] = `"일 '영' should not be used as format arguments; add an explicit cast to 영 instead"`;

exports[`parser > snapshot 2247`] = `"일 '영' should not be used as format arguments; add an explicit cast to 영 instead"`;

exports[`parser > snapshot 2248`] = `"using '영' format specifier, but argument has boolean value"`;

exports[`parser > snapshot 2249`] = `"format specifies type 영 but the argument has 일 영"`;

exports[`parser > snapshot 2250`] = `"format specifies type 영 but the argument has 일 영"`;

exports[`parser > snapshot 2251`] = `"format specifies type 영 but the argument has 일 영"`;

exports[`parser > snapshot 2252`] = `"using '영' format specifier annotation outside of os_log()/os_trace()"`;

exports[`parser > snapshot 2253`] = `"invalid conversion specifier '영'"`;

exports[`parser > snapshot 2254`] = `"invalid position specified for 영"`;

exports[`parser > snapshot 2255`] = `"'영' 일 is not supported by ISO C"`;

exports[`parser > snapshot 2256`] = `"using length modifier '영' with conversion specifier '영' is not supported by ISO C"`;

exports[`parser > snapshot 2257`] = `"length modifier '영' results in undefined behavior or no effect with '영' conversion specifier"`;

exports[`parser > snapshot 2258`] = `"'영' will always overflow; destination buffer has size 영, but format string expands to at least 영"`;

exports[`parser > snapshot 2259`] = `"'영' will always overflow; destination buffer has size 영, but size argument is 영"`;

exports[`parser > snapshot 2260`] = `"'영' size argument is too large; destination buffer has size 영, but size argument is 영"`;

exports[`parser > snapshot 2261`] = `"redefinition of forward class 영 of a typedef name of an object type is ignored"`;

exports[`parser > snapshot 2262`] = `"calling '영' with a nonzero argument is unsafe"`;

exports[`parser > snapshot 2263`] = `"attempt to call 영 on non-heap 일"`;

exports[`parser > snapshot 2264`] = `"cannot call function '영' while 영 '영' is held"`;

exports[`parser > snapshot 2265`] = `"calling function 영 requires holding 영 일"`;

exports[`parser > snapshot 2266`] = `"calling function 영 requires holding 영 일"`;

exports[`parser > snapshot 2267`] = `"calling function 영 requires negative capability '영'"`;

exports[`parser > snapshot 2268`] = `"instantiation of function 영 required here, but no definition is available"`;

exports[`parser > snapshot 2269`] = `"영 overrides a member function but is not marked 'override'"`;

exports[`parser > snapshot 2270`] = `"GCC does not allow the 영 attribute to be written on a type"`;

exports[`parser > snapshot 2271`] = `"passing variable 영 by reference requires holding 영 일"`;

exports[`parser > snapshot 2272`] = `"일 with 영 attribute must be an object type (invalid 영)"`;

exports[`parser > snapshot 2273`] = `"assigning 영 to itself"`;

exports[`parser > snapshot 2274`] = `"inheritance model ignored on 영"`;

exports[`parser > snapshot 2275`] = `"'objc_externally_retained' can only be applied to local variables 영"`;

exports[`parser > snapshot 2276`] = `"implicit truncation from 영 to bit-field changes value from 영 to 영"`;

exports[`parser > snapshot 2277`] = `"initialization of pointer of type 영 to null from a constant boolean expression"`;

exports[`parser > snapshot 2278`] = `"implicit conversion discards imaginary component: 영 to 영"`;

exports[`parser > snapshot 2279`] = `"implicit conversion from constant value 영 to 'BOOL'; the only well defined values for 'BOOL' are YES and NO"`;

exports[`parser > snapshot 2280`] = `"implicit conversion from enumeration type 영 to different enumeration type 영"`;

exports[`parser > snapshot 2281`] = `"implicit conversion increases floating-point precision: 영 to 영"`;

exports[`parser > snapshot 2282`] = `"implicit conversion from 영 cannot fit within the range of values for 영"`;

exports[`parser > snapshot 2283`] = `"implicit conversion turns floating-point number into integer: 영 to 영"`;

exports[`parser > snapshot 2284`] = `"implicit conversion loses floating-point precision: 영 to 영"`;

exports[`parser > snapshot 2285`] = `"implicit conversion when assigning computation result loses floating-point precision: 영 to 영"`;

exports[`parser > snapshot 2286`] = `"implicit conversion from 영 to 영 changes value from 영 to 영"`;

exports[`parser > snapshot 2287`] = `"implicit conversion of out of range value from 영 to 영 is undefined"`;

exports[`parser > snapshot 2288`] = `"implicit conversion from 영 to 영 changes non-zero value from 영 to 영"`;

exports[`parser > snapshot 2289`] = `"implicit conversion from floating-point type 영 to 'BOOL'"`;

exports[`parser > snapshot 2290`] = `"implicit conversion turns floating-point number into bool: 영 to 영"`;

exports[`parser > snapshot 2291`] = `"implicit conversion from integral type 영 to 'BOOL'"`;

exports[`parser > snapshot 2292`] = `"implicit conversion loses integer precision: 영 to 영"`;

exports[`parser > snapshot 2293`] = `"implicit conversion from 영 to 영 may lose precision"`;

exports[`parser > snapshot 2294`] = `"implicit conversion from 영 to 영 changes value from 영 to 영"`;

exports[`parser > snapshot 2295`] = `"implicit conversion loses integer precision: 영 to 영"`;

exports[`parser > snapshot 2296`] = `"implicit conversion from 영 to 영 changes value from 영 to 영"`;

exports[`parser > snapshot 2297`] = `"implicit conversion changes signedness: 영 to 영"`;

exports[`parser > snapshot 2298`] = `"operand of ? changes signedness: 영 to 영"`;

exports[`parser > snapshot 2299`] = `"implicit conversion from 영 to 영 changes value from 영 to 영"`;

exports[`parser > snapshot 2300`] = `"implicit conversion of out of range value from 영 to 영 is undefined"`;

exports[`parser > snapshot 2301`] = `"implicit conversion of 일 constant to 영"`;

exports[`parser > snapshot 2302`] = `"address of일 '영' will always evaluate to 'true'"`;

exports[`parser > snapshot 2303`] = `"implicit conversion turns string literal into bool: 영 to 영"`;

exports[`parser > snapshot 2304`] = `"implicit conversion turns vector to scalar: 영 to 영"`;

exports[`parser > snapshot 2305`] = `"class property 영 requires method 영 to be defined - use @dynamic or provide a method implementation in this class implementation"`;

exports[`parser > snapshot 2306`] = `"class property 영 requires method 영 to be defined - use @dynamic or provide a method implementation in this category"`;

exports[`parser > snapshot 2307`] = `"default assign attribute on property 영 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]"`;

exports[`parser > snapshot 2308`] = `"declaration of built-in function '영' requires the declaration of the 'jmp_buf' type, commonly provided in the header <setjmp.h>."`;

exports[`parser > snapshot 2309`] = `"declaration of built-in function '영' requires inclusion of the header <영>"`;

exports[`parser > snapshot 2310`] = `"implicit declaration of function 영"`;

exports[`parser > snapshot 2311`] = `"import 영 cannot be applied to a function with a definition"`;

exports[`parser > snapshot 2312`] = `"direct base 영 is inaccessible due to ambiguity:영"`;

exports[`parser > snapshot 2313`] = `"영"`;

exports[`parser > snapshot 2314`] = `"incompatible vector types 영"`;

exports[`parser > snapshot 2315`] = `"encoding of 영 type is incomplete because 영 component has unknown encoding"`;

exports[`parser > snapshot 2316`] = `"영"`;

exports[`parser > snapshot 2317`] = `"영"`;

exports[`parser > snapshot 2318`] = `"constant expression evaluates to 영 which cannot be narrowed to type 영 in C++11"`;

exports[`parser > snapshot 2319`] = `"type 영 cannot be narrowed to 영 in initializer list in C++11"`;

exports[`parser > snapshot 2320`] = `"non-constant-expression cannot be narrowed from type 영 to 영 in initializer list in C++11"`;

exports[`parser > snapshot 2321`] = `"initializing pointer member 영 with the stack address of 일 영"`;

exports[`parser > snapshot 2322`] = `"일 영"`;

exports[`parser > snapshot 2323`] = `"initializer 영overrides prior initialization of this subobject"`;

exports[`parser > snapshot 2324`] = `"instance method 영 not found (return type defaults to 'id')"`;

exports[`parser > snapshot 2325`] = `"instance method 영 not found (return type defaults to 'id'); did you mean 일?"`;

exports[`parser > snapshot 2326`] = `"instance method 영 found instead of class method 영"`;

exports[`parser > snapshot 2327`] = `"cast to 영 from smaller integer type 영"`;

exports[`parser > snapshot 2328`] = `"cast to 영 from smaller integer type 영"`;

exports[`parser > snapshot 2329`] = `"영"`;

exports[`parser > snapshot 2330`] = `"local declaration of 영 hides instance variable"`;

exports[`parser > snapshot 2331`] = `"ignored 'inline' attribute on kernel function 영"`;

exports[`parser > snapshot 2332`] = `"kernel function 영 is a member function; this may not be accepted by nvcc"`;

exports[`parser > snapshot 2333`] = `"converting the result of '<<' to a boolean always evaluates to 영"`;

exports[`parser > snapshot 2334`] = `"converting the result of '<<' to a boolean; did you mean '(영) != 0'?"`;

exports[`parser > snapshot 2335`] = `"영 '영' is acquired exclusively and shared in the same scope"`;

exports[`parser > snapshot 2336`] = `"영 '영' is not held on every path through here"`;

exports[`parser > snapshot 2337`] = `"use of logical '영' with constant operand"`;

exports[`parser > snapshot 2338`] = `"logical not is only applied to the left hand side of this 영"`;

exports[`parser > snapshot 2339`] = `"'영' is bound to current loop, GCC binds it to the enclosing loop"`;

exports[`parser > snapshot 2340`] = `"state of variable '영' must match at the entry and exit of loop"`;

exports[`parser > snapshot 2341`] = `"taking the max of 영 is always equal to the other value"`;

exports[`parser > snapshot 2342`] = `"variable 영 may be uninitialized when 일"`;

exports[`parser > snapshot 2343`] = `"영 may not respond to 영"`;

exports[`parser > snapshot 2344`] = `"extra qualification on member 영"`;

exports[`parser > snapshot 2345`] = `"size argument in 영 call is a comparison"`;

exports[`parser > snapshot 2346`] = `"일 on 영 (영 vs. 영)"`;

exports[`parser > snapshot 2347`] = `"일 is available"`;

exports[`parser > snapshot 2348`] = `"'delete영'?"`;

exports[`parser > snapshot 2349`] = `"import 일 (영) of the previous declaration"`;

exports[`parser > snapshot 2350`] = `"nullability specifier 영 conflicts with existing specifier 영"`;

exports[`parser > snapshot 2351`] = `"영 does not match previous declaration"`;

exports[`parser > snapshot 2352`] = `"%plural{1:enumeration value 영 not handled in switch|2:enumeration values 영 and 영 not handled in switch|3:enumeration values 영, 영, and 영 not handled in switch|:영 enumeration values not handled in switch: 영, 영, 영...}0"`;

exports[`parser > snapshot 2353`] = `"no case matching constant switch condition '영'"`;

exports[`parser > snapshot 2354`] = `"missing field 영 initializer"`;

exports[`parser > snapshot 2355`] = `"no previous prototype for function 영"`;

exports[`parser > snapshot 2356`] = `"영 availability is ignored without a valid 'SDKSettings.json' in the SDK"`;

exports[`parser > snapshot 2357`] = `"missing sentinel in 영"`;

exports[`parser > snapshot 2358`] = `"no previous extern declaration for non-static variable 영"`;

exports[`parser > snapshot 2359`] = `"comparison of integers of different signs: 영 and 영"`;

exports[`parser > snapshot 2360`] = `"modifying constructor parameter 영 that shadows a field of 영"`;

exports[`parser > snapshot 2361`] = `"multiple methods named 영 found"`;

exports[`parser > snapshot 2362`] = `"several methods with selector 영 of mismatched types are found for the @selector expression"`;

exports[`parser > snapshot 2363`] = `"extra qualification on member 영"`;

exports[`parser > snapshot 2364`] = `"array backing 영 will be destroyed at the end of the full-expression"`;

exports[`parser > snapshot 2365`] = `"auto property synthesis will not synthesize property 영 because it is 'readwrite' but it will be synthesized 'readonly' via another property"`;

exports[`parser > snapshot 2366`] = `"auto property synthesis will not synthesize property 영 because it cannot share an ivar with another synthesized property"`;

exports[`parser > snapshot 2367`] = `"일 영 does not declare any constructor to initialize its non-modifiable members"`;

exports[`parser > snapshot 2368`] = `"dynamic_cast will not work since RTTI data is disabled by 영"`;

exports[`parser > snapshot 2369`] = `"typeid will not work since RTTI data is disabled by 영"`;

exports[`parser > snapshot 2370`] = `"enums in the Microsoft ABI are signed integers by default; consider giving the enum 영 an unsigned underlying type to make this code portable"`;

exports[`parser > snapshot 2371`] = `"영 '영' is still held at the end of function"`;

exports[`parser > snapshot 2372`] = `"영 attribute is ignored because there exists no call expression inside the statement"`;

exports[`parser > snapshot 2373`] = `"conflicting parameter types in declaration of 영: 영 vs 영"`;

exports[`parser > snapshot 2374`] = `"conflicting parameter types in implementation of 영: 영 vs 영"`;

exports[`parser > snapshot 2375`] = `"conflicting return type in declaration of 영: 영 vs 영"`;

exports[`parser > snapshot 2376`] = `"conflicting return type in implementation of 영: 영 vs 영"`;

exports[`parser > snapshot 2377`] = `"expression which evaluates to zero treated as a null pointer constant of type 영"`;

exports[`parser > snapshot 2378`] = `"cannot pass 일; expected type from format string was 영"`;

exports[`parser > snapshot 2379`] = `"영 has virtual functions but non-virtual destructor"`;

exports[`parser > snapshot 2380`] = `"comparison of nonnull 일' on first encounter"`;

exports[`parser > snapshot 2381`] = `"function 영 declared 'noreturn' should not return"`;

exports[`parser > snapshot 2382`] = `"use of unary operator that may be intended as compound assignment (영=)"`;

exports[`parser > snapshot 2383`] = `"not enough variable arguments in 영 declaration to fit a sentinel"`;

exports[`parser > snapshot 2384`] = `"case value not in enumerated type 영"`;

exports[`parser > snapshot 2385`] = `"integer constant not in range of enumerated type 영"`;

exports[`parser > snapshot 2386`] = `"영 attribute only applies to 일 parameters"`;

exports[`parser > snapshot 2387`] = `"영 attribute only applies to 일"`;

exports[`parser > snapshot 2388`] = `"overriding method has mismatched ns_returns_영 attributes"`;

exports[`parser > snapshot 2389`] = `"comparison between NULL and non-pointer 일"`;

exports[`parser > snapshot 2390`] = `"comparison of 일"`;

exports[`parser > snapshot 2391`] = `"synthesized setter 영 for null_resettable property 영 does not handle nil"`;

exports[`parser > snapshot 2392`] = `"null returned from 영 that requires a non-null return value"`;

exports[`parser > snapshot 2393`] = `"nullability specifier 영 cannot be applied to non-pointer type 영; did you mean to apply the specifier to the 일?"`;

exports[`parser > snapshot 2394`] = `"inferring '_Nonnull' for pointer type within 영 is deprecated"`;

exports[`parser > snapshot 2395`] = `"implicit conversion from nullable pointer 영 to non-nullable pointer type 영"`;

exports[`parser > snapshot 2396`] = `"영 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)"`;

exports[`parser > snapshot 2397`] = `"string is ill-formed as UTF-8 and will become a null 영 when boxed"`;

exports[`parser > snapshot 2398`] = `"using 영 directive in 일"`;

exports[`parser > snapshot 2399`] = `"adding 영 to 영 might cause circular dependency in container"`;

exports[`parser > snapshot 2400`] = `"object of type 영 is not compatible with 일 영"`;

exports[`parser > snapshot 2401`] = `"영 attribute isn't implemented by this Objective-C runtime"`;

exports[`parser > snapshot 2402`] = `"direct attribute on property 영 ignored (not implemented by this Objective-C runtime)"`;

exports[`parser > snapshot 2403`] = `"method override for the designated initializer of the superclass 영 not found"`;

exports[`parser > snapshot 2404`] = `"영 bridges to 영, not 영"`;

exports[`parser > snapshot 2405`] = `"영 cannot bridge to 영"`;

exports[`parser > snapshot 2406`] = `"direct comparison of 영 has undefined behavior"`;

exports[`parser > snapshot 2407`] = `"method possibly missing a [super 영] call"`;

exports[`parser > snapshot 2408`] = `"objc_precise_lifetime is not meaningful for 영 objects"`;

exports[`parser > snapshot 2409`] = `"using 영 with a literal is redundant"`;

exports[`parser > snapshot 2410`] = `"parameterized class 영 already conforms to the protocols listed; did you forget a '*'?"`;

exports[`parser > snapshot 2411`] = `"영 attribute cannot be applied to 일"`;

exports[`parser > snapshot 2412`] = `"class 영 defined without specifying a base class"`;

exports[`parser > snapshot 2413`] = `"영 is incompatible with selectors that return a 일 type"`;

exports[`parser > snapshot 2414`] = `"allocator with the 'thread' trait access has unspecified behavior on '영' directive"`;

exports[`parser > snapshot 2415`] = `"score expressions in the OpenMP context selector need to be constant; 영 is not and will be ignored"`;

exports[`parser > snapshot 2416`] = `"zero linear step (영 일should probably be const)"`;

exports[`parser > snapshot 2417`] = `"Type 영 is not trivially copyable and not guaranteed to be mapped correctly"`;

exports[`parser > snapshot 2418`] = `"array section 영 is of type 'char'"`;

exports[`parser > snapshot 2419`] = `"allocate directive specifies 일"`;

exports[`parser > snapshot 2420`] = `"영 attribute is deprecated and ignored in OpenCL version 영"`;

exports[`parser > snapshot 2421`] = `"passing non-generic address space pointer to 영 may cause dynamic conversion affecting performance"`;

exports[`parser > snapshot 2422`] = `"영 should not return a null pointer unless it is declared 'throw()'일"`;

exports[`parser > snapshot 2423`] = `"os_log() '%%n' format specifier is not allowed"`;

exports[`parser > snapshot 2424`] = `"result of comparison of 일 is always 영"`;

exports[`parser > snapshot 2425`] = `"type 영 requires 영 bytes of alignment and the default allocator only guarantees 영 bytes"`;

exports[`parser > snapshot 2426`] = `"overloaded operator 영 has higher precedence than comparison operator"`;

exports[`parser > snapshot 2427`] = `"일 hides overloaded virtual 영"`;

exports[`parser > snapshot 2428`] = `"passing 영-byte aligned argument to 영-byte aligned parameter 영 of 영 may result in an unaligned pointer access"`;

exports[`parser > snapshot 2429`] = `"parameter '영' not in expected state when the function returns: expected '영', observed '영'"`;

exports[`parser > snapshot 2430`] = `"argument not in expected state; expected '영', observed '영'"`;

exports[`parser > snapshot 2431`] = `"영 is a large (영 bytes) pass-by-value argument; pass it by reference instead ?"`;

exports[`parser > snapshot 2432`] = `"parentheses were disambiguated as redundant parentheses around declaration of variable named 영"`;

exports[`parser > snapshot 2433`] = `"passing object of class type 영 through variadic 일"`;

exports[`parser > snapshot 2434`] = `"taking the absolute value of 일 type 영 is suspicious"`;

exports[`parser > snapshot 2435`] = `"performing pointer arithmetic on a null pointer has undefined behavior영"`;

exports[`parser > snapshot 2436`] = `"comparing a pointer to a null character constant; did you mean to compare to 영?"`;

exports[`parser > snapshot 2437`] = `"dereference of type 영 that was reinterpret_cast from type 영 has undefined behavior"`;

exports[`parser > snapshot 2438`] = `"performing pointer subtraction with a null pointer 영 undefined behavior"`;

exports[`parser > snapshot 2439`] = `"cast to smaller integer type 영 from 영"`;

exports[`parser > snapshot 2440`] = `"cast to smaller integer type 영 from 영"`;

exports[`parser > snapshot 2441`] = `"@selector expression formed with potentially direct selector 영"`;

exports[`parser > snapshot 2442`] = `"unused attribute 영 in '#pragma clang attribute push' region"`;

exports[`parser > snapshot 2443`] = `"#pragma options align=reset failed: 영"`;

exports[`parser > snapshot 2444`] = `"value of #pragma pack(show) == 영"`;

exports[`parser > snapshot 2445`] = `"#pragma 영(pop, ...) failed: 영"`;

exports[`parser > snapshot 2446`] = `"undeclared variable 영 used as an argument for '#pragma unused'"`;

exports[`parser > snapshot 2447`] = `"operator '?:' has lower precedence than '영'; '영' will be evaluated first"`;

exports[`parser > snapshot 2448`] = `"영 has lower precedence than 영; 영 will be evaluated first"`;

exports[`parser > snapshot 2449`] = `"operator '?:' has lower precedence than '영'; '영' will be evaluated first"`;

exports[`parser > snapshot 2450`] = `"object format flags cannot be used with '영' conversion specifier"`;

exports[`parser > snapshot 2451`] = `"'영 is missing a matching 'int' argument"`;

exports[`parser > snapshot 2452`] = `"field 일 should have type 영, but argument has type 영"`;

exports[`parser > snapshot 2453`] = `"flag '영' is ignored when flag '영' is present"`;

exports[`parser > snapshot 2454`] = `"more '%%' conversions than data arguments"`;

exports[`parser > snapshot 2455`] = `"'영' is not a valid object format flag"`;

exports[`parser > snapshot 2456`] = `"flag '영' results in undefined behavior with '영' conversion specifier"`;

exports[`parser > snapshot 2457`] = `"일 used with '영' conversion specifier, resulting in undefined behavior"`;

exports[`parser > snapshot 2458`] = `"data argument position '영' exceeds the number of data arguments (영)"`;

exports[`parser > snapshot 2459`] = `"property 영 not found on object of type 영; did you mean to access property 영?"`;

exports[`parser > snapshot 2460`] = `"'영' attribute on property 영 does not match the property inherited from 영"`;

exports[`parser > snapshot 2461`] = `"property access is using 영 method which is deprecated"`;

exports[`parser > snapshot 2462`] = `"getter name mismatch between property redeclaration (영) and its original declaration (영)"`;

exports[`parser > snapshot 2463`] = `"property type 영 is incompatible with type 영 inherited from 영"`;

exports[`parser > snapshot 2464`] = `"property 일 was selected for synthesis"`;

exports[`parser > snapshot 2465`] = `"passing the value that 영 points to by reference requires holding 영 일"`;

exports[`parser > snapshot 2466`] = `"the pointer incremented by 영 refers past the end of the array (that contains 영 element%s2)"`;

exports[`parser > snapshot 2467`] = `"the pointer incremented by 영 refers past the last possible element for an array in 영-bit address space containing 영-bit (영-byte) elements (max possible 영 element%s5)"`;

exports[`parser > snapshot 2468`] = `"the pointer decremented by 영 refers before the beginning of the array"`;

exports[`parser > snapshot 2469`] = `"'영' type qualifier일 on return type %plural{1:has|:have}1 no effect"`;

exports[`parser > snapshot 2470`] = `"attribute 'readonly' of property 영 restricts attribute 'readwrite' of property inherited from 영"`;

exports[`parser > snapshot 2471`] = `"receiver 영 is a forward class and corresponding @interface may not exist"`;

exports[`parser > snapshot 2472`] = `"receiver type 영 for instance message is a forward declaration"`;

exports[`parser > snapshot 2473`] = `"incompatible redeclaration of library function 영"`;

exports[`parser > snapshot 2474`] = `"일 redeclared without 영 attribute: previous 영 ignored"`;

exports[`parser > snapshot 2475`] = `"영 redeclared without 'dllimport' attribute: 'dllexport' attribute added"`;

exports[`parser > snapshot 2476`] = `"#pragma redefine_extname is applicable to external C declarations only; not applied to 일 영"`;

exports[`parser > snapshot 2477`] = `"redefinition of 영 will not be visible outside of this function"`;

exports[`parser > snapshot 2478`] = `"variable 영 is 일 both in the loop header and in the loop body"`;

exports[`parser > snapshot 2479`] = `"reference 영 is not yet bound to a value when used here"`;

exports[`parser > snapshot 2480`] = `"'reinterpret_cast' 일 영 behaves differently from 'static_cast'"`;

exports[`parser > snapshot 2481`] = `"method is expected to return an instance of its class type 영"`;

exports[`parser > snapshot 2482`] = `"protocol method is expected to return an instance of the implementing class, but is declared to return 영"`;

exports[`parser > snapshot 2483`] = `"영 by zero is undefined"`;

exports[`parser > snapshot 2484`] = `"identifier 영 is reserved because 일"`;

exports[`parser > snapshot 2485`] = `"returning 영 local temporary object"`;

exports[`parser > snapshot 2486`] = `"일 영 returned"`;

exports[`parser > snapshot 2487`] = `"non-void 일 영 should return a value"`;

exports[`parser > snapshot 2488`] = `"return state set for an unconsumable type '영'"`;

exports[`parser > snapshot 2489`] = `"return value not in expected state; expected '영', observed '영'"`;

exports[`parser > snapshot 2490`] = `"return value of 영 is a large (영 bytes) pass-by-value object; pass it by reference instead ?"`;

exports[`parser > snapshot 2491`] = `"영 has C-linkage specified, but returns user-defined type 영 which is incompatible with C"`;

exports[`parser > snapshot 2492`] = `"영 has C-linkage specified, but returns incomplete type 영 which could be incompatible with C"`;

exports[`parser > snapshot 2493`] = `"instance method 영 is being used on 'Class' which is not in the root class"`;

exports[`parser > snapshot 2494`] = `"sampler initializer has invalid 영 bits"`;

exports[`parser > snapshot 2495`] = `"no closing ']' for '%%[' in scanf format string"`;

exports[`parser > snapshot 2496`] = `"second argument to 'va_arg' is of promotable type 영; this va_arg has undefined behavior because arguments will be promoted to 영"`;

exports[`parser > snapshot 2497`] = `"second argument to 'va_arg' is of non-POD type 영"`;

exports[`parser > snapshot 2498`] = `"second argument to 'va_arg' is of ARC ownership-qualified type 영"`;

exports[`parser > snapshot 2499`] = `"explicitly assigning value of variable of type 영 to itself"`;

exports[`parser > snapshot 2500`] = `"explicitly assigning value of variable of type 영 to itself"`;

exports[`parser > snapshot 2501`] = `"explicitly moving variable of type 영 to itself"`;

exports[`parser > snapshot 2502`] = `"property 영 requires method 영 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation"`;

exports[`parser > snapshot 2503`] = `"property 영 requires method 영 to be defined - use @dynamic or provide a method implementation in this category"`;

exports[`parser > snapshot 2504`] = `"일shadows member inherited from type 영"`;

exports[`parser > snapshot 2505`] = `"signed shift result (영) requires 영 bits to represent, but 영 only has 영 bits"`;

exports[`parser > snapshot 2506`] = `"signed shift result (영) sets the sign bit of the shift expression's type (영) and becomes negative"`;

exports[`parser > snapshot 2507`] = `"signed bit-field 영 needs an extra bit to represent the largest positive enumerators of 영"`;

exports[`parser > snapshot 2508`] = `"sizeof on pointer operation will return size of 영 instead of 영"`;

exports[`parser > snapshot 2509`] = `"sizeof on array function parameter will return size of 영 instead of 영"`;

exports[`parser > snapshot 2510`] = `"'영' call operates on objects of type 영 while the size is based on a different type 영"`;

exports[`parser > snapshot 2511`] = `"did you mean to 영?"`;

exports[`parser > snapshot 2512`] = `"argument to 'sizeof' in 영 call is the same pointer type 영 as the 일; expected 영 or an explicit length"`;

exports[`parser > snapshot 2513`] = `"variable 영 is 일"`;

exports[`parser > snapshot 2514`] = `"'영' ignored on this declaration"`;

exports[`parser > snapshot 2515`] = `"array argument is too small; 일, callee requires at least 영"`;

exports[`parser > snapshot 2516`] = `"static variable 영 is suspiciously used within its own initialization"`;

exports[`parser > snapshot 2517`] = `"multiple methods named 영 found"`;

exports[`parser > snapshot 2518`] = `"@selector expression formed with potentially direct selector 영"`;

exports[`parser > snapshot 2519`] = `"this 영 a prototype"`;

exports[`parser > snapshot 2520`] = `"adding 영 to a string pointer does not append to the string"`;

exports[`parser > snapshot 2521`] = `"adding 영 to a string does not append to the string"`;

exports[`parser > snapshot 2522`] = `"result of comparison against 영 is unspecified (use an explicit string comparison function instead)"`;

exports[`parser > snapshot 2523`] = `"size argument in 영 call appears to be size of the source; expected the size of the destination"`;

exports[`parser > snapshot 2524`] = `"영 defined as 일; this is valid, but may result in linker errors under the Microsoft C++ ABI"`;

exports[`parser > snapshot 2525`] = `"일; this is valid, but may result in linker errors under the Microsoft C++ ABI"`;

exports[`parser > snapshot 2526`] = `"subtraction of pointers to type 영 of zero size has undefined behavior"`;

exports[`parser > snapshot 2527`] = `"영"`;

exports[`parser > snapshot 2528`] = `"영"`;

exports[`parser > snapshot 2529`] = `"일 영 could be declared with attribute 'noreturn'"`;

exports[`parser > snapshot 2530`] = `"field 영 can overwrite instance variable 영 with variable sized type 영 in superclass 영"`;

exports[`parser > snapshot 2531`] = `"영; did you mean to transpose the last two arguments?"`;

exports[`parser > snapshot 2532`] = `"taking address of packed member 영 of class or structure 일 may result in an unaligned pointer value"`;

exports[`parser > snapshot 2533`] = `"result of comparison of 일 is always 영"`;

exports[`parser > snapshot 2534`] = `"result of comparison of constant 영 with expression of type 'BOOL' is always 영, as the only well defined values for 'BOOL' are YES and NO"`;

exports[`parser > snapshot 2535`] = `"result of comparison of 일 is always 영"`;

exports[`parser > snapshot 2536`] = `"result of comparison 일 is always 영"`;

exports[`parser > snapshot 2537`] = `"overlapping comparisons always evaluate to 영"`;

exports[`parser > snapshot 2538`] = `"calling 영 is a violation of trusted computing base '영'"`;

exports[`parser > snapshot 2539`] = `"non-type template argument with value '영' converted to '영' for unsigned template parameter of type 영"`;

exports[`parser > snapshot 2540`] = `"non-type template argument value '영' truncated to '영' for template parameter of type 영"`;

exports[`parser > snapshot 2541`] = `"dependent nested name specifier '영' for friend template declaration is not supported; ignoring this friend declaration"`;

exports[`parser > snapshot 2542`] = `"dependent nested name specifier '영' for friend class declaration is not supported; turning off access control for 영"`;

exports[`parser > snapshot 2543`] = `"'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to 영"`;

exports[`parser > snapshot 2544`] = `"영 attribute requires arguments whose type is annotated with 'capability' attribute; type here is 영"`;

exports[`parser > snapshot 2545`] = `"영 attribute can only be applied in a context annotated with 'capability' attribute"`;

exports[`parser > snapshot 2546`] = `"영 only applies to pointer types; type here is 영"`;

exports[`parser > snapshot 2547`] = `"ignoring 영 attribute because its argument is invalid"`;

exports[`parser > snapshot 2548`] = `"영 attribute without capability arguments refers to 'this', but 영 isn't annotated with 'capability' or 'scoped_lockable' attribute"`;

exports[`parser > snapshot 2549`] = `"영 attribute without capability arguments can only be applied to non-static methods of a class"`;

exports[`parser > snapshot 2550`] = `"영 has a non-throwing exception specification but can still throw"`;

exports[`parser > snapshot 2551`] = `"일 of the first field in transparent union; transparent_union attribute ignored"`;

exports[`parser > snapshot 2552`] = `"first field of a transparent union cannot have 일 type 영; transparent_union attribute ignored"`;

exports[`parser > snapshot 2553`] = `"'영' only applies to 일 types; type here is 영"`;

exports[`parser > snapshot 2554`] = `"specified 영 type tag requires a null pointer"`;

exports[`parser > snapshot 2555`] = `"argument type 영 doesn't match specified 영 type tag 일"`;

exports[`parser > snapshot 2556`] = `"'영' qualifier on function type 영 has no effect"`;

exports[`parser > snapshot 2557`] = `"'영' qualifier on function type 영 has unspecified behavior"`;

exports[`parser > snapshot 2558`] = `"ordered comparison of function pointers (영 and 영)"`;

exports[`parser > snapshot 2559`] = `"'영' qualifier on reference type 영 has no effect"`;

exports[`parser > snapshot 2560`] = `"vector operands do not have the same elements sizes (영 and 영)"`;

exports[`parser > snapshot 2561`] = `"영 may be unavailable because the receiver type is unknown"`;

exports[`parser > snapshot 2562`] = `"undeclared selector 영"`;

exports[`parser > snapshot 2563`] = `"undeclared selector 영; did you mean 영?"`;

exports[`parser > snapshot 2564`] = `"cannot find interface declaration for 영"`;

exports[`parser > snapshot 2565`] = `"cannot find interface declaration for 영; did you mean 영?"`;

exports[`parser > snapshot 2566`] = `"method definition for 영 not found"`;

exports[`parser > snapshot 2567`] = `"cannot find protocol definition for 영"`;

exports[`parser > snapshot 2568`] = `"inline function 영 is not defined"`;

exports[`parser > snapshot 2569`] = `"영 일 has internal linkage but is not defined"`;

exports[`parser > snapshot 2570`] = `"reinterpret_cast from 영 to 영 has undefined behavior"`;

exports[`parser > snapshot 2571`] = `"영 is only available on 영 영 or newer"`;

exports[`parser > snapshot 2572`] = `"영 is only available on 영 영 or newer"`;

exports[`parser > snapshot 2573`] = `"__declspec attribute 영 is not supported"`;

exports[`parser > snapshot 2574`] = `"method 영 in protocol 영 not implemented"`;

exports[`parser > snapshot 2575`] = `"no method with selector 영 is implemented in this translation unit"`;

exports[`parser > snapshot 2576`] = `"block pointer variable 영 is 일 when captured by block"`;

exports[`parser > snapshot 2577`] = `"variable 영 is uninitialized when passed as a const reference argument here"`;

exports[`parser > snapshot 2578`] = `"variable 영 is uninitialized when used within its own initialization"`;

exports[`parser > snapshot 2579`] = `"reference 영 is not yet bound to a value when used within its own initialization"`;

exports[`parser > snapshot 2580`] = `"variable 영 is uninitialized when 일"`;

exports[`parser > snapshot 2581`] = `"isa trait '영' is not known to the current target; verify the spelling or consider restricting the context selector with the 'arch' selector further"`;

exports[`parser > snapshot 2582`] = `"unknown sanitizer '영' ignored"`;

exports[`parser > snapshot 2583`] = `"releasing 영 '영' that was not held"`;

exports[`parser > snapshot 2584`] = `"releasing 영 '영' using 일 access"`;

exports[`parser > snapshot 2585`] = `"일 영 is not needed and will not be emitted"`;

exports[`parser > snapshot 2586`] = `"member function 영 is not needed and will not be emitted"`;

exports[`parser > snapshot 2587`] = `"'static' function 영 declared in header file should be declared 'static inline'"`;

exports[`parser > snapshot 2588`] = `"multiple unsequenced modifications to 영"`;

exports[`parser > snapshot 2589`] = `"unsequenced modification and access to 영"`;

exports[`parser > snapshot 2590`] = `"taking the absolute value of unsigned type 영 has no effect"`;

exports[`parser > snapshot 2591`] = `"result of comparison of 일 is always 영"`;

exports[`parser > snapshot 2592`] = `"assigning value of signed enum type 영 to unsigned bit-field 영; negative enumerators of enum 영 will be converted to positive values"`;

exports[`parser > snapshot 2593`] = `"result of comparison of 일 is always 영, since char is interpreted as unsigned"`;

exports[`parser > snapshot 2594`] = `"result of comparison of 일 is always 영"`;

exports[`parser > snapshot 2595`] = `"sorry, lifetime extension of 영 will end at the end of the full-expression"`;

exports[`parser > snapshot 2596`] = `"일 '영' in the 'target' attribute string; 'target' attribute ignored"`;

exports[`parser > snapshot 2597`] = `"parameter 영 set but not used"`;

exports[`parser > snapshot 2598`] = `"variable 영 set but not used"`;

exports[`parser > snapshot 2599`] = `"ignoring return value of function declared with 영 attribute"`;

exports[`parser > snapshot 2600`] = `"영 comparison result unused"`;

exports[`parser > snapshot 2601`] = `"unused variable 영"`;

exports[`parser > snapshot 2602`] = `"ignoring temporary created by a constructor declared with 영 attribute"`;

exports[`parser > snapshot 2603`] = `"ignoring temporary created by a constructor declared with 영 attribute: 영"`;

exports[`parser > snapshot 2604`] = `"unused exception parameter 영"`;

exports[`parser > snapshot 2605`] = `"unused function 영"`;

exports[`parser > snapshot 2606`] = `"unused label 영"`;

exports[`parser > snapshot 2607`] = `"lambda capture 영 is not 일"`;

exports[`parser > snapshot 2608`] = `"unused 일 영"`;

exports[`parser > snapshot 2609`] = `"unused member function 영"`;

exports[`parser > snapshot 2610`] = `"unused parameter 영"`;

exports[`parser > snapshot 2611`] = `"private field 영 is not used"`;

exports[`parser > snapshot 2612`] = `"ivar 영 which backs the property is not referenced in this property's accessor"`;

exports[`parser > snapshot 2613`] = `"ignoring return value of function declared with 영 attribute"`;

exports[`parser > snapshot 2614`] = `"ignoring return value of function declared with 영 attribute: 영"`;

exports[`parser > snapshot 2615`] = `"unused 일 template 영"`;

exports[`parser > snapshot 2616`] = `"unused variable 영"`;

exports[`parser > snapshot 2617`] = `"invalid invocation of method '영' on object '영' while it is in the '영' state"`;

exports[`parser > snapshot 2618`] = `"invalid invocation of method '영' on a temporary object while it is in the '영' state"`;

exports[`parser > snapshot 2619`] = `"영 was marked unused but was used"`;

exports[`parser > snapshot 2620`] = `"user-defined literal suffixes not starting with '_' are reserved영"`;

exports[`parser > snapshot 2621`] = `"passing 영 to 'va_start' has undefined behavior"`;

exports[`parser > snapshot 2622`] = `"일"`;

exports[`parser > snapshot 2623`] = `"일"`;

exports[`parser > snapshot 2624`] = `"일"`;

exports[`parser > snapshot 2625`] = `"instantiation of variable 영 required here, but no definition is available"`;

exports[`parser > snapshot 2626`] = `"일"`;

exports[`parser > snapshot 2627`] = `"일"`;

exports[`parser > snapshot 2628`] = `"일"`;

exports[`parser > snapshot 2629`] = `"field 영 with variable sized type 영 is not visible to subclasses and can conflict with their instance variables"`;

exports[`parser > snapshot 2630`] = `"variable일 used in loop condition not modified in loop body"`;

exports[`parser > snapshot 2631`] = `"defaulted move assignment operator of 영 will move assign virtual base class 영 multiple times"`;

exports[`parser > snapshot 2632`] = `"cast to smaller integer type 영 from 영"`;

exports[`parser > snapshot 2633`] = `"cast to smaller integer type 영 from 영"`;

exports[`parser > snapshot 2634`] = `"weak identifier 영 never declared"`;

exports[`parser > snapshot 2635`] = `"an already-declared variable is made a weak_import declaration 영"`;

exports[`parser > snapshot 2636`] = `"explicit template instantiation 영 will emit a vtable in every translation unit"`;

exports[`parser > snapshot 2637`] = `"영 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit"`;

exports[`parser > snapshot 2638`] = `"using 일 type"`;

exports[`parser > snapshot 2639`] = `"result of '영' is 영; did you mean exponentiation?"`;

exports[`parser > snapshot 2640`] = `"result of '영' is 영; did you mean '영'?"`;

exports[`parser > snapshot 2641`] = `"result of '영' is 영; did you mean '영' (영)?"`;

exports[`parser > snapshot 2642`] = `"영 in C++"`;

exports[`parser > snapshot 2643`] = `"영 in C++"`;

exports[`parser > snapshot 2644`] = `""`;
